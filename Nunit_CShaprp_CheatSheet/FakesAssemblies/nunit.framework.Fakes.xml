<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nunit.framework.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.NunitframeworkDelegates">
            <summary>Contains custom delegates used for the stubs and shims of nunit.framework</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.AllItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.#ctor(NUnit.Framework.Constraints.AllItemsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.ConstructorConstraint">
            <summary>Sets the shim of AllItemsConstraint.AllItemsConstraint(Constraint itemConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.MatchesObject">
            <summary>Sets the shim of AllItemsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of AllItemsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of AllItemsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of AllItemsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAllOperator">
            <summary>Shim type of NUnit.Framework.Constraints.AllOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllOperator.#ctor(NUnit.Framework.Constraints.AllOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllOperator.ApplyPrefixConstraint">
            <summary>Sets the shim of AllOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllOperator.Constructor">
            <summary>Sets the shim of AllOperator.AllOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAllOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllOperator.AllInstances.ApplyPrefixConstraint">
            <summary>Sets the shim of AllOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAndConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.AndConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.#ctor(NUnit.Framework.Constraints.AndConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.ConstructorConstraintConstraint">
            <summary>Sets the shim of AndConstraint.AndConstraint(Constraint left, Constraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.MatchesObject">
            <summary>Sets the shim of AndConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of AndConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of AndConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of AndConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of AndConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of AndConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAndOperator">
            <summary>Shim type of NUnit.Framework.Constraints.AndOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndOperator.#ctor(NUnit.Framework.Constraints.AndOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndOperator.ApplyOperatorConstraintConstraint">
            <summary>Sets the shim of AndOperator.ApplyOperator(Constraint left, Constraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndOperator.Constructor">
            <summary>Sets the shim of AndOperator.AndOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAndOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndOperator.AllInstances.ApplyOperatorConstraintConstraint">
            <summary>Sets the shim of AndOperator.ApplyOperator(Constraint left, Constraint right)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.AssignableFromConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.#ctor(NUnit.Framework.Constraints.AssignableFromConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.ConstructorType">
            <summary>Sets the shim of AssignableFromConstraint.AssignableFromConstraint(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.MatchesObject">
            <summary>Sets the shim of AssignableFromConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of AssignableFromConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of AssignableFromConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of AssignableFromConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.AssignableToConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.#ctor(NUnit.Framework.Constraints.AssignableToConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.ConstructorType">
            <summary>Sets the shim of AssignableToConstraint.AssignableToConstraint(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.MatchesObject">
            <summary>Sets the shim of AssignableToConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of AssignableToConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of AssignableToConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of AssignableToConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.AttributeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.#ctor(NUnit.Framework.Constraints.AttributeConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.ConstructorTypeConstraint">
            <summary>Sets the shim of AttributeConstraint.AttributeConstraint(Type type, Constraint baseConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.GetStringRepresentation">
            <summary>Sets the shim of AttributeConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.MatchesObject">
            <summary>Sets the shim of AttributeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of AttributeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of AttributeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of AttributeConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of AttributeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of AttributeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of AttributeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.AttributeExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.#ctor(NUnit.Framework.Constraints.AttributeExistsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.ConstructorType">
            <summary>Sets the shim of AttributeExistsConstraint.AttributeExistsConstraint(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.MatchesObject">
            <summary>Sets the shim of AttributeExistsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of AttributeExistsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of AttributeExistsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of AttributeExistsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator">
            <summary>Shim type of NUnit.Framework.Constraints.AttributeOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.#ctor(NUnit.Framework.Constraints.AttributeOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.ConstructorType">
            <summary>Sets the shim of AttributeOperator.AttributeOperator(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of AttributeOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.AllInstances.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of AttributeOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBasicConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.BasicConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBasicConstraint.#ctor(NUnit.Framework.Constraints.BasicConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBasicConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBasicConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBasicConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBasicConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBasicConstraint.ConstructorObjectString">
            <summary>Sets the shim of BasicConstraint.BasicConstraint(Object expected, String description)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBasicConstraint.MatchesObject">
            <summary>Sets the shim of BasicConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBasicConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of BasicConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBasicConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBasicConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of BasicConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBasicConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of BasicConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.BinaryConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.#ctor(NUnit.Framework.Constraints.BinaryConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.ConstructorConstraintConstraint">
            <summary>Sets the shim of BinaryConstraint.BinaryConstraint(Constraint left, Constraint right)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator">
            <summary>Shim type of NUnit.Framework.Constraints.BinaryOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.#ctor(NUnit.Framework.Constraints.BinaryOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.Constructor">
            <summary>Sets the shim of BinaryOperator.BinaryOperator()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.LeftPrecedenceGet">
            <summary>Sets the shim of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.RightPrecedenceGet">
            <summary>Sets the shim of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.AllInstances.LeftPrecedenceGet">
            <summary>Sets the shim of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.AllInstances.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.AllInstances.RightPrecedenceGet">
            <summary>Sets the shim of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.BinarySerializableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.#ctor(NUnit.Framework.Constraints.BinarySerializableConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.Constructor">
            <summary>Sets the shim of BinarySerializableConstraint.BinarySerializableConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.GetStringRepresentation">
            <summary>Sets the shim of BinarySerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.MatchesObject">
            <summary>Sets the shim of BinarySerializableConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of BinarySerializableConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of BinarySerializableConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of BinarySerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of BinarySerializableConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of BinarySerializableConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of BinarySerializableConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.#ctor(NUnit.Framework.Constraints.CollectionConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.Constructor">
            <summary>Sets the shim of CollectionConstraint.CollectionConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.ConstructorObject">
            <summary>Sets the shim of CollectionConstraint.CollectionConstraint(Object arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.IsEmptyIEnumerable">
            <summary>Sets the shim of CollectionConstraint.IsEmpty(IEnumerable enumerable)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.MatchesObject">
            <summary>Sets the shim of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionContainsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.#ctor(NUnit.Framework.Constraints.CollectionContainsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.ConstructorObject">
            <summary>Sets the shim of CollectionContainsConstraint.CollectionContainsConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of CollectionContainsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.doMatchIEnumerable">
            <summary>Sets the shim of CollectionContainsConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of CollectionContainsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.AllInstances.doMatchIEnumerable">
            <summary>Sets the shim of CollectionContainsConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionEquivalentConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.#ctor(NUnit.Framework.Constraints.CollectionEquivalentConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.ConstructorIEnumerable">
            <summary>Sets the shim of CollectionEquivalentConstraint.CollectionEquivalentConstraint(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of CollectionEquivalentConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.doMatchIEnumerable">
            <summary>Sets the shim of CollectionEquivalentConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of CollectionEquivalentConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.AllInstances.doMatchIEnumerable">
            <summary>Sets the shim of CollectionEquivalentConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionItemsEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.#ctor(NUnit.Framework.Constraints.CollectionItemsEqualConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.CollectionItemsEqualConstraint})">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.CollectionItemsEqualConstraint})">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.UsingOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},NUnit.Framework.Constraints.CollectionItemsEqualConstraint})">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.Constructor">
            <summary>Sets the shim of CollectionItemsEqualConstraint.CollectionItemsEqualConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.ConstructorObject">
            <summary>Sets the shim of CollectionItemsEqualConstraint.CollectionItemsEqualConstraint(Object arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.IgnoreCaseGet">
            <summary>Sets the shim of CollectionItemsEqualConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.ItemsEqualObjectObject">
            <summary>Sets the shim of CollectionItemsEqualConstraint.ItemsEqual(Object x, Object y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.TallyIEnumerable">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Tally(IEnumerable c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.UsingEqualityAdapter">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(EqualityAdapter adapter)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.UsingIComparer">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.UsingIEqualityComparer">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IEqualityComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionItemsEqualConstraint,System.Comparison{``0},NUnit.Framework.Constraints.CollectionItemsEqualConstraint})">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionItemsEqualConstraint,System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.CollectionItemsEqualConstraint})">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.UsingOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionItemsEqualConstraint,System.Collections.Generic.IEqualityComparer{``0},NUnit.Framework.Constraints.CollectionItemsEqualConstraint})">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of CollectionItemsEqualConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.ItemsEqualObjectObject">
            <summary>Sets the shim of CollectionItemsEqualConstraint.ItemsEqual(Object x, Object y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.TallyIEnumerable">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Tally(IEnumerable c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.UsingEqualityAdapter">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(EqualityAdapter adapter)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.UsingIComparer">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.UsingIEqualityComparer">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IEqualityComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator.#ctor(NUnit.Framework.Constraints.CollectionOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator.Constructor">
            <summary>Sets the shim of CollectionOperator.CollectionOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionOrderedConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.#ctor(NUnit.Framework.Constraints.CollectionOrderedConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.CollectionOrderedConstraint})">
            <summary>Sets the shim of CollectionOrderedConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.CollectionOrderedConstraint})">
            <summary>Sets the shim of CollectionOrderedConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.ByString">
            <summary>Sets the shim of CollectionOrderedConstraint.By(String propertyName)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.Constructor">
            <summary>Sets the shim of CollectionOrderedConstraint.CollectionOrderedConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.DescendingGet">
            <summary>Sets the shim of CollectionOrderedConstraint.get_Descending()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.GetStringRepresentation">
            <summary>Sets the shim of CollectionOrderedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.UsingIComparer">
            <summary>Sets the shim of CollectionOrderedConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of CollectionOrderedConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.doMatchIEnumerable">
            <summary>Sets the shim of CollectionOrderedConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionOrderedConstraint,System.Comparison{``0},NUnit.Framework.Constraints.CollectionOrderedConstraint})">
            <summary>Sets the shim of CollectionOrderedConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionOrderedConstraint,System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.CollectionOrderedConstraint})">
            <summary>Sets the shim of CollectionOrderedConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.ByString">
            <summary>Sets the shim of CollectionOrderedConstraint.By(String propertyName)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.DescendingGet">
            <summary>Sets the shim of CollectionOrderedConstraint.get_Descending()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of CollectionOrderedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.UsingIComparer">
            <summary>Sets the shim of CollectionOrderedConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of CollectionOrderedConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.doMatchIEnumerable">
            <summary>Sets the shim of CollectionOrderedConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionSubsetConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.#ctor(NUnit.Framework.Constraints.CollectionSubsetConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.ConstructorIEnumerable">
            <summary>Sets the shim of CollectionSubsetConstraint.CollectionSubsetConstraint(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of CollectionSubsetConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.doMatchIEnumerable">
            <summary>Sets the shim of CollectionSubsetConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of CollectionSubsetConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.AllInstances.doMatchIEnumerable">
            <summary>Sets the shim of CollectionSubsetConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionTally">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionTally</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.#ctor(NUnit.Framework.Constraints.CollectionTally)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.ConstructorNUnitEqualityComparerIEnumerable">
            <summary>Sets the shim of CollectionTally.CollectionTally(NUnitEqualityComparer comparer, IEnumerable c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.CountGet">
            <summary>Sets the shim of CollectionTally.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.ItemsEqualObjectObject">
            <summary>Sets the shim of CollectionTally.ItemsEqual(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.TryRemoveIEnumerable">
            <summary>Sets the shim of CollectionTally.TryRemove(IEnumerable c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.TryRemoveObject">
            <summary>Sets the shim of CollectionTally.TryRemove(Object o)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.AllInstances.CountGet">
            <summary>Sets the shim of CollectionTally.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.AllInstances.ItemsEqualObjectObject">
            <summary>Sets the shim of CollectionTally.ItemsEqual(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.AllInstances.TryRemoveIEnumerable">
            <summary>Sets the shim of CollectionTally.TryRemove(IEnumerable c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.AllInstances.TryRemoveObject">
            <summary>Sets the shim of CollectionTally.TryRemove(Object o)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter">
            <summary>Shim type of NUnit.Framework.Constraints.ComparisonAdapter</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.#ctor(NUnit.Framework.Constraints.ComparisonAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.ForOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.ComparisonAdapter})">
            <summary>Sets the shim of ComparisonAdapter.For(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.ForOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.ComparisonAdapter})">
            <summary>Sets the shim of ComparisonAdapter.For(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.Constructor">
            <summary>Sets the shim of ComparisonAdapter.ComparisonAdapter()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.DefaultGet">
            <summary>Sets the shim of ComparisonAdapter.get_Default()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.ForIComparer">
            <summary>Sets the shim of ComparisonAdapter.For(IComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ComparisonConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.#ctor(NUnit.Framework.Constraints.ComparisonConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.ComparisonConstraint})">
            <summary>Sets the shim of ComparisonConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.ComparisonConstraint})">
            <summary>Sets the shim of ComparisonConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.ConstructorObject">
            <summary>Sets the shim of ComparisonConstraint.ComparisonConstraint(Object arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.ConstructorObjectObject">
            <summary>Sets the shim of ComparisonConstraint.ComparisonConstraint(Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.UsingIComparer">
            <summary>Sets the shim of ComparisonConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.AllInstances.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ComparisonConstraint,System.Comparison{``0},NUnit.Framework.Constraints.ComparisonConstraint})">
            <summary>Sets the shim of ComparisonConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.AllInstances.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ComparisonConstraint,System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.ComparisonConstraint})">
            <summary>Sets the shim of ComparisonConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.AllInstances.UsingIComparer">
            <summary>Sets the shim of ComparisonConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.Constraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.#ctor(NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets the shim of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets the shim of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AfterInt32">
            <summary>Sets the shim of Constraint.After(Int32 delayInMilliseconds)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AfterInt32Int32">
            <summary>Sets the shim of Constraint.After(Int32 delayInMilliseconds, Int32 pollingInterval)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AndGet">
            <summary>Sets the shim of Constraint.get_And()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.BitwiseAndOpConstraintConstraint">
            <summary>Sets the shim of Constraint.op_BitwiseAnd(Constraint left, Constraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.BitwiseOrOpConstraintConstraint">
            <summary>Sets the shim of Constraint.op_BitwiseOr(Constraint left, Constraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.Constructor">
            <summary>Sets the shim of Constraint.Constraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.ConstructorObject">
            <summary>Sets the shim of Constraint.Constraint(Object arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.ConstructorObjectObject">
            <summary>Sets the shim of Constraint.Constraint(Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.DisplayNameGet">
            <summary>Sets the shim of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.DisplayNameSetString">
            <summary>Sets the shim of Constraint.set_DisplayName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.GetStringRepresentation">
            <summary>Sets the shim of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.LogicalNotOpConstraint">
            <summary>Sets the shim of Constraint.op_LogicalNot(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.NUnitFrameworkConstraintsIResolveConstraintResolve">
            <summary>Sets the shim of Constraint.NUnit.Framework.Constraints.IResolveConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.OrGet">
            <summary>Sets the shim of Constraint.get_Or()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.SetBuilderConstraintBuilder">
            <summary>Sets the shim of Constraint.SetBuilder(ConstraintBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.StaticConstructor">
            <summary>Sets the shim of Constraint.Constraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.ToString">
            <summary>Sets the shim of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.WithGet">
            <summary>Sets the shim of Constraint.get_With()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.WriteMessageToMessageWriter">
            <summary>Sets the shim of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint._displayableObject">
            <summary>Sets the shim of Constraint._displayable(Object o)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets the shim of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{NUnit.Framework.Constraints.Constraint,``0,System.Boolean})">
            <summary>Sets the shim of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.AfterInt32">
            <summary>Sets the shim of Constraint.After(Int32 delayInMilliseconds)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.AfterInt32Int32">
            <summary>Sets the shim of Constraint.After(Int32 delayInMilliseconds, Int32 pollingInterval)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.AndGet">
            <summary>Sets the shim of Constraint.get_And()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of Constraint.set_DisplayName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.NUnitFrameworkConstraintsIResolveConstraintResolve">
            <summary>Sets the shim of Constraint.NUnit.Framework.Constraints.IResolveConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.OrGet">
            <summary>Sets the shim of Constraint.get_Or()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.SetBuilderConstraintBuilder">
            <summary>Sets the shim of Constraint.SetBuilder(ConstraintBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.ToString01">
            <summary>Sets the shim of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.WithGet">
            <summary>Sets the shim of Constraint.get_With()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.WriteMessageToMessageWriter">
            <summary>Sets the shim of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.#ctor(NUnit.Framework.Constraints.ConstraintBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AppendConstraint">
            <summary>Sets the shim of ConstraintBuilder.Append(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AppendConstraintOperator">
            <summary>Sets the shim of ConstraintBuilder.Append(ConstraintOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.Constructor">
            <summary>Sets the shim of ConstraintBuilder.ConstraintBuilder()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.IsResolvableGet">
            <summary>Sets the shim of ConstraintBuilder.get_IsResolvable()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ReduceOperatorStackInt32">
            <summary>Sets the shim of ConstraintBuilder.ReduceOperatorStack(Int32 targetPrecedence)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.Resolve">
            <summary>Sets the shim of ConstraintBuilder.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.SetTopOperatorRightContextObject">
            <summary>Sets the shim of ConstraintBuilder.SetTopOperatorRightContext(Object rightContext)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances.AppendConstraint">
            <summary>Sets the shim of ConstraintBuilder.Append(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances.AppendConstraintOperator">
            <summary>Sets the shim of ConstraintBuilder.Append(ConstraintOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances.IsResolvableGet">
            <summary>Sets the shim of ConstraintBuilder.get_IsResolvable()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances.ReduceOperatorStackInt32">
            <summary>Sets the shim of ConstraintBuilder.ReduceOperatorStack(Int32 targetPrecedence)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances.Resolve">
            <summary>Sets the shim of ConstraintBuilder.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances.SetTopOperatorRightContextObject">
            <summary>Sets the shim of ConstraintBuilder.SetTopOperatorRightContext(Object rightContext)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintBuilder+ConstraintStack</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.#ctor(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.ConstructorConstraintBuilder">
            <summary>Sets the shim of ConstraintStack.ConstraintStack(ConstraintBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.EmptyGet">
            <summary>Sets the shim of ConstraintStack.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.Pop">
            <summary>Sets the shim of ConstraintStack.Pop()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.PushConstraint">
            <summary>Sets the shim of ConstraintStack.Push(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.TopGet">
            <summary>Sets the shim of ConstraintStack.get_Top()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.AllInstances.EmptyGet">
            <summary>Sets the shim of ConstraintStack.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.AllInstances.Pop">
            <summary>Sets the shim of ConstraintStack.Pop()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.AllInstances.PushConstraint">
            <summary>Sets the shim of ConstraintStack.Push(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.AllInstances.TopGet">
            <summary>Sets the shim of ConstraintStack.get_Top()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintBuilder+OperatorStack</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.#ctor(NUnit.Framework.Constraints.ConstraintBuilder.OperatorStack)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.ConstructorConstraintBuilder">
            <summary>Sets the shim of OperatorStack.OperatorStack(ConstraintBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.EmptyGet">
            <summary>Sets the shim of OperatorStack.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.Pop">
            <summary>Sets the shim of OperatorStack.Pop()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.PushConstraintOperator">
            <summary>Sets the shim of OperatorStack.Push(ConstraintOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.TopGet">
            <summary>Sets the shim of OperatorStack.get_Top()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.AllInstances.EmptyGet">
            <summary>Sets the shim of OperatorStack.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.AllInstances.Pop">
            <summary>Sets the shim of OperatorStack.Pop()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.AllInstances.PushConstraintOperator">
            <summary>Sets the shim of OperatorStack.Push(ConstraintOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.AllInstances.TopGet">
            <summary>Sets the shim of OperatorStack.get_Top()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.#ctor(NUnit.Framework.Constraints.ConstraintExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AssignableFromOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AssignableFromConstraint})">
            <summary>Sets the shim of ConstraintExpression.AssignableFrom()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AssignableToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AssignableToConstraint})">
            <summary>Sets the shim of ConstraintExpression.AssignableTo()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AttributeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ResolvableConstraintExpression})">
            <summary>Sets the shim of ConstraintExpression.Attribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.InRangeOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0,NUnit.Framework.Constraints.RangeConstraint{``0}})">
            <summary>Sets the shim of ConstraintExpression.InRange(!!0 from, !!0 to)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.InstanceOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of ConstraintExpression.InstanceOf()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.InstanceOfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of ConstraintExpression.InstanceOfType()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.MatchesOf1PredicateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Predicate{``0},NUnit.Framework.Constraints.Constraint})">
            <summary>Sets the shim of ConstraintExpression.Matches(Predicate`1&lt;!!0&gt; predicate)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.TypeOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ExactTypeConstraint})">
            <summary>Sets the shim of ConstraintExpression.TypeOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllGet">
            <summary>Sets the shim of ConstraintExpression.get_All()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AssignableFromType">
            <summary>Sets the shim of ConstraintExpression.AssignableFrom(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AssignableToType">
            <summary>Sets the shim of ConstraintExpression.AssignableTo(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AtLeastObject">
            <summary>Sets the shim of ConstraintExpression.AtLeast(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AtMostObject">
            <summary>Sets the shim of ConstraintExpression.AtMost(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AttributeType">
            <summary>Sets the shim of ConstraintExpression.Attribute(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.BinarySerializableGet">
            <summary>Sets the shim of ConstraintExpression.get_BinarySerializable()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.Constructor">
            <summary>Sets the shim of ConstraintExpression.ConstraintExpression()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ConstructorConstraintBuilder">
            <summary>Sets the shim of ConstraintExpression.ConstraintExpression(ConstraintBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ContainsObject">
            <summary>Sets the shim of ConstraintExpression.Contains(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ContainsString">
            <summary>Sets the shim of ConstraintExpression.Contains(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ContainsSubstringString">
            <summary>Sets the shim of ConstraintExpression.ContainsSubstring(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.CountGet">
            <summary>Sets the shim of ConstraintExpression.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.EmptyGet">
            <summary>Sets the shim of ConstraintExpression.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.EndsWithString">
            <summary>Sets the shim of ConstraintExpression.EndsWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.EqualToObject">
            <summary>Sets the shim of ConstraintExpression.EqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.EquivalentToIEnumerable">
            <summary>Sets the shim of ConstraintExpression.EquivalentTo(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ExactlyInt32">
            <summary>Sets the shim of ConstraintExpression.Exactly(Int32 expectedCount)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.FalseGet">
            <summary>Sets the shim of ConstraintExpression.get_False()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.GreaterThanObject">
            <summary>Sets the shim of ConstraintExpression.GreaterThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.GreaterThanOrEqualToObject">
            <summary>Sets the shim of ConstraintExpression.GreaterThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.InnerExceptionGet">
            <summary>Sets the shim of ConstraintExpression.get_InnerException()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.InstanceOfType">
            <summary>Sets the shim of ConstraintExpression.InstanceOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.InstanceOfTypeType">
            <summary>Sets the shim of ConstraintExpression.InstanceOfType(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.LengthGet">
            <summary>Sets the shim of ConstraintExpression.get_Length()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.LessThanObject">
            <summary>Sets the shim of ConstraintExpression.LessThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.LessThanOrEqualToObject">
            <summary>Sets the shim of ConstraintExpression.LessThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.MatchesConstraint">
            <summary>Sets the shim of ConstraintExpression.Matches(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.MatchesString">
            <summary>Sets the shim of ConstraintExpression.Matches(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.MemberObject">
            <summary>Sets the shim of ConstraintExpression.Member(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.MessageGet">
            <summary>Sets the shim of ConstraintExpression.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.NaNGet">
            <summary>Sets the shim of ConstraintExpression.get_NaN()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.NegativeGet">
            <summary>Sets the shim of ConstraintExpression.get_Negative()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.NoGet">
            <summary>Sets the shim of ConstraintExpression.get_No()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.NoneGet">
            <summary>Sets the shim of ConstraintExpression.get_None()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.NotGet">
            <summary>Sets the shim of ConstraintExpression.get_Not()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.NullGet">
            <summary>Sets the shim of ConstraintExpression.get_Null()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.OrderedGet">
            <summary>Sets the shim of ConstraintExpression.get_Ordered()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.PositiveGet">
            <summary>Sets the shim of ConstraintExpression.get_Positive()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.PropertyString">
            <summary>Sets the shim of ConstraintExpression.Property(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SameAsObject">
            <summary>Sets the shim of ConstraintExpression.SameAs(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SamePathOrUnderString">
            <summary>Sets the shim of ConstraintExpression.SamePathOrUnder(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SamePathString">
            <summary>Sets the shim of ConstraintExpression.SamePath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SomeGet">
            <summary>Sets the shim of ConstraintExpression.get_Some()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.StartsWithString">
            <summary>Sets the shim of ConstraintExpression.StartsWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.StringContainingString">
            <summary>Sets the shim of ConstraintExpression.StringContaining(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.StringEndingString">
            <summary>Sets the shim of ConstraintExpression.StringEnding(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.StringMatchingString">
            <summary>Sets the shim of ConstraintExpression.StringMatching(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.StringStartingString">
            <summary>Sets the shim of ConstraintExpression.StringStarting(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SubPathString">
            <summary>Sets the shim of ConstraintExpression.SubPath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SubsetOfIEnumerable">
            <summary>Sets the shim of ConstraintExpression.SubsetOf(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.TrueGet">
            <summary>Sets the shim of ConstraintExpression.get_True()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.TypeOfType">
            <summary>Sets the shim of ConstraintExpression.TypeOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.UniqueGet">
            <summary>Sets the shim of ConstraintExpression.get_Unique()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.WithGet">
            <summary>Sets the shim of ConstraintExpression.get_With()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.XmlSerializableGet">
            <summary>Sets the shim of ConstraintExpression.get_XmlSerializable()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AssignableFromOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,NUnit.Framework.Constraints.AssignableFromConstraint})">
            <summary>Sets the shim of ConstraintExpression.AssignableFrom()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AssignableToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,NUnit.Framework.Constraints.AssignableToConstraint})">
            <summary>Sets the shim of ConstraintExpression.AssignableTo()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AttributeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,NUnit.Framework.Constraints.ResolvableConstraintExpression})">
            <summary>Sets the shim of ConstraintExpression.Attribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.InRangeOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,``0,``0,NUnit.Framework.Constraints.RangeConstraint{``0}})">
            <summary>Sets the shim of ConstraintExpression.InRange(!!0 from, !!0 to)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.InstanceOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of ConstraintExpression.InstanceOf()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.InstanceOfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of ConstraintExpression.InstanceOfType()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.MatchesOf1PredicateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,System.Predicate{``0},NUnit.Framework.Constraints.Constraint})">
            <summary>Sets the shim of ConstraintExpression.Matches(Predicate`1&lt;!!0&gt; predicate)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.TypeOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,NUnit.Framework.Constraints.ExactTypeConstraint})">
            <summary>Sets the shim of ConstraintExpression.TypeOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AllGet">
            <summary>Sets the shim of ConstraintExpression.get_All()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AssignableFromType">
            <summary>Sets the shim of ConstraintExpression.AssignableFrom(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AssignableToType">
            <summary>Sets the shim of ConstraintExpression.AssignableTo(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AtLeastObject">
            <summary>Sets the shim of ConstraintExpression.AtLeast(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AtMostObject">
            <summary>Sets the shim of ConstraintExpression.AtMost(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AttributeType">
            <summary>Sets the shim of ConstraintExpression.Attribute(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.BinarySerializableGet">
            <summary>Sets the shim of ConstraintExpression.get_BinarySerializable()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ContainsObject">
            <summary>Sets the shim of ConstraintExpression.Contains(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ContainsString">
            <summary>Sets the shim of ConstraintExpression.Contains(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ContainsSubstringString">
            <summary>Sets the shim of ConstraintExpression.ContainsSubstring(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.CountGet">
            <summary>Sets the shim of ConstraintExpression.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.EmptyGet">
            <summary>Sets the shim of ConstraintExpression.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.EndsWithString">
            <summary>Sets the shim of ConstraintExpression.EndsWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.EqualToObject">
            <summary>Sets the shim of ConstraintExpression.EqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.EquivalentToIEnumerable">
            <summary>Sets the shim of ConstraintExpression.EquivalentTo(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ExactlyInt32">
            <summary>Sets the shim of ConstraintExpression.Exactly(Int32 expectedCount)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.FalseGet">
            <summary>Sets the shim of ConstraintExpression.get_False()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.GreaterThanObject">
            <summary>Sets the shim of ConstraintExpression.GreaterThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.GreaterThanOrEqualToObject">
            <summary>Sets the shim of ConstraintExpression.GreaterThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.InnerExceptionGet">
            <summary>Sets the shim of ConstraintExpression.get_InnerException()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.InstanceOfType">
            <summary>Sets the shim of ConstraintExpression.InstanceOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.InstanceOfTypeType">
            <summary>Sets the shim of ConstraintExpression.InstanceOfType(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.LengthGet">
            <summary>Sets the shim of ConstraintExpression.get_Length()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.LessThanObject">
            <summary>Sets the shim of ConstraintExpression.LessThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.LessThanOrEqualToObject">
            <summary>Sets the shim of ConstraintExpression.LessThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.MatchesConstraint">
            <summary>Sets the shim of ConstraintExpression.Matches(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.MatchesString">
            <summary>Sets the shim of ConstraintExpression.Matches(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.MemberObject">
            <summary>Sets the shim of ConstraintExpression.Member(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.MessageGet">
            <summary>Sets the shim of ConstraintExpression.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.NaNGet">
            <summary>Sets the shim of ConstraintExpression.get_NaN()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.NegativeGet">
            <summary>Sets the shim of ConstraintExpression.get_Negative()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.NoGet">
            <summary>Sets the shim of ConstraintExpression.get_No()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.NoneGet">
            <summary>Sets the shim of ConstraintExpression.get_None()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.NotGet">
            <summary>Sets the shim of ConstraintExpression.get_Not()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.NullGet">
            <summary>Sets the shim of ConstraintExpression.get_Null()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.OrderedGet">
            <summary>Sets the shim of ConstraintExpression.get_Ordered()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.PositiveGet">
            <summary>Sets the shim of ConstraintExpression.get_Positive()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.PropertyString">
            <summary>Sets the shim of ConstraintExpression.Property(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SameAsObject">
            <summary>Sets the shim of ConstraintExpression.SameAs(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SamePathOrUnderString">
            <summary>Sets the shim of ConstraintExpression.SamePathOrUnder(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SamePathString">
            <summary>Sets the shim of ConstraintExpression.SamePath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SomeGet">
            <summary>Sets the shim of ConstraintExpression.get_Some()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.StartsWithString">
            <summary>Sets the shim of ConstraintExpression.StartsWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.StringContainingString">
            <summary>Sets the shim of ConstraintExpression.StringContaining(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.StringEndingString">
            <summary>Sets the shim of ConstraintExpression.StringEnding(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.StringMatchingString">
            <summary>Sets the shim of ConstraintExpression.StringMatching(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.StringStartingString">
            <summary>Sets the shim of ConstraintExpression.StringStarting(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SubPathString">
            <summary>Sets the shim of ConstraintExpression.SubPath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SubsetOfIEnumerable">
            <summary>Sets the shim of ConstraintExpression.SubsetOf(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.TrueGet">
            <summary>Sets the shim of ConstraintExpression.get_True()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.TypeOfType">
            <summary>Sets the shim of ConstraintExpression.TypeOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.UniqueGet">
            <summary>Sets the shim of ConstraintExpression.get_Unique()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.WithGet">
            <summary>Sets the shim of ConstraintExpression.get_With()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.XmlSerializableGet">
            <summary>Sets the shim of ConstraintExpression.get_XmlSerializable()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintExpressionBase</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.#ctor(NUnit.Framework.Constraints.ConstraintExpressionBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.AppendConstraint">
            <summary>Sets the shim of ConstraintExpressionBase.Append(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.AppendConstraintOperator">
            <summary>Sets the shim of ConstraintExpressionBase.Append(ConstraintOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.AppendSelfResolvingOperator">
            <summary>Sets the shim of ConstraintExpressionBase.Append(SelfResolvingOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.Constructor">
            <summary>Sets the shim of ConstraintExpressionBase.ConstraintExpressionBase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.ConstructorConstraintBuilder">
            <summary>Sets the shim of ConstraintExpressionBase.ConstraintExpressionBase(ConstraintBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.ToString">
            <summary>Sets the shim of ConstraintExpressionBase.ToString()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.AllInstances.AppendConstraint">
            <summary>Sets the shim of ConstraintExpressionBase.Append(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.AllInstances.AppendConstraintOperator">
            <summary>Sets the shim of ConstraintExpressionBase.Append(ConstraintOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.AllInstances.AppendSelfResolvingOperator">
            <summary>Sets the shim of ConstraintExpressionBase.Append(SelfResolvingOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpressionBase.AllInstances.ToString01">
            <summary>Sets the shim of ConstraintExpressionBase.ToString()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintFactory</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.#ctor(NUnit.Framework.Constraints.ConstraintFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AssignableFromOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AssignableFromConstraint})">
            <summary>Sets the shim of ConstraintFactory.AssignableFrom()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AssignableToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AssignableToConstraint})">
            <summary>Sets the shim of ConstraintFactory.AssignableTo()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AttributeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ResolvableConstraintExpression})">
            <summary>Sets the shim of ConstraintFactory.Attribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.InRangeOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0,NUnit.Framework.Constraints.RangeConstraint{``0}})">
            <summary>Sets the shim of ConstraintFactory.InRange(!!0 from, !!0 to)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.InstanceOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of ConstraintFactory.InstanceOf()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.InstanceOfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of ConstraintFactory.InstanceOfType()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.TypeOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ExactTypeConstraint})">
            <summary>Sets the shim of ConstraintFactory.TypeOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllGet">
            <summary>Sets the shim of ConstraintFactory.get_All()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AssignableFromType">
            <summary>Sets the shim of ConstraintFactory.AssignableFrom(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AssignableToType">
            <summary>Sets the shim of ConstraintFactory.AssignableTo(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AtLeastObject">
            <summary>Sets the shim of ConstraintFactory.AtLeast(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AtMostObject">
            <summary>Sets the shim of ConstraintFactory.AtMost(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AttributeType">
            <summary>Sets the shim of ConstraintFactory.Attribute(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.BinarySerializableGet">
            <summary>Sets the shim of ConstraintFactory.get_BinarySerializable()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.Constructor">
            <summary>Sets the shim of ConstraintFactory.ConstraintFactory()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.ContainsObject">
            <summary>Sets the shim of ConstraintFactory.Contains(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.ContainsString">
            <summary>Sets the shim of ConstraintFactory.Contains(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.ContainsSubstringString">
            <summary>Sets the shim of ConstraintFactory.ContainsSubstring(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.CountGet">
            <summary>Sets the shim of ConstraintFactory.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.DoesNotContainString">
            <summary>Sets the shim of ConstraintFactory.DoesNotContain(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.DoesNotEndWithString">
            <summary>Sets the shim of ConstraintFactory.DoesNotEndWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.DoesNotMatchString">
            <summary>Sets the shim of ConstraintFactory.DoesNotMatch(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.DoesNotStartWithString">
            <summary>Sets the shim of ConstraintFactory.DoesNotStartWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.EmptyGet">
            <summary>Sets the shim of ConstraintFactory.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.EndsWithString">
            <summary>Sets the shim of ConstraintFactory.EndsWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.EqualToObject">
            <summary>Sets the shim of ConstraintFactory.EqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.EquivalentToIEnumerable">
            <summary>Sets the shim of ConstraintFactory.EquivalentTo(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.ExactlyInt32">
            <summary>Sets the shim of ConstraintFactory.Exactly(Int32 expectedCount)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.FalseGet">
            <summary>Sets the shim of ConstraintFactory.get_False()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.GreaterThanObject">
            <summary>Sets the shim of ConstraintFactory.GreaterThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.GreaterThanOrEqualToObject">
            <summary>Sets the shim of ConstraintFactory.GreaterThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.InnerExceptionGet">
            <summary>Sets the shim of ConstraintFactory.get_InnerException()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.InstanceOfType">
            <summary>Sets the shim of ConstraintFactory.InstanceOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.InstanceOfTypeType">
            <summary>Sets the shim of ConstraintFactory.InstanceOfType(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.LengthGet">
            <summary>Sets the shim of ConstraintFactory.get_Length()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.LessThanObject">
            <summary>Sets the shim of ConstraintFactory.LessThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.LessThanOrEqualToObject">
            <summary>Sets the shim of ConstraintFactory.LessThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.MatchesString">
            <summary>Sets the shim of ConstraintFactory.Matches(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.MemberObject">
            <summary>Sets the shim of ConstraintFactory.Member(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.MessageGet">
            <summary>Sets the shim of ConstraintFactory.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.NaNGet">
            <summary>Sets the shim of ConstraintFactory.get_NaN()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.NegativeGet">
            <summary>Sets the shim of ConstraintFactory.get_Negative()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.NoGet">
            <summary>Sets the shim of ConstraintFactory.get_No()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.NoneGet">
            <summary>Sets the shim of ConstraintFactory.get_None()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.NotGet">
            <summary>Sets the shim of ConstraintFactory.get_Not()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.NullGet">
            <summary>Sets the shim of ConstraintFactory.get_Null()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.OrderedGet">
            <summary>Sets the shim of ConstraintFactory.get_Ordered()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.PositiveGet">
            <summary>Sets the shim of ConstraintFactory.get_Positive()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.PropertyString">
            <summary>Sets the shim of ConstraintFactory.Property(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.SameAsObject">
            <summary>Sets the shim of ConstraintFactory.SameAs(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.SamePathOrUnderString">
            <summary>Sets the shim of ConstraintFactory.SamePathOrUnder(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.SamePathString">
            <summary>Sets the shim of ConstraintFactory.SamePath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.SomeGet">
            <summary>Sets the shim of ConstraintFactory.get_Some()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.StartsWithString">
            <summary>Sets the shim of ConstraintFactory.StartsWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.StringContainingString">
            <summary>Sets the shim of ConstraintFactory.StringContaining(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.StringEndingString">
            <summary>Sets the shim of ConstraintFactory.StringEnding(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.StringMatchingString">
            <summary>Sets the shim of ConstraintFactory.StringMatching(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.StringStartingString">
            <summary>Sets the shim of ConstraintFactory.StringStarting(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.SubPathString">
            <summary>Sets the shim of ConstraintFactory.SubPath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.SubsetOfIEnumerable">
            <summary>Sets the shim of ConstraintFactory.SubsetOf(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.TrueGet">
            <summary>Sets the shim of ConstraintFactory.get_True()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.TypeOfType">
            <summary>Sets the shim of ConstraintFactory.TypeOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.UniqueGet">
            <summary>Sets the shim of ConstraintFactory.get_Unique()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.XmlSerializableGet">
            <summary>Sets the shim of ConstraintFactory.get_XmlSerializable()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.AssignableFromOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintFactory,NUnit.Framework.Constraints.AssignableFromConstraint})">
            <summary>Sets the shim of ConstraintFactory.AssignableFrom()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.AssignableToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintFactory,NUnit.Framework.Constraints.AssignableToConstraint})">
            <summary>Sets the shim of ConstraintFactory.AssignableTo()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.AttributeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintFactory,NUnit.Framework.Constraints.ResolvableConstraintExpression})">
            <summary>Sets the shim of ConstraintFactory.Attribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.InRangeOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintFactory,``0,``0,NUnit.Framework.Constraints.RangeConstraint{``0}})">
            <summary>Sets the shim of ConstraintFactory.InRange(!!0 from, !!0 to)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.InstanceOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintFactory,NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of ConstraintFactory.InstanceOf()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.InstanceOfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintFactory,NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of ConstraintFactory.InstanceOfType()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.TypeOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintFactory,NUnit.Framework.Constraints.ExactTypeConstraint})">
            <summary>Sets the shim of ConstraintFactory.TypeOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.AllGet">
            <summary>Sets the shim of ConstraintFactory.get_All()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.AssignableFromType">
            <summary>Sets the shim of ConstraintFactory.AssignableFrom(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.AssignableToType">
            <summary>Sets the shim of ConstraintFactory.AssignableTo(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.AtLeastObject">
            <summary>Sets the shim of ConstraintFactory.AtLeast(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.AtMostObject">
            <summary>Sets the shim of ConstraintFactory.AtMost(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.AttributeType">
            <summary>Sets the shim of ConstraintFactory.Attribute(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.BinarySerializableGet">
            <summary>Sets the shim of ConstraintFactory.get_BinarySerializable()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.ContainsObject">
            <summary>Sets the shim of ConstraintFactory.Contains(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.ContainsString">
            <summary>Sets the shim of ConstraintFactory.Contains(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.ContainsSubstringString">
            <summary>Sets the shim of ConstraintFactory.ContainsSubstring(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.CountGet">
            <summary>Sets the shim of ConstraintFactory.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.DoesNotContainString">
            <summary>Sets the shim of ConstraintFactory.DoesNotContain(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.DoesNotEndWithString">
            <summary>Sets the shim of ConstraintFactory.DoesNotEndWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.DoesNotMatchString">
            <summary>Sets the shim of ConstraintFactory.DoesNotMatch(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.DoesNotStartWithString">
            <summary>Sets the shim of ConstraintFactory.DoesNotStartWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.EmptyGet">
            <summary>Sets the shim of ConstraintFactory.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.EndsWithString">
            <summary>Sets the shim of ConstraintFactory.EndsWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.EqualToObject">
            <summary>Sets the shim of ConstraintFactory.EqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.EquivalentToIEnumerable">
            <summary>Sets the shim of ConstraintFactory.EquivalentTo(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.FalseGet">
            <summary>Sets the shim of ConstraintFactory.get_False()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.GreaterThanObject">
            <summary>Sets the shim of ConstraintFactory.GreaterThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.GreaterThanOrEqualToObject">
            <summary>Sets the shim of ConstraintFactory.GreaterThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.InnerExceptionGet">
            <summary>Sets the shim of ConstraintFactory.get_InnerException()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.InstanceOfType">
            <summary>Sets the shim of ConstraintFactory.InstanceOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.InstanceOfTypeType">
            <summary>Sets the shim of ConstraintFactory.InstanceOfType(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.LengthGet">
            <summary>Sets the shim of ConstraintFactory.get_Length()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.LessThanObject">
            <summary>Sets the shim of ConstraintFactory.LessThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.LessThanOrEqualToObject">
            <summary>Sets the shim of ConstraintFactory.LessThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.MatchesString">
            <summary>Sets the shim of ConstraintFactory.Matches(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.MemberObject">
            <summary>Sets the shim of ConstraintFactory.Member(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.MessageGet">
            <summary>Sets the shim of ConstraintFactory.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.NaNGet">
            <summary>Sets the shim of ConstraintFactory.get_NaN()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.NegativeGet">
            <summary>Sets the shim of ConstraintFactory.get_Negative()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.NoGet">
            <summary>Sets the shim of ConstraintFactory.get_No()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.NoneGet">
            <summary>Sets the shim of ConstraintFactory.get_None()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.NotGet">
            <summary>Sets the shim of ConstraintFactory.get_Not()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.NullGet">
            <summary>Sets the shim of ConstraintFactory.get_Null()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.OrderedGet">
            <summary>Sets the shim of ConstraintFactory.get_Ordered()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.PositiveGet">
            <summary>Sets the shim of ConstraintFactory.get_Positive()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.PropertyString">
            <summary>Sets the shim of ConstraintFactory.Property(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.SameAsObject">
            <summary>Sets the shim of ConstraintFactory.SameAs(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.SamePathOrUnderString">
            <summary>Sets the shim of ConstraintFactory.SamePathOrUnder(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.SamePathString">
            <summary>Sets the shim of ConstraintFactory.SamePath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.SomeGet">
            <summary>Sets the shim of ConstraintFactory.get_Some()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.StartsWithString">
            <summary>Sets the shim of ConstraintFactory.StartsWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.StringContainingString">
            <summary>Sets the shim of ConstraintFactory.StringContaining(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.StringEndingString">
            <summary>Sets the shim of ConstraintFactory.StringEnding(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.StringMatchingString">
            <summary>Sets the shim of ConstraintFactory.StringMatching(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.StringStartingString">
            <summary>Sets the shim of ConstraintFactory.StringStarting(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.SubPathString">
            <summary>Sets the shim of ConstraintFactory.SubPath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.SubsetOfIEnumerable">
            <summary>Sets the shim of ConstraintFactory.SubsetOf(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.TrueGet">
            <summary>Sets the shim of ConstraintFactory.get_True()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.TypeOfType">
            <summary>Sets the shim of ConstraintFactory.TypeOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.UniqueGet">
            <summary>Sets the shim of ConstraintFactory.get_Unique()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintFactory.AllInstances.XmlSerializableGet">
            <summary>Sets the shim of ConstraintFactory.get_XmlSerializable()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.#ctor(NUnit.Framework.Constraints.ConstraintOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.Constructor">
            <summary>Sets the shim of ConstraintOperator.ConstraintOperator()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.LeftContextGet">
            <summary>Sets the shim of ConstraintOperator.get_LeftContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.LeftContextSetObject">
            <summary>Sets the shim of ConstraintOperator.set_LeftContext(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.LeftPrecedenceGet">
            <summary>Sets the shim of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.RightContextGet">
            <summary>Sets the shim of ConstraintOperator.get_RightContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.RightContextSetObject">
            <summary>Sets the shim of ConstraintOperator.set_RightContext(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.RightPrecedenceGet">
            <summary>Sets the shim of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances.LeftContextGet">
            <summary>Sets the shim of ConstraintOperator.get_LeftContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances.LeftContextSetObject">
            <summary>Sets the shim of ConstraintOperator.set_LeftContext(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances.LeftPrecedenceGet">
            <summary>Sets the shim of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances.RightContextGet">
            <summary>Sets the shim of ConstraintOperator.get_RightContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances.RightContextSetObject">
            <summary>Sets the shim of ConstraintOperator.set_RightContext(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances.RightPrecedenceGet">
            <summary>Sets the shim of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ContainsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.#ctor(NUnit.Framework.Constraints.ContainsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.ContainsConstraint})">
            <summary>Sets the shim of ContainsConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.ContainsConstraint})">
            <summary>Sets the shim of ContainsConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.UsingOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},NUnit.Framework.Constraints.ContainsConstraint})">
            <summary>Sets the shim of ContainsConstraint.Using(IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AddAdapterEqualityAdapter">
            <summary>Sets the shim of ContainsConstraint.AddAdapter(EqualityAdapter adapter)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.ConstructorObject">
            <summary>Sets the shim of ContainsConstraint.ContainsConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.IgnoreCaseGet">
            <summary>Sets the shim of ContainsConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.MatchesObject">
            <summary>Sets the shim of ContainsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.RealConstraintGet">
            <summary>Sets the shim of ContainsConstraint.get_RealConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.RealConstraintSetConstraint">
            <summary>Sets the shim of ContainsConstraint.set_RealConstraint(Constraint value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.UsingIComparer">
            <summary>Sets the shim of ContainsConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.UsingIEqualityComparer">
            <summary>Sets the shim of ContainsConstraint.Using(IEqualityComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of ContainsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ContainsConstraint,System.Comparison{``0},NUnit.Framework.Constraints.ContainsConstraint})">
            <summary>Sets the shim of ContainsConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ContainsConstraint,System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.ContainsConstraint})">
            <summary>Sets the shim of ContainsConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.UsingOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ContainsConstraint,System.Collections.Generic.IEqualityComparer{``0},NUnit.Framework.Constraints.ContainsConstraint})">
            <summary>Sets the shim of ContainsConstraint.Using(IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.AddAdapterEqualityAdapter">
            <summary>Sets the shim of ContainsConstraint.AddAdapter(EqualityAdapter adapter)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of ContainsConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of ContainsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.RealConstraintGet">
            <summary>Sets the shim of ContainsConstraint.get_RealConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.RealConstraintSetConstraint">
            <summary>Sets the shim of ContainsConstraint.set_RealConstraint(Constraint value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.UsingIComparer">
            <summary>Sets the shim of ContainsConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.UsingIEqualityComparer">
            <summary>Sets the shim of ContainsConstraint.Using(IEqualityComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of ContainsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.DelayedConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.#ctor(NUnit.Framework.Constraints.DelayedConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.InvokeDelegateOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets the shim of DelayedConstraint.InvokeDelegate(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets the shim of DelayedConstraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets the shim of DelayedConstraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ConstructorConstraintInt32">
            <summary>Sets the shim of DelayedConstraint.DelayedConstraint(Constraint baseConstraint, Int32 delayInMilliseconds)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ConstructorConstraintInt32Int32">
            <summary>Sets the shim of DelayedConstraint.DelayedConstraint(Constraint baseConstraint, Int32 delayInMilliseconds, Int32 pollingInterval)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.GetStringRepresentation">
            <summary>Sets the shim of DelayedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.MatchesObject">
            <summary>Sets the shim of DelayedConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of DelayedConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of DelayedConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.DelayedConstraint,NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets the shim of DelayedConstraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{NUnit.Framework.Constraints.DelayedConstraint,``0,System.Boolean})">
            <summary>Sets the shim of DelayedConstraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of DelayedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of DelayedConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of DelayedConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of DelayedConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.EmptyCollectionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.#ctor(NUnit.Framework.Constraints.EmptyCollectionConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.Constructor">
            <summary>Sets the shim of EmptyCollectionConstraint.EmptyCollectionConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of EmptyCollectionConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.doMatchIEnumerable">
            <summary>Sets the shim of EmptyCollectionConstraint.doMatch(IEnumerable collection)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of EmptyCollectionConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.AllInstances.doMatchIEnumerable">
            <summary>Sets the shim of EmptyCollectionConstraint.doMatch(IEnumerable collection)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.EmptyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.#ctor(NUnit.Framework.Constraints.EmptyConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.Constructor">
            <summary>Sets the shim of EmptyConstraint.EmptyConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.MatchesObject">
            <summary>Sets the shim of EmptyConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.RealConstraintGet">
            <summary>Sets the shim of EmptyConstraint.get_RealConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of EmptyConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of EmptyConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.AllInstances.RealConstraintGet">
            <summary>Sets the shim of EmptyConstraint.get_RealConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of EmptyConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.EmptyDirectoryConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.#ctor(NUnit.Framework.Constraints.EmptyDirectoryConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.Constructor">
            <summary>Sets the shim of EmptyDirectoryConstraint.EmptyDirectoryConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.MatchesObject">
            <summary>Sets the shim of EmptyDirectoryConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of EmptyDirectoryConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of EmptyDirectoryConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of EmptyDirectoryConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of EmptyDirectoryConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of EmptyDirectoryConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.EmptyStringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.#ctor(NUnit.Framework.Constraints.EmptyStringConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.Constructor">
            <summary>Sets the shim of EmptyStringConstraint.EmptyStringConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.MatchesObject">
            <summary>Sets the shim of EmptyStringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of EmptyStringConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of EmptyStringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of EmptyStringConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.EndsWithConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.#ctor(NUnit.Framework.Constraints.EndsWithConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.ConstructorString">
            <summary>Sets the shim of EndsWithConstraint.EndsWithConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.MatchesString">
            <summary>Sets the shim of EndsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of EndsWithConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.AllInstances.MatchesString">
            <summary>Sets the shim of EndsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of EndsWithConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.EqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.#ctor(NUnit.Framework.Constraints.EqualConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.EqualConstraint})">
            <summary>Sets the shim of EqualConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.EqualConstraint})">
            <summary>Sets the shim of EqualConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.UsingOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},NUnit.Framework.Constraints.EqualConstraint})">
            <summary>Sets the shim of EqualConstraint.Using(IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AsCollectionGet">
            <summary>Sets the shim of EqualConstraint.get_AsCollection()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.ComparerIComparer">
            <summary>Sets the shim of EqualConstraint.Comparer(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.ConstructorObject">
            <summary>Sets the shim of EqualConstraint.EqualConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.DaysGet">
            <summary>Sets the shim of EqualConstraint.get_Days()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.DisplayCollectionDifferencesMessageWriterICollectionICollectionInt32">
            <summary>Sets the shim of EqualConstraint.DisplayCollectionDifferences(MessageWriter writer, ICollection expected, ICollection actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.DisplayDifferencesMessageWriterObjectObjectInt32">
            <summary>Sets the shim of EqualConstraint.DisplayDifferences(MessageWriter writer, Object expected, Object actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.DisplayEnumerableDifferencesMessageWriterIEnumerableIEnumerableInt32">
            <summary>Sets the shim of EqualConstraint.DisplayEnumerableDifferences(MessageWriter writer, IEnumerable expected, IEnumerable actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.DisplayFailurePointMessageWriterIEnumerableIEnumerableFailurePointInt32">
            <summary>Sets the shim of EqualConstraint.DisplayFailurePoint(MessageWriter writer, IEnumerable expected, IEnumerable actual, FailurePoint failurePoint, Int32 indent)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.DisplayStreamDifferencesMessageWriterStreamStreamInt32">
            <summary>Sets the shim of EqualConstraint.DisplayStreamDifferences(MessageWriter writer, Stream expected, Stream actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.DisplayStringDifferencesMessageWriterStringString">
            <summary>Sets the shim of EqualConstraint.DisplayStringDifferences(MessageWriter writer, String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.DisplayTypesAndSizesMessageWriterIEnumerableIEnumerableInt32">
            <summary>Sets the shim of EqualConstraint.DisplayTypesAndSizes(MessageWriter writer, IEnumerable expected, IEnumerable actual, Int32 indent)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.GetValueFromCollectionICollectionInt32">
            <summary>Sets the shim of EqualConstraint.GetValueFromCollection(ICollection collection, Int32 index)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.HoursGet">
            <summary>Sets the shim of EqualConstraint.get_Hours()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.IgnoreCaseGet">
            <summary>Sets the shim of EqualConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.MatchesObject">
            <summary>Sets the shim of EqualConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.MillisecondsGet">
            <summary>Sets the shim of EqualConstraint.get_Milliseconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.MinutesGet">
            <summary>Sets the shim of EqualConstraint.get_Minutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.NoClipGet">
            <summary>Sets the shim of EqualConstraint.get_NoClip()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.PercentGet">
            <summary>Sets the shim of EqualConstraint.get_Percent()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.SecondsGet">
            <summary>Sets the shim of EqualConstraint.get_Seconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.StaticConstructor">
            <summary>Sets the shim of EqualConstraint.EqualConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.TicksGet">
            <summary>Sets the shim of EqualConstraint.get_Ticks()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.UlpsGet">
            <summary>Sets the shim of EqualConstraint.get_Ulps()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.UsingIComparer">
            <summary>Sets the shim of EqualConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.UsingIEqualityComparer">
            <summary>Sets the shim of EqualConstraint.Using(IEqualityComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.WithinObject">
            <summary>Sets the shim of EqualConstraint.Within(Object amount)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of EqualConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.WriteMessageToMessageWriter">
            <summary>Sets the shim of EqualConstraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.EqualConstraint,System.Comparison{``0},NUnit.Framework.Constraints.EqualConstraint})">
            <summary>Sets the shim of EqualConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.EqualConstraint,System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.EqualConstraint})">
            <summary>Sets the shim of EqualConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.UsingOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.EqualConstraint,System.Collections.Generic.IEqualityComparer{``0},NUnit.Framework.Constraints.EqualConstraint})">
            <summary>Sets the shim of EqualConstraint.Using(IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.AsCollectionGet">
            <summary>Sets the shim of EqualConstraint.get_AsCollection()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.ComparerIComparer">
            <summary>Sets the shim of EqualConstraint.Comparer(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.DaysGet">
            <summary>Sets the shim of EqualConstraint.get_Days()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.DisplayCollectionDifferencesMessageWriterICollectionICollectionInt32">
            <summary>Sets the shim of EqualConstraint.DisplayCollectionDifferences(MessageWriter writer, ICollection expected, ICollection actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.DisplayDifferencesMessageWriterObjectObjectInt32">
            <summary>Sets the shim of EqualConstraint.DisplayDifferences(MessageWriter writer, Object expected, Object actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.DisplayEnumerableDifferencesMessageWriterIEnumerableIEnumerableInt32">
            <summary>Sets the shim of EqualConstraint.DisplayEnumerableDifferences(MessageWriter writer, IEnumerable expected, IEnumerable actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.DisplayFailurePointMessageWriterIEnumerableIEnumerableFailurePointInt32">
            <summary>Sets the shim of EqualConstraint.DisplayFailurePoint(MessageWriter writer, IEnumerable expected, IEnumerable actual, FailurePoint failurePoint, Int32 indent)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.DisplayStreamDifferencesMessageWriterStreamStreamInt32">
            <summary>Sets the shim of EqualConstraint.DisplayStreamDifferences(MessageWriter writer, Stream expected, Stream actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.DisplayStringDifferencesMessageWriterStringString">
            <summary>Sets the shim of EqualConstraint.DisplayStringDifferences(MessageWriter writer, String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.DisplayTypesAndSizesMessageWriterIEnumerableIEnumerableInt32">
            <summary>Sets the shim of EqualConstraint.DisplayTypesAndSizes(MessageWriter writer, IEnumerable expected, IEnumerable actual, Int32 indent)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.HoursGet">
            <summary>Sets the shim of EqualConstraint.get_Hours()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of EqualConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of EqualConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.MillisecondsGet">
            <summary>Sets the shim of EqualConstraint.get_Milliseconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.MinutesGet">
            <summary>Sets the shim of EqualConstraint.get_Minutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.NoClipGet">
            <summary>Sets the shim of EqualConstraint.get_NoClip()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.PercentGet">
            <summary>Sets the shim of EqualConstraint.get_Percent()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.SecondsGet">
            <summary>Sets the shim of EqualConstraint.get_Seconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.TicksGet">
            <summary>Sets the shim of EqualConstraint.get_Ticks()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.UlpsGet">
            <summary>Sets the shim of EqualConstraint.get_Ulps()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.UsingIComparer">
            <summary>Sets the shim of EqualConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.UsingIEqualityComparer">
            <summary>Sets the shim of EqualConstraint.Using(IEqualityComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.WithinObject">
            <summary>Sets the shim of EqualConstraint.Within(Object amount)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of EqualConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.WriteMessageToMessageWriter">
            <summary>Sets the shim of EqualConstraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter">
            <summary>Shim type of NUnit.Framework.Constraints.EqualityAdapter</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.#ctor(NUnit.Framework.Constraints.EqualityAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.ForOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.EqualityAdapter})">
            <summary>Sets the shim of EqualityAdapter.For(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.ForOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.EqualityAdapter})">
            <summary>Sets the shim of EqualityAdapter.For(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.ForOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},NUnit.Framework.Constraints.EqualityAdapter})">
            <summary>Sets the shim of EqualityAdapter.For(IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.CanCompareObjectObject">
            <summary>Sets the shim of EqualityAdapter.CanCompare(Object x, Object y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.Constructor">
            <summary>Sets the shim of EqualityAdapter.EqualityAdapter()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.ForIComparer">
            <summary>Sets the shim of EqualityAdapter.For(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.ForIEqualityComparer">
            <summary>Sets the shim of EqualityAdapter.For(IEqualityComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.AllInstances.CanCompareObjectObject">
            <summary>Sets the shim of EqualityAdapter.CanCompare(Object x, Object y)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ExactCountConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.#ctor(NUnit.Framework.Constraints.ExactCountConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.ConstructorInt32Constraint">
            <summary>Sets the shim of ExactCountConstraint.ExactCountConstraint(Int32 expectedCount, Constraint itemConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.MatchesObject">
            <summary>Sets the shim of ExactCountConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of ExactCountConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of ExactCountConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of ExactCountConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator">
            <summary>Shim type of NUnit.Framework.Constraints.ExactCountOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.#ctor(NUnit.Framework.Constraints.ExactCountOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.ApplyPrefixConstraint">
            <summary>Sets the shim of ExactCountOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.ConstructorInt32">
            <summary>Sets the shim of ExactCountOperator.ExactCountOperator(Int32 expectedCount)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.AllInstances.ApplyPrefixConstraint">
            <summary>Sets the shim of ExactCountOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ExactTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.#ctor(NUnit.Framework.Constraints.ExactTypeConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.ConstructorType">
            <summary>Sets the shim of ExactTypeConstraint.ExactTypeConstraint(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.MatchesObject">
            <summary>Sets the shim of ExactTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of ExactTypeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of ExactTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of ExactTypeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ExceptionTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.#ctor(NUnit.Framework.Constraints.ExceptionTypeConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.ConstructorType">
            <summary>Sets the shim of ExceptionTypeConstraint.ExceptionTypeConstraint(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of ExceptionTypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of ExceptionTypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimFailurePoint">
            <summary>Shim type of NUnit.Framework.Constraints.FailurePoint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFailurePoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFailurePoint.#ctor(NUnit.Framework.Constraints.FailurePoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFailurePoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFailurePoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFailurePoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFailurePoint.Constructor">
            <summary>Sets the shim of FailurePoint.FailurePoint()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimFailurePoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.FalseConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.#ctor(NUnit.Framework.Constraints.FalseConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.Constructor">
            <summary>Sets the shim of FalseConstraint.FalseConstraint()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics">
            <summary>Shim type of NUnit.Framework.Constraints.FloatingPointNumerics</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.#ctor(NUnit.Framework.Constraints.FloatingPointNumerics)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.AreAlmostEqualUlpsDoubleDoubleInt64">
            <summary>Sets the shim of FloatingPointNumerics.AreAlmostEqualUlps(Double left, Double right, Int64 maxUlps)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.AreAlmostEqualUlpsSingleSingleInt32">
            <summary>Sets the shim of FloatingPointNumerics.AreAlmostEqualUlps(Single left, Single right, Int32 maxUlps)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.Constructor">
            <summary>Sets the shim of FloatingPointNumerics.FloatingPointNumerics()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.ReinterpretAsDoubleInt64">
            <summary>Sets the shim of FloatingPointNumerics.ReinterpretAsDouble(Int64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.ReinterpretAsFloatInt32">
            <summary>Sets the shim of FloatingPointNumerics.ReinterpretAsFloat(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.ReinterpretAsIntSingle">
            <summary>Sets the shim of FloatingPointNumerics.ReinterpretAsInt(Single value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.ReinterpretAsLongDouble">
            <summary>Sets the shim of FloatingPointNumerics.ReinterpretAsLong(Double value)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.GreaterThanConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.#ctor(NUnit.Framework.Constraints.GreaterThanConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.ConstructorObject">
            <summary>Sets the shim of GreaterThanConstraint.GreaterThanConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.MatchesObject">
            <summary>Sets the shim of GreaterThanConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of GreaterThanConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of GreaterThanConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of GreaterThanConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.GreaterThanOrEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.#ctor(NUnit.Framework.Constraints.GreaterThanOrEqualConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.ConstructorObject">
            <summary>Sets the shim of GreaterThanOrEqualConstraint.GreaterThanOrEqualConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.MatchesObject">
            <summary>Sets the shim of GreaterThanOrEqualConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of GreaterThanOrEqualConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of GreaterThanOrEqualConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of GreaterThanOrEqualConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.InstanceOfTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.#ctor(NUnit.Framework.Constraints.InstanceOfTypeConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.ConstructorType">
            <summary>Sets the shim of InstanceOfTypeConstraint.InstanceOfTypeConstraint(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.MatchesObject">
            <summary>Sets the shim of InstanceOfTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of InstanceOfTypeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of InstanceOfTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of InstanceOfTypeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.LessThanConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.#ctor(NUnit.Framework.Constraints.LessThanConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.ConstructorObject">
            <summary>Sets the shim of LessThanConstraint.LessThanConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.MatchesObject">
            <summary>Sets the shim of LessThanConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of LessThanConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of LessThanConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of LessThanConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.LessThanOrEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.#ctor(NUnit.Framework.Constraints.LessThanOrEqualConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.ConstructorObject">
            <summary>Sets the shim of LessThanOrEqualConstraint.LessThanOrEqualConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.MatchesObject">
            <summary>Sets the shim of LessThanOrEqualConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of LessThanOrEqualConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of LessThanOrEqualConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of LessThanOrEqualConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimMessageWriter">
            <summary>Shim type of NUnit.Framework.Constraints.MessageWriter</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.#ctor(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.Constructor">
            <summary>Sets the shim of MessageWriter.MessageWriter()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.WriteMessageLineStringObjectArray">
            <summary>Sets the shim of MessageWriter.WriteMessageLine(String message, Object[] args)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.AllInstances.WriteMessageLineStringObjectArray">
            <summary>Sets the shim of MessageWriter.WriteMessageLine(String message, Object[] args)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimMsgUtils">
            <summary>Shim type of NUnit.Framework.Constraints.MsgUtils</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.#ctor(NUnit.Framework.Constraints.MsgUtils)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.ClipExpectedAndActualStringRefStringRefInt32Int32">
            <summary>Sets the shim of MsgUtils.ClipExpectedAndActual(String&amp; expected, String&amp; actual, Int32 maxDisplayLength, Int32 mismatch)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.ClipStringStringInt32Int32">
            <summary>Sets the shim of MsgUtils.ClipString(String s, Int32 maxStringLength, Int32 clipStart)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.Constructor">
            <summary>Sets the shim of MsgUtils.MsgUtils()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.EscapeControlCharsString">
            <summary>Sets the shim of MsgUtils.EscapeControlChars(String s)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.FindMismatchPositionStringStringInt32Boolean">
            <summary>Sets the shim of MsgUtils.FindMismatchPosition(String expected, String actual, Int32 istart, Boolean ignoreCase)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.GetArrayIndicesAsStringInt32Array">
            <summary>Sets the shim of MsgUtils.GetArrayIndicesAsString(Int32[] indices)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.GetArrayIndicesFromCollectionIndexIEnumerableInt32">
            <summary>Sets the shim of MsgUtils.GetArrayIndicesFromCollectionIndex(IEnumerable collection, Int32 index)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.GetTypeRepresentationObject">
            <summary>Sets the shim of MsgUtils.GetTypeRepresentation(Object obj)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimMsgUtils.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer">
            <summary>Shim type of NUnit.Framework.Constraints.NUnitComparer</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.#ctor(NUnit.Framework.Constraints.NUnitComparer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.Bind(System.Collections.IComparer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.CompareObjectObject">
            <summary>Sets the shim of NUnitComparer.Compare(Object x, Object y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.Constructor">
            <summary>Sets the shim of NUnitComparer.NUnitComparer()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.DefaultGet">
            <summary>Sets the shim of NUnitComparer.get_Default()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.AllInstances.CompareObjectObject">
            <summary>Sets the shim of NUnitComparer.Compare(Object x, Object y)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer`1">
            <summary>Shim type of NUnit.Framework.Constraints.NUnitComparer`1</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer`1.#ctor(NUnit.Framework.Constraints.NUnitComparer{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer`1.Bind(System.Collections.Generic.IComparer{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer`1.CompareT0T0">
            <summary>Sets the shim of NUnitComparer`1.Compare(!0 x, !0 y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer`1.Constructor">
            <summary>Sets the shim of NUnitComparer`1.NUnitComparer`1()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer`1.AllInstances.CompareT0T0">
            <summary>Sets the shim of NUnitComparer`1.Compare(!0 x, !0 y)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer">
            <summary>Shim type of NUnit.Framework.Constraints.NUnitEqualityComparer</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.#ctor(NUnit.Framework.Constraints.NUnitEqualityComparer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.Bind(NUnit.Framework.INUnitEqualityComparer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AreEqualObjectObjectToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.AreEqual(Object expected, Object actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ArraysEqualArrayArrayToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.ArraysEqual(Array expected, Array actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.CompareAsCollectionGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_CompareAsCollection()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.CompareAsCollectionSetBoolean">
            <summary>Sets the shim of NUnitEqualityComparer.set_CompareAsCollection(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.Constructor">
            <summary>Sets the shim of NUnitEqualityComparer.NUnitEqualityComparer()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.DefaultGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_Default()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.DictionariesEqualIDictionaryIDictionaryToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.DictionariesEqual(IDictionary expected, IDictionary actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.DirectoriesEqualDirectoryInfoDirectoryInfo">
            <summary>Sets the shim of NUnitEqualityComparer.DirectoriesEqual(DirectoryInfo expected, DirectoryInfo actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.EnumerablesEqualIEnumerableIEnumerableToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.EnumerablesEqual(IEnumerable expected, IEnumerable actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ExternalComparersGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_ExternalComparers()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.FailurePointsGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_FailurePoints()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.FirstImplementsIEquatableOfSecondTypeType">
            <summary>Sets the shim of NUnitEqualityComparer.FirstImplementsIEquatableOfSecond(Type first, Type second)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.GetEquatableGenericArgumentsType">
            <summary>Sets the shim of NUnitEqualityComparer.GetEquatableGenericArguments(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.GetExternalComparerObjectObject">
            <summary>Sets the shim of NUnitEqualityComparer.GetExternalComparer(Object x, Object y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.IgnoreCaseGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.IgnoreCaseSetBoolean">
            <summary>Sets the shim of NUnitEqualityComparer.set_IgnoreCase(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.InvokeFirstIEquatableEqualsSecondObjectObject">
            <summary>Sets the shim of NUnitEqualityComparer.InvokeFirstIEquatableEqualsSecond(Object first, Object second)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ObjectsEqualObjectObjectToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.ObjectsEqual(Object expected, Object actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.StaticConstructor">
            <summary>Sets the shim of NUnitEqualityComparer.NUnitEqualityComparer()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.StreamsEqualStreamStream">
            <summary>Sets the shim of NUnitEqualityComparer.StreamsEqual(Stream expected, Stream actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.StringsEqualStringString">
            <summary>Sets the shim of NUnitEqualityComparer.StringsEqual(String expected, String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.AreEqualObjectObjectToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.AreEqual(Object expected, Object actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.ArraysEqualArrayArrayToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.ArraysEqual(Array expected, Array actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.CompareAsCollectionGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_CompareAsCollection()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.CompareAsCollectionSetBoolean">
            <summary>Sets the shim of NUnitEqualityComparer.set_CompareAsCollection(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.DictionariesEqualIDictionaryIDictionaryToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.DictionariesEqual(IDictionary expected, IDictionary actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.EnumerablesEqualIEnumerableIEnumerableToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.EnumerablesEqual(IEnumerable expected, IEnumerable actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.ExternalComparersGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_ExternalComparers()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.FailurePointsGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_FailurePoints()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.GetExternalComparerObjectObject">
            <summary>Sets the shim of NUnitEqualityComparer.GetExternalComparer(Object x, Object y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.IgnoreCaseSetBoolean">
            <summary>Sets the shim of NUnitEqualityComparer.set_IgnoreCase(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.ObjectsEqualObjectObjectToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.ObjectsEqual(Object expected, Object actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.StreamsEqualStreamStream">
            <summary>Sets the shim of NUnitEqualityComparer.StreamsEqual(Stream expected, Stream actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.StringsEqualStringString">
            <summary>Sets the shim of NUnitEqualityComparer.StringsEqual(String expected, String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.NaNConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.#ctor(NUnit.Framework.Constraints.NaNConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.Constructor">
            <summary>Sets the shim of NaNConstraint.NaNConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.MatchesObject">
            <summary>Sets the shim of NaNConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of NaNConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of NaNConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of NaNConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.NoItemConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.#ctor(NUnit.Framework.Constraints.NoItemConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.ConstructorConstraint">
            <summary>Sets the shim of NoItemConstraint.NoItemConstraint(Constraint itemConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.MatchesObject">
            <summary>Sets the shim of NoItemConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of NoItemConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of NoItemConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of NoItemConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNoneOperator">
            <summary>Shim type of NUnit.Framework.Constraints.NoneOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.#ctor(NUnit.Framework.Constraints.NoneOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.ApplyPrefixConstraint">
            <summary>Sets the shim of NoneOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.Constructor">
            <summary>Sets the shim of NoneOperator.NoneOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.AllInstances.ApplyPrefixConstraint">
            <summary>Sets the shim of NoneOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNotConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.NotConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.#ctor(NUnit.Framework.Constraints.NotConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.ConstructorConstraint">
            <summary>Sets the shim of NotConstraint.NotConstraint(Constraint baseConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.MatchesObject">
            <summary>Sets the shim of NotConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of NotConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of NotConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of NotConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of NotConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of NotConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNotOperator">
            <summary>Shim type of NUnit.Framework.Constraints.NotOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotOperator.#ctor(NUnit.Framework.Constraints.NotOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotOperator.ApplyPrefixConstraint">
            <summary>Sets the shim of NotOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotOperator.Constructor">
            <summary>Sets the shim of NotOperator.NotOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNotOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotOperator.AllInstances.ApplyPrefixConstraint">
            <summary>Sets the shim of NotOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNullConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.NullConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.#ctor(NUnit.Framework.Constraints.NullConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.Constructor">
            <summary>Sets the shim of NullConstraint.NullConstraint()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.NullOrEmptyStringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint.#ctor(NUnit.Framework.Constraints.NullOrEmptyStringConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint.Constructor">
            <summary>Sets the shim of NullOrEmptyStringConstraint.NullOrEmptyStringConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint.MatchesObject">
            <summary>Sets the shim of NullOrEmptyStringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of NullOrEmptyStringConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of NullOrEmptyStringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNullOrEmptyStringConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of NullOrEmptyStringConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNumerics">
            <summary>Shim type of NUnit.Framework.Constraints.Numerics</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNumerics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNumerics.#ctor(NUnit.Framework.Constraints.Numerics)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNumerics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNumerics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualDecimalDecimalTolerance">
            <summary>Sets the shim of Numerics.AreEqual(Decimal expected, Decimal actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualDoubleDoubleToleranceRef">
            <summary>Sets the shim of Numerics.AreEqual(Double expected, Double actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualInt32Int32Tolerance">
            <summary>Sets the shim of Numerics.AreEqual(Int32 expected, Int32 actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualInt64Int64Tolerance">
            <summary>Sets the shim of Numerics.AreEqual(Int64 expected, Int64 actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualObjectObjectToleranceRef">
            <summary>Sets the shim of Numerics.AreEqual(Object expected, Object actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualSingleSingleToleranceRef">
            <summary>Sets the shim of Numerics.AreEqual(Single expected, Single actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualUInt32UInt32Tolerance">
            <summary>Sets the shim of Numerics.AreEqual(UInt32 expected, UInt32 actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualUInt64UInt64Tolerance">
            <summary>Sets the shim of Numerics.AreEqual(UInt64 expected, UInt64 actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.CompareObjectObject">
            <summary>Sets the shim of Numerics.Compare(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.Constructor">
            <summary>Sets the shim of Numerics.Numerics()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.IsFixedPointNumericObject">
            <summary>Sets the shim of Numerics.IsFixedPointNumeric(Object obj)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.IsFloatingPointNumericObject">
            <summary>Sets the shim of Numerics.IsFloatingPointNumeric(Object obj)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.IsNumericTypeObject">
            <summary>Sets the shim of Numerics.IsNumericType(Object obj)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNumerics.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimOrConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.OrConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.#ctor(NUnit.Framework.Constraints.OrConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.ConstructorConstraintConstraint">
            <summary>Sets the shim of OrConstraint.OrConstraint(Constraint left, Constraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.MatchesObject">
            <summary>Sets the shim of OrConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of OrConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of OrConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of OrConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimOrOperator">
            <summary>Shim type of NUnit.Framework.Constraints.OrOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrOperator.#ctor(NUnit.Framework.Constraints.OrOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrOperator.ApplyOperatorConstraintConstraint">
            <summary>Sets the shim of OrOperator.ApplyOperator(Constraint left, Constraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrOperator.Constructor">
            <summary>Sets the shim of OrOperator.OrOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimOrOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrOperator.AllInstances.ApplyOperatorConstraintConstraint">
            <summary>Sets the shim of OrOperator.ApplyOperator(Constraint left, Constraint right)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPathConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.PathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.#ctor(NUnit.Framework.Constraints.PathConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.CanonicalizeString">
            <summary>Sets the shim of PathConstraint.Canonicalize(String path)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.ConstructorString">
            <summary>Sets the shim of PathConstraint.PathConstraint(String expectedPath)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.GetStringRepresentation">
            <summary>Sets the shim of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.IgnoreCaseGet">
            <summary>Sets the shim of PathConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.IsSubPathStringStringBoolean">
            <summary>Sets the shim of PathConstraint.IsSubPath(String path1, String path2, Boolean ignoreCase)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.MatchesObject">
            <summary>Sets the shim of PathConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.RespectCaseGet">
            <summary>Sets the shim of PathConstraint.get_RespectCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.StaticConstructor">
            <summary>Sets the shim of PathConstraint.PathConstraint()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of PathConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of PathConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.AllInstances.RespectCaseGet">
            <summary>Sets the shim of PathConstraint.get_RespectCase()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1">
            <summary>Shim type of NUnit.Framework.Constraints.PredicateConstraint`1</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.#ctor(NUnit.Framework.Constraints.PredicateConstraint{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.ConstructorPredicateOfT0">
            <summary>Sets the shim of PredicateConstraint`1.PredicateConstraint`1(Predicate`1&lt;!0&gt; predicate)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.MatchesObject">
            <summary>Sets the shim of PredicateConstraint`1.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of PredicateConstraint`1.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.AllInstances.MatchesObject">
            <summary>Sets the shim of PredicateConstraint`1.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of PredicateConstraint`1.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.PrefixConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.#ctor(NUnit.Framework.Constraints.PrefixConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.ConstructorIResolveConstraint">
            <summary>Sets the shim of PrefixConstraint.PrefixConstraint(IResolveConstraint resolvable)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator">
            <summary>Shim type of NUnit.Framework.Constraints.PrefixOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.#ctor(NUnit.Framework.Constraints.PrefixOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.Constructor">
            <summary>Sets the shim of PrefixOperator.PrefixOperator()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.AllInstances.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPropOperator">
            <summary>Shim type of NUnit.Framework.Constraints.PropOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropOperator.#ctor(NUnit.Framework.Constraints.PropOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropOperator.ConstructorString">
            <summary>Sets the shim of PropOperator.PropOperator(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropOperator.NameGet">
            <summary>Sets the shim of PropOperator.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of PropOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPropOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropOperator.AllInstances.NameGet">
            <summary>Sets the shim of PropOperator.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropOperator.AllInstances.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of PropOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.PropertyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.#ctor(NUnit.Framework.Constraints.PropertyConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.ConstructorStringConstraint">
            <summary>Sets the shim of PropertyConstraint.PropertyConstraint(String name, Constraint baseConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.GetStringRepresentation">
            <summary>Sets the shim of PropertyConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.MatchesObject">
            <summary>Sets the shim of PropertyConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of PropertyConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of PropertyConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of PropertyConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of PropertyConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of PropertyConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of PropertyConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.PropertyExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.#ctor(NUnit.Framework.Constraints.PropertyExistsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.ConstructorString">
            <summary>Sets the shim of PropertyExistsConstraint.PropertyExistsConstraint(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.GetStringRepresentation">
            <summary>Sets the shim of PropertyExistsConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.MatchesObject">
            <summary>Sets the shim of PropertyExistsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of PropertyExistsConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of PropertyExistsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of PropertyExistsConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of PropertyExistsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of PropertyExistsConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of PropertyExistsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1">
            <summary>Shim type of NUnit.Framework.Constraints.RangeConstraint`1</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1.#ctor(NUnit.Framework.Constraints.RangeConstraint{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1.ConstructorT0T0">
            <summary>Sets the shim of RangeConstraint`1.RangeConstraint`1(!0 from, !0 to)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1.MatchesObject">
            <summary>Sets the shim of RangeConstraint`1.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of RangeConstraint`1.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1.AllInstances.MatchesObject">
            <summary>Sets the shim of RangeConstraint`1.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint`1.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of RangeConstraint`1.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.RegexConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.#ctor(NUnit.Framework.Constraints.RegexConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.ConstructorString">
            <summary>Sets the shim of RegexConstraint.RegexConstraint(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.MatchesString">
            <summary>Sets the shim of RegexConstraint.Matches(String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of RegexConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.AllInstances.MatchesString">
            <summary>Sets the shim of RegexConstraint.Matches(String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of RegexConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression">
            <summary>Shim type of NUnit.Framework.Constraints.ResolvableConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.#ctor(NUnit.Framework.Constraints.ResolvableConstraintExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.AndGet">
            <summary>Sets the shim of ResolvableConstraintExpression.get_And()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.BitwiseAndOpConstraintResolvableConstraintExpression">
            <summary>Sets the shim of ResolvableConstraintExpression.op_BitwiseAnd(Constraint left, ResolvableConstraintExpression right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.BitwiseAndOpResolvableConstraintExpressionConstraint">
            <summary>Sets the shim of ResolvableConstraintExpression.op_BitwiseAnd(ResolvableConstraintExpression left, Constraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.BitwiseAndOpResolvableConstraintExpressionResolvableConstraintExpression">
            <summary>Sets the shim of ResolvableConstraintExpression.op_BitwiseAnd(ResolvableConstraintExpression left, ResolvableConstraintExpression right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.BitwiseOrOpConstraintResolvableConstraintExpression">
            <summary>Sets the shim of ResolvableConstraintExpression.op_BitwiseOr(Constraint left, ResolvableConstraintExpression right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.BitwiseOrOpResolvableConstraintExpressionConstraint">
            <summary>Sets the shim of ResolvableConstraintExpression.op_BitwiseOr(ResolvableConstraintExpression left, Constraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.BitwiseOrOpResolvableConstraintExpressionResolvableConstraintExpression">
            <summary>Sets the shim of ResolvableConstraintExpression.op_BitwiseOr(ResolvableConstraintExpression left, ResolvableConstraintExpression right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.Constructor">
            <summary>Sets the shim of ResolvableConstraintExpression.ResolvableConstraintExpression()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.ConstructorConstraintBuilder">
            <summary>Sets the shim of ResolvableConstraintExpression.ResolvableConstraintExpression(ConstraintBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.LogicalNotOpResolvableConstraintExpression">
            <summary>Sets the shim of ResolvableConstraintExpression.op_LogicalNot(ResolvableConstraintExpression constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.NUnitFrameworkConstraintsIResolveConstraintResolve">
            <summary>Sets the shim of ResolvableConstraintExpression.NUnit.Framework.Constraints.IResolveConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.OperatorAndImplementationIResolveConstraintIResolveConstraint">
            <summary>Sets the shim of ResolvableConstraintExpression.OperatorAndImplementation(IResolveConstraint left, IResolveConstraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.OperatorOrImplementationIResolveConstraintIResolveConstraint">
            <summary>Sets the shim of ResolvableConstraintExpression.OperatorOrImplementation(IResolveConstraint left, IResolveConstraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.OrGet">
            <summary>Sets the shim of ResolvableConstraintExpression.get_Or()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.AllInstances.AndGet">
            <summary>Sets the shim of ResolvableConstraintExpression.get_And()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.AllInstances.NUnitFrameworkConstraintsIResolveConstraintResolve">
            <summary>Sets the shim of ResolvableConstraintExpression.NUnit.Framework.Constraints.IResolveConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.AllInstances.OrGet">
            <summary>Sets the shim of ResolvableConstraintExpression.get_Or()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ReusableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.#ctor(NUnit.Framework.Constraints.ReusableConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.ConstructorIResolveConstraint">
            <summary>Sets the shim of ReusableConstraint.ReusableConstraint(IResolveConstraint c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.ImplicitOpConstraintReusableConstraint">
            <summary>Sets the shim of ReusableConstraint.op_Implicit(Constraint c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.Resolve">
            <summary>Sets the shim of ReusableConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.ToString">
            <summary>Sets the shim of ReusableConstraint.ToString()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.AllInstances.Resolve">
            <summary>Sets the shim of ReusableConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.AllInstances.ToString01">
            <summary>Sets the shim of ReusableConstraint.ToString()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.SameAsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.#ctor(NUnit.Framework.Constraints.SameAsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.ConstructorObject">
            <summary>Sets the shim of SameAsConstraint.SameAsConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.MatchesObject">
            <summary>Sets the shim of SameAsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of SameAsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of SameAsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of SameAsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.SamePathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.#ctor(NUnit.Framework.Constraints.SamePathConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.ConstructorString">
            <summary>Sets the shim of SamePathConstraint.SamePathConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.IsMatchStringString">
            <summary>Sets the shim of SamePathConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of SamePathConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.AllInstances.IsMatchStringString">
            <summary>Sets the shim of SamePathConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of SamePathConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.SamePathOrUnderConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.#ctor(NUnit.Framework.Constraints.SamePathOrUnderConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.ConstructorString">
            <summary>Sets the shim of SamePathOrUnderConstraint.SamePathOrUnderConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.IsMatchStringString">
            <summary>Sets the shim of SamePathOrUnderConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of SamePathOrUnderConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.AllInstances.IsMatchStringString">
            <summary>Sets the shim of SamePathOrUnderConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of SamePathOrUnderConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator">
            <summary>Shim type of NUnit.Framework.Constraints.SelfResolvingOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator.#ctor(NUnit.Framework.Constraints.SelfResolvingOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator.Constructor">
            <summary>Sets the shim of SelfResolvingOperator.SelfResolvingOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.SomeItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.#ctor(NUnit.Framework.Constraints.SomeItemsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.ConstructorConstraint">
            <summary>Sets the shim of SomeItemsConstraint.SomeItemsConstraint(Constraint itemConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.MatchesObject">
            <summary>Sets the shim of SomeItemsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of SomeItemsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of SomeItemsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of SomeItemsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSomeOperator">
            <summary>Shim type of NUnit.Framework.Constraints.SomeOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.#ctor(NUnit.Framework.Constraints.SomeOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.ApplyPrefixConstraint">
            <summary>Sets the shim of SomeOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.Constructor">
            <summary>Sets the shim of SomeOperator.SomeOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.AllInstances.ApplyPrefixConstraint">
            <summary>Sets the shim of SomeOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.StartsWithConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.#ctor(NUnit.Framework.Constraints.StartsWithConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.ConstructorString">
            <summary>Sets the shim of StartsWithConstraint.StartsWithConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.MatchesString">
            <summary>Sets the shim of StartsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of StartsWithConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.AllInstances.MatchesString">
            <summary>Sets the shim of StartsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of StartsWithConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimStringConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.StringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.#ctor(NUnit.Framework.Constraints.StringConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.ConstructorString">
            <summary>Sets the shim of StringConstraint.StringConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.IgnoreCaseGet">
            <summary>Sets the shim of StringConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.MatchesObject">
            <summary>Sets the shim of StringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of StringConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of StringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.SubPathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.#ctor(NUnit.Framework.Constraints.SubPathConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.ConstructorString">
            <summary>Sets the shim of SubPathConstraint.SubPathConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.IsMatchStringString">
            <summary>Sets the shim of SubPathConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of SubPathConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.AllInstances.IsMatchStringString">
            <summary>Sets the shim of SubPathConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of SubPathConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.SubstringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.#ctor(NUnit.Framework.Constraints.SubstringConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.ConstructorString">
            <summary>Sets the shim of SubstringConstraint.SubstringConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.MatchesString">
            <summary>Sets the shim of SubstringConstraint.Matches(String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of SubstringConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.AllInstances.MatchesString">
            <summary>Sets the shim of SubstringConstraint.Matches(String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of SubstringConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ThrowsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.#ctor(NUnit.Framework.Constraints.ThrowsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets the shim of ThrowsConstraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.ActualExceptionGet">
            <summary>Sets the shim of ThrowsConstraint.get_ActualException()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.ConstructorConstraint">
            <summary>Sets the shim of ThrowsConstraint.ThrowsConstraint(Constraint baseConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.GetStringRepresentation">
            <summary>Sets the shim of ThrowsConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.MatchesObject">
            <summary>Sets the shim of ThrowsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of ThrowsConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of ThrowsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.AllInstances.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ThrowsConstraint,NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets the shim of ThrowsConstraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.AllInstances.ActualExceptionGet">
            <summary>Sets the shim of ThrowsConstraint.get_ActualException()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of ThrowsConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of ThrowsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of ThrowsConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of ThrowsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ThrowsNothingConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.#ctor(NUnit.Framework.Constraints.ThrowsNothingConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets the shim of ThrowsNothingConstraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.Constructor">
            <summary>Sets the shim of ThrowsNothingConstraint.ThrowsNothingConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.MatchesObject">
            <summary>Sets the shim of ThrowsNothingConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of ThrowsNothingConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of ThrowsNothingConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.AllInstances.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ThrowsNothingConstraint,NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets the shim of ThrowsNothingConstraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of ThrowsNothingConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of ThrowsNothingConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of ThrowsNothingConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator">
            <summary>Shim type of NUnit.Framework.Constraints.ThrowsOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.#ctor(NUnit.Framework.Constraints.ThrowsOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.Constructor">
            <summary>Sets the shim of ThrowsOperator.ThrowsOperator()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of ThrowsOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.AllInstances.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of ThrowsOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTolerance">
            <summary>Shim type of NUnit.Framework.Constraints.Tolerance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTolerance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTolerance.#ctor(NUnit.Framework.Constraints.Tolerance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTolerance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTolerance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.CheckLinearAndNumeric">
            <summary>Sets the shim of Tolerance.CheckLinearAndNumeric()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.ConstructorObject">
            <summary>Sets the shim of Tolerance.Tolerance(Object amount)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.ConstructorObjectToleranceMode">
            <summary>Sets the shim of Tolerance.Tolerance(Object amount, ToleranceMode mode)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.DaysGet">
            <summary>Sets the shim of Tolerance.get_Days()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.EmptyGet">
            <summary>Sets the shim of Tolerance.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.HoursGet">
            <summary>Sets the shim of Tolerance.get_Hours()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.IsEmptyGet">
            <summary>Sets the shim of Tolerance.get_IsEmpty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.MillisecondsGet">
            <summary>Sets the shim of Tolerance.get_Milliseconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.MinutesGet">
            <summary>Sets the shim of Tolerance.get_Minutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.ModeGet">
            <summary>Sets the shim of Tolerance.get_Mode()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.PercentGet">
            <summary>Sets the shim of Tolerance.get_Percent()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.SecondsGet">
            <summary>Sets the shim of Tolerance.get_Seconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.TicksGet">
            <summary>Sets the shim of Tolerance.get_Ticks()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.UlpsGet">
            <summary>Sets the shim of Tolerance.get_Ulps()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.ValueGet">
            <summary>Sets the shim of Tolerance.get_Value()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.ZeroGet">
            <summary>Sets the shim of Tolerance.get_Zero()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.CheckLinearAndNumeric">
            <summary>Sets the shim of Tolerance.CheckLinearAndNumeric()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.DaysGet">
            <summary>Sets the shim of Tolerance.get_Days()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.HoursGet">
            <summary>Sets the shim of Tolerance.get_Hours()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.IsEmptyGet">
            <summary>Sets the shim of Tolerance.get_IsEmpty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.MillisecondsGet">
            <summary>Sets the shim of Tolerance.get_Milliseconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.MinutesGet">
            <summary>Sets the shim of Tolerance.get_Minutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.ModeGet">
            <summary>Sets the shim of Tolerance.get_Mode()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.PercentGet">
            <summary>Sets the shim of Tolerance.get_Percent()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.SecondsGet">
            <summary>Sets the shim of Tolerance.get_Seconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.TicksGet">
            <summary>Sets the shim of Tolerance.get_Ticks()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.UlpsGet">
            <summary>Sets the shim of Tolerance.get_Ulps()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.ValueGet">
            <summary>Sets the shim of Tolerance.get_Value()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.TrueConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.#ctor(NUnit.Framework.Constraints.TrueConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.Constructor">
            <summary>Sets the shim of TrueConstraint.TrueConstraint()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.TypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.#ctor(NUnit.Framework.Constraints.TypeConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.ConstructorType">
            <summary>Sets the shim of TypeConstraint.TypeConstraint(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of TypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of TypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.UniqueItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.#ctor(NUnit.Framework.Constraints.UniqueItemsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.Constructor">
            <summary>Sets the shim of UniqueItemsConstraint.UniqueItemsConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of UniqueItemsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.doMatchIEnumerable">
            <summary>Sets the shim of UniqueItemsConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of UniqueItemsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.AllInstances.doMatchIEnumerable">
            <summary>Sets the shim of UniqueItemsConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimWithOperator">
            <summary>Shim type of NUnit.Framework.Constraints.WithOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimWithOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimWithOperator.#ctor(NUnit.Framework.Constraints.WithOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimWithOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimWithOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimWithOperator.ApplyPrefixConstraint">
            <summary>Sets the shim of WithOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimWithOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimWithOperator.Constructor">
            <summary>Sets the shim of WithOperator.WithOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimWithOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimWithOperator.AllInstances.ApplyPrefixConstraint">
            <summary>Sets the shim of WithOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.XmlSerializableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.#ctor(NUnit.Framework.Constraints.XmlSerializableConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.Constructor">
            <summary>Sets the shim of XmlSerializableConstraint.XmlSerializableConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.GetStringRepresentation">
            <summary>Sets the shim of XmlSerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.MatchesObject">
            <summary>Sets the shim of XmlSerializableConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the shim of XmlSerializableConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of XmlSerializableConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of XmlSerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of XmlSerializableConstraint.Matches(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of XmlSerializableConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.AllInstances.WriteDescriptionToMessageWriter">
            <summary>Sets the shim of XmlSerializableConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.AllItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.#ctor(NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAllItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.Matches(System.Object)">
            <summary>Sets the stub of AllItemsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.MatchesObject">
            <summary>Sets the stub of AllItemsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of AllItemsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of AllItemsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAllOperator">
            <summary>Stub type of NUnit.Framework.Constraints.AllOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllOperator.ApplyPrefix(NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of AllOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllOperator.ApplyPrefixConstraint">
            <summary>Sets the stub of AllOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllOperator.InitializeStub">
            <summary>Initializes a new instance of type StubAllOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAndConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.AndConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.#ctor(NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAndConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.Matches(System.Object)">
            <summary>Sets the stub of AndConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndConstraint.MatchesObject">
            <summary>Sets the stub of AndConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of AndConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of AndConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of AndConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of AndConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAndOperator">
            <summary>Stub type of NUnit.Framework.Constraints.AndOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndOperator.ApplyOperator(NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of AndOperator.ApplyOperator(Constraint left, Constraint right)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndOperator.ApplyOperatorConstraintConstraint">
            <summary>Sets the stub of AndOperator.ApplyOperator(Constraint left, Constraint right)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndOperator.InitializeStub">
            <summary>Initializes a new instance of type StubAndOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndOperator.LeftPrecedenceGet">
            <summary>Sets the stub of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndOperator.RightPrecedenceGet">
            <summary>Sets the stub of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndOperator.LeftPrecedence">
            <summary>Sets the stub of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndOperator.RightPrecedence">
            <summary>Sets the stub of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.AssignableFromConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAssignableFromConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.Matches(System.Object)">
            <summary>Sets the stub of AssignableFromConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.MatchesObject">
            <summary>Sets the stub of AssignableFromConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of TypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of TypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of AssignableFromConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of AssignableFromConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.AssignableToConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAssignableToConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.Matches(System.Object)">
            <summary>Sets the stub of AssignableToConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.MatchesObject">
            <summary>Sets the stub of AssignableToConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of TypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of TypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of AssignableToConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of AssignableToConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.AttributeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.#ctor(System.Type,NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.GetStringRepresentation">
            <summary>Sets the stub of AttributeConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.GetStringRepresentation01">
            <summary>Sets the stub of AttributeConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAttributeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.Matches(System.Object)">
            <summary>Sets the stub of AttributeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.MatchesObject">
            <summary>Sets the stub of AttributeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of AttributeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of AttributeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of AttributeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of AttributeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.AttributeExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAttributeExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.Matches(System.Object)">
            <summary>Sets the stub of AttributeExistsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.MatchesObject">
            <summary>Sets the stub of AttributeExistsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of AttributeExistsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of AttributeExistsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAttributeOperator">
            <summary>Stub type of NUnit.Framework.Constraints.AttributeOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.InitializeStub">
            <summary>Initializes a new instance of type StubAttributeOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of AttributeOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of AttributeOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubBasicConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.BasicConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.#ctor(System.Object,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubBasicConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.Matches(System.Object)">
            <summary>Sets the stub of BasicConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.MatchesObject">
            <summary>Sets the stub of BasicConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of BasicConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of BasicConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBasicConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.BinaryConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.#ctor(NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubBinaryConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.Matches(System.Object)">
            <summary>Sets the stub of Constraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.MatchesObject">
            <summary>Sets the stub of Constraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubBinaryOperator">
            <summary>Stub type of NUnit.Framework.Constraints.BinaryOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.ApplyOperator(NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of BinaryOperator.ApplyOperator(Constraint left, Constraint right)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.ApplyOperatorConstraintConstraint">
            <summary>Sets the stub of BinaryOperator.ApplyOperator(Constraint left, Constraint right)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.InitializeStub">
            <summary>Initializes a new instance of type StubBinaryOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.LeftPrecedenceGet">
            <summary>Sets the stub of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.RightPrecedenceGet">
            <summary>Sets the stub of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.LeftPrecedence">
            <summary>Sets the stub of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.RightPrecedence">
            <summary>Sets the stub of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.BinarySerializableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.GetStringRepresentation">
            <summary>Sets the stub of BinarySerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.GetStringRepresentation01">
            <summary>Sets the stub of BinarySerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubBinarySerializableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.Matches(System.Object)">
            <summary>Sets the stub of BinarySerializableConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.MatchesObject">
            <summary>Sets the stub of BinarySerializableConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of BinarySerializableConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of BinarySerializableConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of BinarySerializableConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of BinarySerializableConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.DoMatchIEnumerable">
            <summary>Sets the stub of CollectionConstraint.doMatch(IEnumerable collection)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.Matches(System.Object)">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.MatchesObject">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.doMatch(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionConstraint.doMatch(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionContainsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.DoMatchIEnumerable">
            <summary>Sets the stub of CollectionContainsConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionContainsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.Matches(System.Object)">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.MatchesObject">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of CollectionContainsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of CollectionContainsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.doMatch(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionContainsConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionEquivalentConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.#ctor(System.Collections.IEnumerable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.DoMatchIEnumerable">
            <summary>Sets the stub of CollectionEquivalentConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionEquivalentConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.Matches(System.Object)">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.MatchesObject">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of CollectionEquivalentConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of CollectionEquivalentConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.doMatch(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionEquivalentConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionItemsEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.DoMatchIEnumerable">
            <summary>Sets the stub of CollectionConstraint.doMatch(IEnumerable collection)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionItemsEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.Matches(System.Object)">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.MatchesObject">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.doMatch(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionConstraint.doMatch(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionOperator">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.ApplyPrefix(NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of PrefixOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.ApplyPrefixConstraint">
            <summary>Sets the stub of PrefixOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionOrderedConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.DoMatchIEnumerable">
            <summary>Sets the stub of CollectionOrderedConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.GetStringRepresentation">
            <summary>Sets the stub of CollectionOrderedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.GetStringRepresentation01">
            <summary>Sets the stub of CollectionOrderedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionOrderedConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.Matches(System.Object)">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.MatchesObject">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of CollectionOrderedConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of CollectionOrderedConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.doMatch(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionOrderedConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionSubsetConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.#ctor(System.Collections.IEnumerable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.DoMatchIEnumerable">
            <summary>Sets the stub of CollectionSubsetConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionSubsetConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.Matches(System.Object)">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.MatchesObject">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of CollectionSubsetConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of CollectionSubsetConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.doMatch(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionSubsetConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionTally">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionTally</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionTally.#ctor(NUnit.Framework.Constraints.NUnitEqualityComparer,System.Collections.IEnumerable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionTally.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionTally</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionTally.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionTally.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionTally.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter">
            <summary>Stub type of NUnit.Framework.Constraints.ComparisonAdapter</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.Compare(System.Object,System.Object)">
            <summary>Sets the stub of ComparisonAdapter.Compare(Object expected, Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.CompareObjectObject">
            <summary>Sets the stub of ComparisonAdapter.Compare(Object expected, Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.InitializeStub">
            <summary>Initializes a new instance of type StubComparisonAdapter</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ComparisonConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubComparisonConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.Matches(System.Object)">
            <summary>Sets the stub of Constraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.MatchesObject">
            <summary>Sets the stub of Constraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.Constraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.Matches(System.Object)">
            <summary>Sets the stub of Constraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraint.MatchesObject">
            <summary>Sets the stub of Constraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubConstraintBuilder">
            <summary>Stub type of NUnit.Framework.Constraints.ConstraintBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubConstraintBuilder</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubConstraintExpression">
            <summary>Stub type of NUnit.Framework.Constraints.ConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.#ctor(NUnit.Framework.Constraints.ConstraintBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.InitializeStub">
            <summary>Initializes a new instance of type StubConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.ToString">
            <summary>Sets the stub of ConstraintExpressionBase.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.ToString01">
            <summary>Sets the stub of ConstraintExpressionBase.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubConstraintExpressionBase">
            <summary>Stub type of NUnit.Framework.Constraints.ConstraintExpressionBase</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintExpressionBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintExpressionBase.#ctor(NUnit.Framework.Constraints.ConstraintBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintExpressionBase.InitializeStub">
            <summary>Initializes a new instance of type StubConstraintExpressionBase</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintExpressionBase.ToString">
            <summary>Sets the stub of ConstraintExpressionBase.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraintExpressionBase.ToString01">
            <summary>Sets the stub of ConstraintExpressionBase.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintExpressionBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintExpressionBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintExpressionBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubConstraintFactory">
            <summary>Stub type of NUnit.Framework.Constraints.ConstraintFactory</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintFactory.InitializeStub">
            <summary>Initializes a new instance of type StubConstraintFactory</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubConstraintOperator">
            <summary>Stub type of NUnit.Framework.Constraints.ConstraintOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.InitializeStub">
            <summary>Initializes a new instance of type StubConstraintOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of ConstraintOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of ConstraintOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubContainsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ContainsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubContainsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.Matches(System.Object)">
            <summary>Sets the stub of ContainsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.MatchesObject">
            <summary>Sets the stub of ContainsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of ContainsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of ContainsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.DelayedConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.#ctor(NUnit.Framework.Constraints.Constraint,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.#ctor(NUnit.Framework.Constraints.Constraint,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.GetStringRepresentation">
            <summary>Sets the stub of DelayedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.GetStringRepresentation01">
            <summary>Sets the stub of DelayedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubDelayedConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of DelayedConstraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.Matches``1(``0@)">
            <summary>Sets the stub of DelayedConstraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.Matches(System.Object)">
            <summary>Sets the stub of DelayedConstraint.Matches(Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.MatchesObject">
            <summary>Sets the stub of DelayedConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of DelayedConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of DelayedConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of DelayedConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of DelayedConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.EmptyCollectionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.DoMatchIEnumerable">
            <summary>Sets the stub of EmptyCollectionConstraint.doMatch(IEnumerable collection)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyCollectionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.Matches(System.Object)">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.MatchesObject">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of EmptyCollectionConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of EmptyCollectionConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.doMatch(System.Collections.IEnumerable)">
            <summary>Sets the stub of EmptyCollectionConstraint.doMatch(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.EmptyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.Matches(System.Object)">
            <summary>Sets the stub of EmptyConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.MatchesObject">
            <summary>Sets the stub of EmptyConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of EmptyConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of EmptyConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.EmptyDirectoryConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyDirectoryConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.Matches(System.Object)">
            <summary>Sets the stub of EmptyDirectoryConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.MatchesObject">
            <summary>Sets the stub of EmptyDirectoryConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of EmptyDirectoryConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of EmptyDirectoryConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of EmptyDirectoryConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of EmptyDirectoryConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.EmptyStringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyStringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.Matches(System.Object)">
            <summary>Sets the stub of EmptyStringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.MatchesObject">
            <summary>Sets the stub of EmptyStringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of EmptyStringConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of EmptyStringConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.EndsWithConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubEndsWithConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.Matches(System.Object)">
            <summary>Sets the stub of StringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.Matches(System.String)">
            <summary>Sets the stub of EndsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.MatchesObject">
            <summary>Sets the stub of StringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.MatchesString">
            <summary>Sets the stub of EndsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of EndsWithConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of EndsWithConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEqualConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.EqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.Matches(System.Object)">
            <summary>Sets the stub of EqualConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.MatchesObject">
            <summary>Sets the stub of EqualConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of EqualConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of EqualConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of EqualConstraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of EqualConstraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter">
            <summary>Stub type of NUnit.Framework.Constraints.EqualityAdapter</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.AreEqual(System.Object,System.Object)">
            <summary>Sets the stub of EqualityAdapter.AreEqual(Object x, Object y)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.AreEqualObjectObject">
            <summary>Sets the stub of EqualityAdapter.AreEqual(Object x, Object y)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.CanCompare(System.Object,System.Object)">
            <summary>Sets the stub of EqualityAdapter.CanCompare(Object x, Object y)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.CanCompareObjectObject">
            <summary>Sets the stub of EqualityAdapter.CanCompare(Object x, Object y)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.InitializeStub">
            <summary>Initializes a new instance of type StubEqualityAdapter</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ExactCountConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.#ctor(System.Int32,NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubExactCountConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.Matches(System.Object)">
            <summary>Sets the stub of ExactCountConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.MatchesObject">
            <summary>Sets the stub of ExactCountConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of ExactCountConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of ExactCountConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubExactCountOperator">
            <summary>Stub type of NUnit.Framework.Constraints.ExactCountOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.ApplyPrefix(NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of ExactCountOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.ApplyPrefixConstraint">
            <summary>Sets the stub of ExactCountOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.InitializeStub">
            <summary>Initializes a new instance of type StubExactCountOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ExactTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubExactTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.Matches(System.Object)">
            <summary>Sets the stub of ExactTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.MatchesObject">
            <summary>Sets the stub of ExactTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of TypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of TypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of ExactTypeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of ExactTypeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ExceptionTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubExceptionTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.Matches(System.Object)">
            <summary>Sets the stub of ExactTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.MatchesObject">
            <summary>Sets the stub of ExactTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of ExceptionTypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of ExceptionTypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of ExactTypeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of ExactTypeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubFailurePoint">
            <summary>Stub type of NUnit.Framework.Constraints.FailurePoint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFailurePoint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFailurePoint.InitializeStub">
            <summary>Initializes a new instance of type StubFailurePoint</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFailurePoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFailurePoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFailurePoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubFalseConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.FalseConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubFalseConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.Matches(System.Object)">
            <summary>Sets the stub of BasicConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.MatchesObject">
            <summary>Sets the stub of BasicConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of BasicConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of BasicConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.GreaterThanConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubGreaterThanConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.Matches(System.Object)">
            <summary>Sets the stub of GreaterThanConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.MatchesObject">
            <summary>Sets the stub of GreaterThanConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of GreaterThanConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of GreaterThanConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.GreaterThanOrEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubGreaterThanOrEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.Matches(System.Object)">
            <summary>Sets the stub of GreaterThanOrEqualConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.MatchesObject">
            <summary>Sets the stub of GreaterThanOrEqualConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of GreaterThanOrEqualConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of GreaterThanOrEqualConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubIResolveConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.IResolveConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIResolveConstraint.#ctor">
            <summary>Initializes a new instance of type StubIResolveConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIResolveConstraint.n::NUnit#Framework#Constraints#IResolveConstraint#Resolve">
            <summary>Sets the stub of IResolveConstraint.Resolve()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubIResolveConstraint.Resolve">
            <summary>Sets the stub of IResolveConstraint.Resolve()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.InstanceOfTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubInstanceOfTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.Matches(System.Object)">
            <summary>Sets the stub of InstanceOfTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.MatchesObject">
            <summary>Sets the stub of InstanceOfTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of TypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of TypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of InstanceOfTypeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of InstanceOfTypeConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.LessThanConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubLessThanConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.Matches(System.Object)">
            <summary>Sets the stub of LessThanConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.MatchesObject">
            <summary>Sets the stub of LessThanConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of LessThanConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of LessThanConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.LessThanOrEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubLessThanOrEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.Matches(System.Object)">
            <summary>Sets the stub of LessThanOrEqualConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.MatchesObject">
            <summary>Sets the stub of LessThanOrEqualConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of LessThanOrEqualConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of LessThanOrEqualConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubMessageWriter">
            <summary>Stub type of NUnit.Framework.Constraints.MessageWriter</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.AttachBackingFieldToMaxLineLength">
            <summary>Attaches delegates to emulate StubMessageWriter.MaxLineLength as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.AttachBackingFieldToNewLine">
            <summary>Attaches delegates to emulate StubMessageWriter.NewLine as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Close">
            <summary>Sets the stub of StringWriter.Close()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Close01">
            <summary>Sets the stub of StringWriter.Close()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayDifferences(NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of MessageWriter.DisplayDifferences(Constraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayDifferences(System.Object,System.Object)">
            <summary>Sets the stub of MessageWriter.DisplayDifferences(Object expected, Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayDifferences(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)">
            <summary>Sets the stub of MessageWriter.DisplayDifferences(Object expected, Object actual, Tolerance tolerance)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayDifferencesConstraint">
            <summary>Sets the stub of MessageWriter.DisplayDifferences(Constraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayDifferencesObjectObject">
            <summary>Sets the stub of MessageWriter.DisplayDifferences(Object expected, Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayDifferencesObjectObjectTolerance">
            <summary>Sets the stub of MessageWriter.DisplayDifferences(Object expected, Object actual, Tolerance tolerance)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayStringDifferences(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>Sets the stub of MessageWriter.DisplayStringDifferences(String expected, String actual, Int32 mismatch, Boolean ignoreCase, Boolean clipping)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayStringDifferencesStringStringInt32BooleanBoolean">
            <summary>Sets the stub of MessageWriter.DisplayStringDifferences(String expected, String actual, Int32 mismatch, Boolean ignoreCase, Boolean clipping)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Dispose(System.Boolean)">
            <summary>Sets the stub of StringWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisposeBoolean">
            <summary>Sets the stub of StringWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.EncodingGet">
            <summary>Sets the stub of StringWriter.get_Encoding()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Flush">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Flush01">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.FlushAsync">
            <summary>Sets the stub of StringWriter.FlushAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.FlushAsync01">
            <summary>Sets the stub of StringWriter.FlushAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.FormatProviderGet">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.GetStringBuilder">
            <summary>Sets the stub of StringWriter.GetStringBuilder()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.GetStringBuilder01">
            <summary>Sets the stub of StringWriter.GetStringBuilder()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.InitializeStub">
            <summary>Initializes a new instance of type StubMessageWriter</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.MaxLineLengthGet">
            <summary>Sets the stub of MessageWriter.get_MaxLineLength()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.MaxLineLengthSetInt32">
            <summary>Sets the stub of MessageWriter.set_MaxLineLength(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.NewLineGet">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.NewLineSetString">
            <summary>Sets the stub of TextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.ToString">
            <summary>Sets the stub of StringWriter.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.ToString01">
            <summary>Sets the stub of StringWriter.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Boolean)">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Char)">
            <summary>Sets the stub of StringWriter.Write(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Decimal)">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Int32)">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Object)">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Double)">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Char[])">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.UInt64)">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Single)">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Int64)">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.UInt32)">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.String)">
            <summary>Sets the stub of StringWriter.Write(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of StringWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteActualValue(System.Object)">
            <summary>Sets the stub of MessageWriter.WriteActualValue(Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteActualValueObject">
            <summary>Sets the stub of MessageWriter.WriteActualValue(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteAsync(System.String)">
            <summary>Sets the stub of StringWriter.WriteAsync(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteAsync(System.Char)">
            <summary>Sets the stub of StringWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of StringWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteAsyncChar">
            <summary>Sets the stub of StringWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteAsyncCharArrayInt32Int32">
            <summary>Sets the stub of StringWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteAsyncString">
            <summary>Sets the stub of StringWriter.WriteAsync(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteBoolean">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteChar">
            <summary>Sets the stub of StringWriter.Write(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteCharArray">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteCharArrayInt32Int32">
            <summary>Sets the stub of StringWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteCollectionElements(System.Collections.IEnumerable,System.Int32,System.Int32)">
            <summary>Sets the stub of MessageWriter.WriteCollectionElements(IEnumerable collection, Int32 start, Int32 max)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteCollectionElementsIEnumerableInt32Int32">
            <summary>Sets the stub of MessageWriter.WriteCollectionElements(IEnumerable collection, Int32 start, Int32 max)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteConnector(System.String)">
            <summary>Sets the stub of MessageWriter.WriteConnector(String connector)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteConnectorString">
            <summary>Sets the stub of MessageWriter.WriteConnector(String connector)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteDecimal">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteDouble">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteExpectedValue(System.Object)">
            <summary>Sets the stub of MessageWriter.WriteExpectedValue(Object expected)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteExpectedValueObject">
            <summary>Sets the stub of MessageWriter.WriteExpectedValue(Object expected)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteInt32">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteInt64">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Char)">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Int64)">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Single)">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.String)">
            <summary>Sets the stub of TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.UInt32)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.UInt64)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Char[])">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Boolean)">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Decimal)">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Double)">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine01">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsync">
            <summary>Sets the stub of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsync(System.String)">
            <summary>Sets the stub of StringWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsync(System.Char)">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsync01">
            <summary>Sets the stub of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsyncChar">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsyncCharArrayInt32Int32">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsyncString">
            <summary>Sets the stub of StringWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineBoolean">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineChar">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineCharArray">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineDecimal">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineDouble">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineInt32">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineInt64">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineObject">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineSingle">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineString">
            <summary>Sets the stub of TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineStringObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineStringObjectArray">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineStringObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineUInt32">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineUInt64">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteMessageLine(System.Int32,System.String,System.Object[])">
            <summary>Sets the stub of MessageWriter.WriteMessageLine(Int32 level, String message, Object[] args)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteMessageLineInt32StringObjectArray">
            <summary>Sets the stub of MessageWriter.WriteMessageLine(Int32 level, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteModifier(System.String)">
            <summary>Sets the stub of MessageWriter.WriteModifier(String modifier)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteModifierString">
            <summary>Sets the stub of MessageWriter.WriteModifier(String modifier)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteObject">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WritePredicate(System.String)">
            <summary>Sets the stub of MessageWriter.WritePredicate(String predicate)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WritePredicateString">
            <summary>Sets the stub of MessageWriter.WritePredicate(String predicate)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteSingle">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteString">
            <summary>Sets the stub of StringWriter.Write(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteStringObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteStringObjectArray">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteStringObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteUInt32">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteUInt64">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteValue(System.Object)">
            <summary>Sets the stub of MessageWriter.WriteValue(Object val)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteValueObject">
            <summary>Sets the stub of MessageWriter.WriteValue(Object val)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Encoding">
            <summary>Sets the stub of StringWriter.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.FormatProvider">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.MaxLineLength">
            <summary>Sets the stub of MessageWriter.get_MaxLineLength()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.NewLine">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubMsgUtils">
            <summary>Stub type of NUnit.Framework.Constraints.MsgUtils</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMsgUtils.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMsgUtils.InitializeStub">
            <summary>Initializes a new instance of type StubMsgUtils</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMsgUtils.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMsgUtils.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMsgUtils.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNUnitComparer">
            <summary>Stub type of NUnit.Framework.Constraints.NUnitComparer</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNUnitComparer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNUnitComparer.InitializeStub">
            <summary>Initializes a new instance of type StubNUnitComparer</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitComparer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitComparer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitComparer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNUnitComparer`1">
            <summary>Stub type of NUnit.Framework.Constraints.NUnitComparer`1</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNUnitComparer`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNUnitComparer`1.InitializeStub">
            <summary>Initializes a new instance of type StubNUnitComparer</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitComparer`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitComparer`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitComparer`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNUnitEqualityComparer">
            <summary>Stub type of NUnit.Framework.Constraints.NUnitEqualityComparer</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNUnitEqualityComparer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNUnitEqualityComparer.InitializeStub">
            <summary>Initializes a new instance of type StubNUnitEqualityComparer</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitEqualityComparer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitEqualityComparer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitEqualityComparer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNaNConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.NaNConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubNaNConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.Matches(System.Object)">
            <summary>Sets the stub of NaNConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.MatchesObject">
            <summary>Sets the stub of NaNConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of NaNConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of NaNConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.NoItemConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.#ctor(NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubNoItemConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.Matches(System.Object)">
            <summary>Sets the stub of NoItemConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.MatchesObject">
            <summary>Sets the stub of NoItemConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of NoItemConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of NoItemConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNoneOperator">
            <summary>Stub type of NUnit.Framework.Constraints.NoneOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoneOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoneOperator.ApplyPrefix(NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of NoneOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoneOperator.ApplyPrefixConstraint">
            <summary>Sets the stub of NoneOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoneOperator.InitializeStub">
            <summary>Initializes a new instance of type StubNoneOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoneOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoneOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoneOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoneOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoneOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoneOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoneOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoneOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoneOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNotConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.NotConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.#ctor(NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubNotConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.Matches(System.Object)">
            <summary>Sets the stub of NotConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotConstraint.MatchesObject">
            <summary>Sets the stub of NotConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of NotConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of NotConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of NotConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of NotConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNotOperator">
            <summary>Stub type of NUnit.Framework.Constraints.NotOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotOperator.ApplyPrefix(NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of NotOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotOperator.ApplyPrefixConstraint">
            <summary>Sets the stub of NotOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotOperator.InitializeStub">
            <summary>Initializes a new instance of type StubNotOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNullConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.NullConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubNullConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.Matches(System.Object)">
            <summary>Sets the stub of BasicConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullConstraint.MatchesObject">
            <summary>Sets the stub of BasicConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of BasicConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of BasicConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNullConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNullConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNullConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.NullOrEmptyStringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubNullOrEmptyStringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.Matches(System.Object)">
            <summary>Sets the stub of NullOrEmptyStringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.MatchesObject">
            <summary>Sets the stub of NullOrEmptyStringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of NullOrEmptyStringConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of NullOrEmptyStringConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNullOrEmptyStringConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubOrConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.OrConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.#ctor(NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubOrConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.Matches(System.Object)">
            <summary>Sets the stub of OrConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrConstraint.MatchesObject">
            <summary>Sets the stub of OrConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of OrConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of OrConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubOrOperator">
            <summary>Stub type of NUnit.Framework.Constraints.OrOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrOperator.ApplyOperator(NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of OrOperator.ApplyOperator(Constraint left, Constraint right)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrOperator.ApplyOperatorConstraintConstraint">
            <summary>Sets the stub of OrOperator.ApplyOperator(Constraint left, Constraint right)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrOperator.InitializeStub">
            <summary>Initializes a new instance of type StubOrOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrOperator.LeftPrecedenceGet">
            <summary>Sets the stub of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrOperator.RightPrecedenceGet">
            <summary>Sets the stub of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrOperator.LeftPrecedence">
            <summary>Sets the stub of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrOperator.RightPrecedence">
            <summary>Sets the stub of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPathConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.PathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.GetStringRepresentation">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPathConstraint.GetStringRepresentation01">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubPathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.IsMatch(System.String,System.String)">
            <summary>Sets the stub of PathConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPathConstraint.IsMatchStringString">
            <summary>Sets the stub of PathConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.Matches(System.Object)">
            <summary>Sets the stub of PathConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPathConstraint.MatchesObject">
            <summary>Sets the stub of PathConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPathConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPathConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPathConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPathConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPathConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPathConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPathConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1">
            <summary>Stub type of NUnit.Framework.Constraints.PredicateConstraint`1</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.#ctor(System.Predicate{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.InitializeStub">
            <summary>Initializes a new instance of type StubPredicateConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.Matches(System.Object)">
            <summary>Sets the stub of PredicateConstraint`1.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.MatchesObject">
            <summary>Sets the stub of PredicateConstraint`1.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of PredicateConstraint`1.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of PredicateConstraint`1.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.PrefixConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.#ctor(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubPrefixConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.Matches(System.Object)">
            <summary>Sets the stub of Constraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.MatchesObject">
            <summary>Sets the stub of Constraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPrefixOperator">
            <summary>Stub type of NUnit.Framework.Constraints.PrefixOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.ApplyPrefix(NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of PrefixOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.ApplyPrefixConstraint">
            <summary>Sets the stub of PrefixOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.InitializeStub">
            <summary>Initializes a new instance of type StubPrefixOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPropOperator">
            <summary>Stub type of NUnit.Framework.Constraints.PropOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropOperator.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropOperator.InitializeStub">
            <summary>Initializes a new instance of type StubPropOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PropOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PropOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.PropertyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.#ctor(System.String,NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.GetStringRepresentation">
            <summary>Sets the stub of PropertyConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.GetStringRepresentation01">
            <summary>Sets the stub of PropertyConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.Matches(System.Object)">
            <summary>Sets the stub of PropertyConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.MatchesObject">
            <summary>Sets the stub of PropertyConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of PropertyConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of PropertyConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of PropertyConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of PropertyConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.PropertyExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.GetStringRepresentation">
            <summary>Sets the stub of PropertyExistsConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of PropertyExistsConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.Matches(System.Object)">
            <summary>Sets the stub of PropertyExistsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.MatchesObject">
            <summary>Sets the stub of PropertyExistsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of PropertyExistsConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of PropertyExistsConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of PropertyExistsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of PropertyExistsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1">
            <summary>Stub type of NUnit.Framework.Constraints.RangeConstraint`1</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.#ctor(`0,`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.InitializeStub">
            <summary>Initializes a new instance of type StubRangeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.Matches(System.Object)">
            <summary>Sets the stub of RangeConstraint`1.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.MatchesObject">
            <summary>Sets the stub of RangeConstraint`1.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of RangeConstraint`1.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of RangeConstraint`1.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRangeConstraint`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubRegexConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.RegexConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubRegexConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.Matches(System.Object)">
            <summary>Sets the stub of StringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.Matches(System.String)">
            <summary>Sets the stub of RegexConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.MatchesObject">
            <summary>Sets the stub of StringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.MatchesString">
            <summary>Sets the stub of RegexConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of RegexConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of RegexConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression">
            <summary>Stub type of NUnit.Framework.Constraints.ResolvableConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.#ctor(NUnit.Framework.Constraints.ConstraintBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.InitializeStub">
            <summary>Initializes a new instance of type StubResolvableConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.ToString">
            <summary>Sets the stub of ConstraintExpressionBase.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.ToString01">
            <summary>Sets the stub of ConstraintExpressionBase.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubReusableConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ReusableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.#ctor(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubReusableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.ToString">
            <summary>Sets the stub of ReusableConstraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.ToString01">
            <summary>Sets the stub of ReusableConstraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.SameAsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubSameAsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.Matches(System.Object)">
            <summary>Sets the stub of SameAsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.MatchesObject">
            <summary>Sets the stub of SameAsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of SameAsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of SameAsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.SamePathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.GetStringRepresentation">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.GetStringRepresentation01">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubSamePathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.IsMatch(System.String,System.String)">
            <summary>Sets the stub of SamePathConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.IsMatchStringString">
            <summary>Sets the stub of SamePathConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.Matches(System.Object)">
            <summary>Sets the stub of PathConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.MatchesObject">
            <summary>Sets the stub of PathConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of SamePathConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of SamePathConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.SamePathOrUnderConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.GetStringRepresentation">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.GetStringRepresentation01">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubSamePathOrUnderConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.IsMatch(System.String,System.String)">
            <summary>Sets the stub of SamePathOrUnderConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.IsMatchStringString">
            <summary>Sets the stub of SamePathOrUnderConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.Matches(System.Object)">
            <summary>Sets the stub of PathConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.MatchesObject">
            <summary>Sets the stub of PathConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of SamePathOrUnderConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of SamePathOrUnderConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator">
            <summary>Stub type of NUnit.Framework.Constraints.SelfResolvingOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.InitializeStub">
            <summary>Initializes a new instance of type StubSelfResolvingOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of ConstraintOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of ConstraintOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.SomeItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.#ctor(NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubSomeItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.Matches(System.Object)">
            <summary>Sets the stub of SomeItemsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.MatchesObject">
            <summary>Sets the stub of SomeItemsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of SomeItemsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of SomeItemsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSomeOperator">
            <summary>Stub type of NUnit.Framework.Constraints.SomeOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeOperator.ApplyPrefix(NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of SomeOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeOperator.ApplyPrefixConstraint">
            <summary>Sets the stub of SomeOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeOperator.InitializeStub">
            <summary>Initializes a new instance of type StubSomeOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.StartsWithConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubStartsWithConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.Matches(System.Object)">
            <summary>Sets the stub of StringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.Matches(System.String)">
            <summary>Sets the stub of StartsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.MatchesObject">
            <summary>Sets the stub of StringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.MatchesString">
            <summary>Sets the stub of StartsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of StartsWithConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of StartsWithConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubStringConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.StringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStringConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubStringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.Matches(System.Object)">
            <summary>Sets the stub of StringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.Matches(System.String)">
            <summary>Sets the stub of StringConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStringConstraint.MatchesObject">
            <summary>Sets the stub of StringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStringConstraint.MatchesString">
            <summary>Sets the stub of StringConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStringConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStringConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStringConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStringConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStringConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStringConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStringConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.SubPathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.GetStringRepresentation">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.GetStringRepresentation01">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubSubPathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.IsMatch(System.String,System.String)">
            <summary>Sets the stub of SubPathConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.IsMatchStringString">
            <summary>Sets the stub of SubPathConstraint.IsMatch(String expectedPath, String actualPath)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.Matches(System.Object)">
            <summary>Sets the stub of PathConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.MatchesObject">
            <summary>Sets the stub of PathConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of SubPathConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of SubPathConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.SubstringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubSubstringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.Matches(System.Object)">
            <summary>Sets the stub of StringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.Matches(System.String)">
            <summary>Sets the stub of SubstringConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.MatchesObject">
            <summary>Sets the stub of StringConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.MatchesString">
            <summary>Sets the stub of SubstringConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of SubstringConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of SubstringConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ThrowsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.#ctor(NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.GetStringRepresentation">
            <summary>Sets the stub of ThrowsConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of ThrowsConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubThrowsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.Matches(System.Object)">
            <summary>Sets the stub of ThrowsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of ThrowsConstraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.MatchesObject">
            <summary>Sets the stub of ThrowsConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of ThrowsConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of ThrowsConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of ThrowsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of ThrowsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ThrowsNothingConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubThrowsNothingConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.Matches(System.Object)">
            <summary>Sets the stub of ThrowsNothingConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of ThrowsNothingConstraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.MatchesObject">
            <summary>Sets the stub of ThrowsNothingConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of ThrowsNothingConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of ThrowsNothingConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of ThrowsNothingConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of ThrowsNothingConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubThrowsOperator">
            <summary>Stub type of NUnit.Framework.Constraints.ThrowsOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.InitializeStub">
            <summary>Initializes a new instance of type StubThrowsOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of ThrowsOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of ThrowsOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubTolerance">
            <summary>Stub type of NUnit.Framework.Constraints.Tolerance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTolerance.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTolerance.InitializeStub">
            <summary>Initializes a new instance of type StubTolerance</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTolerance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTolerance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTolerance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubTrueConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.TrueConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubTrueConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.Matches(System.Object)">
            <summary>Sets the stub of BasicConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.MatchesObject">
            <summary>Sets the stub of BasicConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of BasicConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of BasicConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubTypeConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.TypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.Matches(System.Object)">
            <summary>Sets the stub of Constraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.MatchesObject">
            <summary>Sets the stub of Constraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of TypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of TypeConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of Constraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.UniqueItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.DoMatchIEnumerable">
            <summary>Sets the stub of UniqueItemsConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubUniqueItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.Matches(System.Object)">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.MatchesObject">
            <summary>Sets the stub of CollectionConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of Constraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of UniqueItemsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of UniqueItemsConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.doMatch(System.Collections.IEnumerable)">
            <summary>Sets the stub of UniqueItemsConstraint.doMatch(IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubWithOperator">
            <summary>Stub type of NUnit.Framework.Constraints.WithOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubWithOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubWithOperator.ApplyPrefix(NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of WithOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubWithOperator.ApplyPrefixConstraint">
            <summary>Sets the stub of WithOperator.ApplyPrefix(Constraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubWithOperator.InitializeStub">
            <summary>Initializes a new instance of type StubWithOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubWithOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubWithOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubWithOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubWithOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubWithOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubWithOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubWithOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubWithOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubWithOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.XmlSerializableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.GetStringRepresentation">
            <summary>Sets the stub of XmlSerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.GetStringRepresentation01">
            <summary>Sets the stub of XmlSerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubXmlSerializableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.Matches(System.Object)">
            <summary>Sets the stub of XmlSerializableConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.Matches``1(``0@)">
            <summary>Sets the stub of Constraint.Matches(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.MatchesObject">
            <summary>Sets the stub of XmlSerializableConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.MatchesOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Boolean})">
            <summary>Sets stubs of Matches(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.MatchesOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets stubs of Matches(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of XmlSerializableConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.WriteActualValueToMessageWriter">
            <summary>Sets the stub of XmlSerializableConstraint.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of XmlSerializableConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.WriteDescriptionToMessageWriter">
            <summary>Sets the stub of XmlSerializableConstraint.WriteDescriptionTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.WriteMessageToMessageWriter">
            <summary>Sets the stub of Constraint.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssert">
            <summary>Shim type of NUnit.Framework.Assert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.#ctor(NUnit.Framework.Assert)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.CatchOf1TestDelegate``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.TestDelegate,``0})">
            <summary>Sets the shim of Assert.Catch(TestDelegate code)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.CatchOf1TestDelegateString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.TestDelegate,System.String,``0})">
            <summary>Sets the shim of Assert.Catch(TestDelegate code, String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.CatchOf1TestDelegateStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.TestDelegate,System.String,System.Object[],``0})">
            <summary>Sets the shim of Assert.Catch(TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsAssignableFromOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object})">
            <summary>Sets the shim of Assert.IsAssignableFrom(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsAssignableFromOf1ObjectString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.String})">
            <summary>Sets the shim of Assert.IsAssignableFrom(Object actual, String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsAssignableFromOf1ObjectStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.String,System.Object[]})">
            <summary>Sets the shim of Assert.IsAssignableFrom(Object actual, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object})">
            <summary>Sets the shim of Assert.IsInstanceOf(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfOf1ObjectString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.String})">
            <summary>Sets the shim of Assert.IsInstanceOf(Object actual, String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfOf1ObjectStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.String,System.Object[]})">
            <summary>Sets the shim of Assert.IsInstanceOf(Object actual, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsNotAssignableFromOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object})">
            <summary>Sets the shim of Assert.IsNotAssignableFrom(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsNotAssignableFromOf1ObjectString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.String})">
            <summary>Sets the shim of Assert.IsNotAssignableFrom(Object actual, String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsNotAssignableFromOf1ObjectStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.String,System.Object[]})">
            <summary>Sets the shim of Assert.IsNotAssignableFrom(Object actual, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object})">
            <summary>Sets the shim of Assert.IsNotInstanceOf(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfOf1ObjectString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.String})">
            <summary>Sets the shim of Assert.IsNotInstanceOf(Object actual, String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfOf1ObjectStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.String,System.Object[]})">
            <summary>Sets the shim of Assert.IsNotInstanceOf(Object actual, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThatOf1ActualValueDelegateOfM0IResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of Assert.That(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThatOf1ActualValueDelegateOfM0IResolveConstraintString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String})">
            <summary>Sets the shim of Assert.That(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThatOf1ActualValueDelegateOfM0IResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of Assert.That(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThatOf1M0RefIResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.Delegates.NunitframeworkDelegates.Ref0Action2{``0,NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of Assert.That(!!0&amp; actual, IResolveConstraint expression)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThatOf1M0RefIResolveConstraintString``1(Microsoft.QualityTools.Testing.Fakes.Delegates.NunitframeworkDelegates.Ref0Action3{``0,NUnit.Framework.Constraints.IResolveConstraint,System.String})">
            <summary>Sets the shim of Assert.That(!!0&amp; actual, IResolveConstraint expression, String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThatOf1M0RefIResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.Delegates.NunitframeworkDelegates.Ref0Action4{``0,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of Assert.That(!!0&amp; actual, IResolveConstraint expression, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThrowsOf1TestDelegate``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.TestDelegate,``0})">
            <summary>Sets the shim of Assert.Throws(TestDelegate code)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThrowsOf1TestDelegateString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.TestDelegate,System.String,``0})">
            <summary>Sets the shim of Assert.Throws(TestDelegate code, String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThrowsOf1TestDelegateStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.TestDelegate,System.String,System.Object[],``0})">
            <summary>Sets the shim of Assert.Throws(TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDecimalDecimal">
            <summary>Sets the shim of Assert.AreEqual(Decimal expected, Decimal actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDecimalDecimalString">
            <summary>Sets the shim of Assert.AreEqual(Decimal expected, Decimal actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDecimalDecimalStringObjectArray">
            <summary>Sets the shim of Assert.AreEqual(Decimal expected, Decimal actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDoubleDoubleDouble">
            <summary>Sets the shim of Assert.AreEqual(Double expected, Double actual, Double delta)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDoubleDoubleDoubleString">
            <summary>Sets the shim of Assert.AreEqual(Double expected, Double actual, Double delta, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDoubleDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.AreEqual(Double expected, Double actual, Double delta, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDoubleNullableOfDoubleDouble">
            <summary>Sets the shim of Assert.AreEqual(Double expected, Nullable`1&lt;Double&gt; actual, Double delta)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDoubleNullableOfDoubleDoubleString">
            <summary>Sets the shim of Assert.AreEqual(Double expected, Nullable`1&lt;Double&gt; actual, Double delta, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDoubleNullableOfDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.AreEqual(Double expected, Nullable`1&lt;Double&gt; actual, Double delta, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualInt32Int32">
            <summary>Sets the shim of Assert.AreEqual(Int32 expected, Int32 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualInt32Int32String">
            <summary>Sets the shim of Assert.AreEqual(Int32 expected, Int32 actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualInt32Int32StringObjectArray">
            <summary>Sets the shim of Assert.AreEqual(Int32 expected, Int32 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualInt64Int64">
            <summary>Sets the shim of Assert.AreEqual(Int64 expected, Int64 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualInt64Int64String">
            <summary>Sets the shim of Assert.AreEqual(Int64 expected, Int64 actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualInt64Int64StringObjectArray">
            <summary>Sets the shim of Assert.AreEqual(Int64 expected, Int64 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualObjectObject">
            <summary>Sets the shim of Assert.AreEqual(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualObjectObjectString">
            <summary>Sets the shim of Assert.AreEqual(Object expected, Object actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualObjectObjectStringObjectArray">
            <summary>Sets the shim of Assert.AreEqual(Object expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualUInt32UInt32">
            <summary>Sets the shim of Assert.AreEqual(UInt32 expected, UInt32 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualUInt32UInt32String">
            <summary>Sets the shim of Assert.AreEqual(UInt32 expected, UInt32 actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualUInt32UInt32StringObjectArray">
            <summary>Sets the shim of Assert.AreEqual(UInt32 expected, UInt32 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualUInt64UInt64">
            <summary>Sets the shim of Assert.AreEqual(UInt64 expected, UInt64 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualUInt64UInt64String">
            <summary>Sets the shim of Assert.AreEqual(UInt64 expected, UInt64 actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualUInt64UInt64StringObjectArray">
            <summary>Sets the shim of Assert.AreEqual(UInt64 expected, UInt64 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualDecimalDecimal">
            <summary>Sets the shim of Assert.AreNotEqual(Decimal expected, Decimal actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualDecimalDecimalString">
            <summary>Sets the shim of Assert.AreNotEqual(Decimal expected, Decimal actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualDecimalDecimalStringObjectArray">
            <summary>Sets the shim of Assert.AreNotEqual(Decimal expected, Decimal actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualDoubleDouble">
            <summary>Sets the shim of Assert.AreNotEqual(Double expected, Double actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualDoubleDoubleString">
            <summary>Sets the shim of Assert.AreNotEqual(Double expected, Double actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.AreNotEqual(Double expected, Double actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualInt32Int32">
            <summary>Sets the shim of Assert.AreNotEqual(Int32 expected, Int32 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualInt32Int32String">
            <summary>Sets the shim of Assert.AreNotEqual(Int32 expected, Int32 actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualInt32Int32StringObjectArray">
            <summary>Sets the shim of Assert.AreNotEqual(Int32 expected, Int32 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualInt64Int64">
            <summary>Sets the shim of Assert.AreNotEqual(Int64 expected, Int64 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualInt64Int64String">
            <summary>Sets the shim of Assert.AreNotEqual(Int64 expected, Int64 actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualInt64Int64StringObjectArray">
            <summary>Sets the shim of Assert.AreNotEqual(Int64 expected, Int64 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualObjectObject">
            <summary>Sets the shim of Assert.AreNotEqual(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualObjectObjectString">
            <summary>Sets the shim of Assert.AreNotEqual(Object expected, Object actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualObjectObjectStringObjectArray">
            <summary>Sets the shim of Assert.AreNotEqual(Object expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualSingleSingle">
            <summary>Sets the shim of Assert.AreNotEqual(Single expected, Single actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualSingleSingleString">
            <summary>Sets the shim of Assert.AreNotEqual(Single expected, Single actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualSingleSingleStringObjectArray">
            <summary>Sets the shim of Assert.AreNotEqual(Single expected, Single actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualUInt32UInt32">
            <summary>Sets the shim of Assert.AreNotEqual(UInt32 expected, UInt32 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualUInt32UInt32String">
            <summary>Sets the shim of Assert.AreNotEqual(UInt32 expected, UInt32 actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualUInt32UInt32StringObjectArray">
            <summary>Sets the shim of Assert.AreNotEqual(UInt32 expected, UInt32 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualUInt64UInt64">
            <summary>Sets the shim of Assert.AreNotEqual(UInt64 expected, UInt64 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualUInt64UInt64String">
            <summary>Sets the shim of Assert.AreNotEqual(UInt64 expected, UInt64 actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualUInt64UInt64StringObjectArray">
            <summary>Sets the shim of Assert.AreNotEqual(UInt64 expected, UInt64 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotSameObjectObject">
            <summary>Sets the shim of Assert.AreNotSame(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotSameObjectObjectString">
            <summary>Sets the shim of Assert.AreNotSame(Object expected, Object actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotSameObjectObjectStringObjectArray">
            <summary>Sets the shim of Assert.AreNotSame(Object expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreSameObjectObject">
            <summary>Sets the shim of Assert.AreSame(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreSameObjectObjectString">
            <summary>Sets the shim of Assert.AreSame(Object expected, Object actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreSameObjectObjectStringObjectArray">
            <summary>Sets the shim of Assert.AreSame(Object expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AssertDoublesAreEqualDoubleDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.AssertDoublesAreEqual(Double expected, Double actual, Double delta, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ByValObjectIResolveConstraint">
            <summary>Sets the shim of Assert.ByVal(Object actual, IResolveConstraint expression)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ByValObjectIResolveConstraintString">
            <summary>Sets the shim of Assert.ByVal(Object actual, IResolveConstraint expression, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ByValObjectIResolveConstraintStringObjectArray">
            <summary>Sets the shim of Assert.ByVal(Object actual, IResolveConstraint expression, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchTestDelegate">
            <summary>Sets the shim of Assert.Catch(TestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchTestDelegateString">
            <summary>Sets the shim of Assert.Catch(TestDelegate code, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.Catch(TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchTypeTestDelegate">
            <summary>Sets the shim of Assert.Catch(Type expectedExceptionType, TestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchTypeTestDelegateString">
            <summary>Sets the shim of Assert.Catch(Type expectedExceptionType, TestDelegate code, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchTypeTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.Catch(Type expectedExceptionType, TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.Constructor">
            <summary>Sets the shim of Assert.Assert()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ContainsObjectICollection">
            <summary>Sets the shim of Assert.Contains(Object expected, ICollection actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ContainsObjectICollectionString">
            <summary>Sets the shim of Assert.Contains(Object expected, ICollection actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ContainsObjectICollectionStringObjectArray">
            <summary>Sets the shim of Assert.Contains(Object expected, ICollection actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CounterGet">
            <summary>Sets the shim of Assert.get_Counter()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.DoesNotThrowTestDelegate">
            <summary>Sets the shim of Assert.DoesNotThrow(TestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.DoesNotThrowTestDelegateString">
            <summary>Sets the shim of Assert.DoesNotThrow(TestDelegate code, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.DoesNotThrowTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.DoesNotThrow(TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.EqualsObjectObject">
            <summary>Sets the shim of Assert.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.Fail">
            <summary>Sets the shim of Assert.Fail()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.FailString">
            <summary>Sets the shim of Assert.Fail(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.FailStringObjectArray">
            <summary>Sets the shim of Assert.Fail(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.FalseBoolean">
            <summary>Sets the shim of Assert.False(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.FalseBooleanString">
            <summary>Sets the shim of Assert.False(Boolean condition, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.FalseBooleanStringObjectArray">
            <summary>Sets the shim of Assert.False(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterDecimalDecimal">
            <summary>Sets the shim of Assert.Greater(Decimal arg1, Decimal arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterDecimalDecimalString">
            <summary>Sets the shim of Assert.Greater(Decimal arg1, Decimal arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterDecimalDecimalStringObjectArray">
            <summary>Sets the shim of Assert.Greater(Decimal arg1, Decimal arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterDoubleDouble">
            <summary>Sets the shim of Assert.Greater(Double arg1, Double arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterDoubleDoubleString">
            <summary>Sets the shim of Assert.Greater(Double arg1, Double arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.Greater(Double arg1, Double arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterIComparableIComparable">
            <summary>Sets the shim of Assert.Greater(IComparable arg1, IComparable arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterIComparableIComparableString">
            <summary>Sets the shim of Assert.Greater(IComparable arg1, IComparable arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterIComparableIComparableStringObjectArray">
            <summary>Sets the shim of Assert.Greater(IComparable arg1, IComparable arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterInt32Int32">
            <summary>Sets the shim of Assert.Greater(Int32 arg1, Int32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterInt32Int32String">
            <summary>Sets the shim of Assert.Greater(Int32 arg1, Int32 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterInt32Int32StringObjectArray">
            <summary>Sets the shim of Assert.Greater(Int32 arg1, Int32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterInt64Int64">
            <summary>Sets the shim of Assert.Greater(Int64 arg1, Int64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterInt64Int64String">
            <summary>Sets the shim of Assert.Greater(Int64 arg1, Int64 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterInt64Int64StringObjectArray">
            <summary>Sets the shim of Assert.Greater(Int64 arg1, Int64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualDecimalDecimal">
            <summary>Sets the shim of Assert.GreaterOrEqual(Decimal arg1, Decimal arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualDecimalDecimalString">
            <summary>Sets the shim of Assert.GreaterOrEqual(Decimal arg1, Decimal arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualDecimalDecimalStringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(Decimal arg1, Decimal arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualDoubleDouble">
            <summary>Sets the shim of Assert.GreaterOrEqual(Double arg1, Double arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualDoubleDoubleString">
            <summary>Sets the shim of Assert.GreaterOrEqual(Double arg1, Double arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(Double arg1, Double arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualIComparableIComparable">
            <summary>Sets the shim of Assert.GreaterOrEqual(IComparable arg1, IComparable arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualIComparableIComparableString">
            <summary>Sets the shim of Assert.GreaterOrEqual(IComparable arg1, IComparable arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualIComparableIComparableStringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(IComparable arg1, IComparable arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualInt32Int32">
            <summary>Sets the shim of Assert.GreaterOrEqual(Int32 arg1, Int32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualInt32Int32String">
            <summary>Sets the shim of Assert.GreaterOrEqual(Int32 arg1, Int32 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualInt32Int32StringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(Int32 arg1, Int32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualInt64Int64">
            <summary>Sets the shim of Assert.GreaterOrEqual(Int64 arg1, Int64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualInt64Int64String">
            <summary>Sets the shim of Assert.GreaterOrEqual(Int64 arg1, Int64 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualInt64Int64StringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(Int64 arg1, Int64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualSingleSingle">
            <summary>Sets the shim of Assert.GreaterOrEqual(Single arg1, Single arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualSingleSingleString">
            <summary>Sets the shim of Assert.GreaterOrEqual(Single arg1, Single arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualSingleSingleStringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(Single arg1, Single arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualUInt32UInt32">
            <summary>Sets the shim of Assert.GreaterOrEqual(UInt32 arg1, UInt32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualUInt32UInt32String">
            <summary>Sets the shim of Assert.GreaterOrEqual(UInt32 arg1, UInt32 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualUInt32UInt32StringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(UInt32 arg1, UInt32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualUInt64UInt64">
            <summary>Sets the shim of Assert.GreaterOrEqual(UInt64 arg1, UInt64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualUInt64UInt64String">
            <summary>Sets the shim of Assert.GreaterOrEqual(UInt64 arg1, UInt64 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualUInt64UInt64StringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(UInt64 arg1, UInt64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterSingleSingle">
            <summary>Sets the shim of Assert.Greater(Single arg1, Single arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterSingleSingleString">
            <summary>Sets the shim of Assert.Greater(Single arg1, Single arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterSingleSingleStringObjectArray">
            <summary>Sets the shim of Assert.Greater(Single arg1, Single arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterUInt32UInt32">
            <summary>Sets the shim of Assert.Greater(UInt32 arg1, UInt32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterUInt32UInt32String">
            <summary>Sets the shim of Assert.Greater(UInt32 arg1, UInt32 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterUInt32UInt32StringObjectArray">
            <summary>Sets the shim of Assert.Greater(UInt32 arg1, UInt32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterUInt64UInt64">
            <summary>Sets the shim of Assert.Greater(UInt64 arg1, UInt64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterUInt64UInt64String">
            <summary>Sets the shim of Assert.Greater(UInt64 arg1, UInt64 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterUInt64UInt64StringObjectArray">
            <summary>Sets the shim of Assert.Greater(UInt64 arg1, UInt64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.Ignore">
            <summary>Sets the shim of Assert.Ignore()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IgnoreString">
            <summary>Sets the shim of Assert.Ignore(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IgnoreStringObjectArray">
            <summary>Sets the shim of Assert.Ignore(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.Inconclusive">
            <summary>Sets the shim of Assert.Inconclusive()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.InconclusiveString">
            <summary>Sets the shim of Assert.Inconclusive(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.InconclusiveStringObjectArray">
            <summary>Sets the shim of Assert.Inconclusive(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IncrementAssertCount">
            <summary>Sets the shim of Assert.IncrementAssertCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsAssignableFromTypeObject">
            <summary>Sets the shim of Assert.IsAssignableFrom(Type expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsAssignableFromTypeObjectString">
            <summary>Sets the shim of Assert.IsAssignableFrom(Type expected, Object actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsAssignableFromTypeObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsAssignableFrom(Type expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsEmptyIEnumerable">
            <summary>Sets the shim of Assert.IsEmpty(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsEmptyIEnumerableString">
            <summary>Sets the shim of Assert.IsEmpty(IEnumerable collection, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsEmptyIEnumerableStringObjectArray">
            <summary>Sets the shim of Assert.IsEmpty(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsEmptyString">
            <summary>Sets the shim of Assert.IsEmpty(String aString)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsEmptyStringString">
            <summary>Sets the shim of Assert.IsEmpty(String aString, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsEmptyStringStringObjectArray">
            <summary>Sets the shim of Assert.IsEmpty(String aString, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsFalseBoolean">
            <summary>Sets the shim of Assert.IsFalse(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsFalseBooleanString">
            <summary>Sets the shim of Assert.IsFalse(Boolean condition, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsFalseBooleanStringObjectArray">
            <summary>Sets the shim of Assert.IsFalse(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfTypeObject">
            <summary>Sets the shim of Assert.IsInstanceOf(Type expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfTypeObjectString">
            <summary>Sets the shim of Assert.IsInstanceOf(Type expected, Object actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfTypeObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsInstanceOf(Type expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfTypeTypeObject">
            <summary>Sets the shim of Assert.IsInstanceOfType(Type expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfTypeTypeObjectString">
            <summary>Sets the shim of Assert.IsInstanceOfType(Type expected, Object actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfTypeTypeObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsInstanceOfType(Type expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNaNDouble">
            <summary>Sets the shim of Assert.IsNaN(Double aDouble)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNaNDoubleString">
            <summary>Sets the shim of Assert.IsNaN(Double aDouble, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNaNDoubleStringObjectArray">
            <summary>Sets the shim of Assert.IsNaN(Double aDouble, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNaNNullableOfDouble">
            <summary>Sets the shim of Assert.IsNaN(Nullable`1&lt;Double&gt; aDouble)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNaNNullableOfDoubleString">
            <summary>Sets the shim of Assert.IsNaN(Nullable`1&lt;Double&gt; aDouble, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNaNNullableOfDoubleStringObjectArray">
            <summary>Sets the shim of Assert.IsNaN(Nullable`1&lt;Double&gt; aDouble, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotAssignableFromTypeObject">
            <summary>Sets the shim of Assert.IsNotAssignableFrom(Type expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotAssignableFromTypeObjectString">
            <summary>Sets the shim of Assert.IsNotAssignableFrom(Type expected, Object actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotAssignableFromTypeObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsNotAssignableFrom(Type expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotEmptyIEnumerable">
            <summary>Sets the shim of Assert.IsNotEmpty(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotEmptyIEnumerableString">
            <summary>Sets the shim of Assert.IsNotEmpty(IEnumerable collection, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotEmptyIEnumerableStringObjectArray">
            <summary>Sets the shim of Assert.IsNotEmpty(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotEmptyString">
            <summary>Sets the shim of Assert.IsNotEmpty(String aString)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotEmptyStringString">
            <summary>Sets the shim of Assert.IsNotEmpty(String aString, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotEmptyStringStringObjectArray">
            <summary>Sets the shim of Assert.IsNotEmpty(String aString, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfTypeObject">
            <summary>Sets the shim of Assert.IsNotInstanceOf(Type expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfTypeObjectString">
            <summary>Sets the shim of Assert.IsNotInstanceOf(Type expected, Object actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfTypeObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsNotInstanceOf(Type expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfTypeTypeObject">
            <summary>Sets the shim of Assert.IsNotInstanceOfType(Type expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfTypeTypeObjectString">
            <summary>Sets the shim of Assert.IsNotInstanceOfType(Type expected, Object actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfTypeTypeObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsNotInstanceOfType(Type expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotNullObject">
            <summary>Sets the shim of Assert.IsNotNull(Object anObject)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotNullObjectString">
            <summary>Sets the shim of Assert.IsNotNull(Object anObject, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotNullObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsNotNull(Object anObject, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotNullOrEmptyString">
            <summary>Sets the shim of Assert.IsNotNullOrEmpty(String aString)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotNullOrEmptyStringString">
            <summary>Sets the shim of Assert.IsNotNullOrEmpty(String aString, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotNullOrEmptyStringStringObjectArray">
            <summary>Sets the shim of Assert.IsNotNullOrEmpty(String aString, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNullObject">
            <summary>Sets the shim of Assert.IsNull(Object anObject)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNullObjectString">
            <summary>Sets the shim of Assert.IsNull(Object anObject, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNullObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsNull(Object anObject, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNullOrEmptyString">
            <summary>Sets the shim of Assert.IsNullOrEmpty(String aString)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNullOrEmptyStringString">
            <summary>Sets the shim of Assert.IsNullOrEmpty(String aString, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNullOrEmptyStringStringObjectArray">
            <summary>Sets the shim of Assert.IsNullOrEmpty(String aString, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsTrueBoolean">
            <summary>Sets the shim of Assert.IsTrue(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsTrueBooleanString">
            <summary>Sets the shim of Assert.IsTrue(Boolean condition, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsTrueBooleanStringObjectArray">
            <summary>Sets the shim of Assert.IsTrue(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessDecimalDecimal">
            <summary>Sets the shim of Assert.Less(Decimal arg1, Decimal arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessDecimalDecimalString">
            <summary>Sets the shim of Assert.Less(Decimal arg1, Decimal arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessDecimalDecimalStringObjectArray">
            <summary>Sets the shim of Assert.Less(Decimal arg1, Decimal arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessDoubleDouble">
            <summary>Sets the shim of Assert.Less(Double arg1, Double arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessDoubleDoubleString">
            <summary>Sets the shim of Assert.Less(Double arg1, Double arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.Less(Double arg1, Double arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessIComparableIComparable">
            <summary>Sets the shim of Assert.Less(IComparable arg1, IComparable arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessIComparableIComparableString">
            <summary>Sets the shim of Assert.Less(IComparable arg1, IComparable arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessIComparableIComparableStringObjectArray">
            <summary>Sets the shim of Assert.Less(IComparable arg1, IComparable arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessInt32Int32">
            <summary>Sets the shim of Assert.Less(Int32 arg1, Int32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessInt32Int32String">
            <summary>Sets the shim of Assert.Less(Int32 arg1, Int32 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessInt32Int32StringObjectArray">
            <summary>Sets the shim of Assert.Less(Int32 arg1, Int32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessInt64Int64">
            <summary>Sets the shim of Assert.Less(Int64 arg1, Int64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessInt64Int64String">
            <summary>Sets the shim of Assert.Less(Int64 arg1, Int64 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessInt64Int64StringObjectArray">
            <summary>Sets the shim of Assert.Less(Int64 arg1, Int64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualDecimalDecimal">
            <summary>Sets the shim of Assert.LessOrEqual(Decimal arg1, Decimal arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualDecimalDecimalString">
            <summary>Sets the shim of Assert.LessOrEqual(Decimal arg1, Decimal arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualDecimalDecimalStringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(Decimal arg1, Decimal arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualDoubleDouble">
            <summary>Sets the shim of Assert.LessOrEqual(Double arg1, Double arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualDoubleDoubleString">
            <summary>Sets the shim of Assert.LessOrEqual(Double arg1, Double arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(Double arg1, Double arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualIComparableIComparable">
            <summary>Sets the shim of Assert.LessOrEqual(IComparable arg1, IComparable arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualIComparableIComparableString">
            <summary>Sets the shim of Assert.LessOrEqual(IComparable arg1, IComparable arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualIComparableIComparableStringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(IComparable arg1, IComparable arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualInt32Int32">
            <summary>Sets the shim of Assert.LessOrEqual(Int32 arg1, Int32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualInt32Int32String">
            <summary>Sets the shim of Assert.LessOrEqual(Int32 arg1, Int32 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualInt32Int32StringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(Int32 arg1, Int32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualInt64Int64">
            <summary>Sets the shim of Assert.LessOrEqual(Int64 arg1, Int64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualInt64Int64String">
            <summary>Sets the shim of Assert.LessOrEqual(Int64 arg1, Int64 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualInt64Int64StringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(Int64 arg1, Int64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualSingleSingle">
            <summary>Sets the shim of Assert.LessOrEqual(Single arg1, Single arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualSingleSingleString">
            <summary>Sets the shim of Assert.LessOrEqual(Single arg1, Single arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualSingleSingleStringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(Single arg1, Single arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualUInt32UInt32">
            <summary>Sets the shim of Assert.LessOrEqual(UInt32 arg1, UInt32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualUInt32UInt32String">
            <summary>Sets the shim of Assert.LessOrEqual(UInt32 arg1, UInt32 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualUInt32UInt32StringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(UInt32 arg1, UInt32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualUInt64UInt64">
            <summary>Sets the shim of Assert.LessOrEqual(UInt64 arg1, UInt64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualUInt64UInt64String">
            <summary>Sets the shim of Assert.LessOrEqual(UInt64 arg1, UInt64 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualUInt64UInt64StringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(UInt64 arg1, UInt64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessSingleSingle">
            <summary>Sets the shim of Assert.Less(Single arg1, Single arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessSingleSingleString">
            <summary>Sets the shim of Assert.Less(Single arg1, Single arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessSingleSingleStringObjectArray">
            <summary>Sets the shim of Assert.Less(Single arg1, Single arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessUInt32UInt32">
            <summary>Sets the shim of Assert.Less(UInt32 arg1, UInt32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessUInt32UInt32String">
            <summary>Sets the shim of Assert.Less(UInt32 arg1, UInt32 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessUInt32UInt32StringObjectArray">
            <summary>Sets the shim of Assert.Less(UInt32 arg1, UInt32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessUInt64UInt64">
            <summary>Sets the shim of Assert.Less(UInt64 arg1, UInt64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessUInt64UInt64String">
            <summary>Sets the shim of Assert.Less(UInt64 arg1, UInt64 arg2, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessUInt64UInt64StringObjectArray">
            <summary>Sets the shim of Assert.Less(UInt64 arg1, UInt64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotNullObject">
            <summary>Sets the shim of Assert.NotNull(Object anObject)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotNullObjectString">
            <summary>Sets the shim of Assert.NotNull(Object anObject, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotNullObjectStringObjectArray">
            <summary>Sets the shim of Assert.NotNull(Object anObject, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NullObject">
            <summary>Sets the shim of Assert.Null(Object anObject)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NullObjectString">
            <summary>Sets the shim of Assert.Null(Object anObject, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NullObjectStringObjectArray">
            <summary>Sets the shim of Assert.Null(Object anObject, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.Pass">
            <summary>Sets the shim of Assert.Pass()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PassString">
            <summary>Sets the shim of Assert.Pass(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PassStringObjectArray">
            <summary>Sets the shim of Assert.Pass(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ReferenceEqualsObjectObject">
            <summary>Sets the shim of Assert.ReferenceEquals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.StaticConstructor">
            <summary>Sets the shim of Assert.Assert()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatBoolean">
            <summary>Sets the shim of Assert.That(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatBooleanString">
            <summary>Sets the shim of Assert.That(Boolean condition, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatBooleanStringObjectArray">
            <summary>Sets the shim of Assert.That(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatObjectIResolveConstraint">
            <summary>Sets the shim of Assert.That(Object actual, IResolveConstraint expression)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatObjectIResolveConstraintString">
            <summary>Sets the shim of Assert.That(Object actual, IResolveConstraint expression, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatObjectIResolveConstraintStringObjectArray">
            <summary>Sets the shim of Assert.That(Object actual, IResolveConstraint expression, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatTestDelegateIResolveConstraint">
            <summary>Sets the shim of Assert.That(TestDelegate code, IResolveConstraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsIResolveConstraintTestDelegate">
            <summary>Sets the shim of Assert.Throws(IResolveConstraint expression, TestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsIResolveConstraintTestDelegateString">
            <summary>Sets the shim of Assert.Throws(IResolveConstraint expression, TestDelegate code, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsIResolveConstraintTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.Throws(IResolveConstraint expression, TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsTypeTestDelegate">
            <summary>Sets the shim of Assert.Throws(Type expectedExceptionType, TestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsTypeTestDelegateString">
            <summary>Sets the shim of Assert.Throws(Type expectedExceptionType, TestDelegate code, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsTypeTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.Throws(Type expectedExceptionType, TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.TrueBoolean">
            <summary>Sets the shim of Assert.True(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.TrueBooleanString">
            <summary>Sets the shim of Assert.True(Boolean condition, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.TrueBooleanStringObjectArray">
            <summary>Sets the shim of Assert.True(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssert.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssertionException">
            <summary>Shim type of NUnit.Framework.AssertionException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionException.#ctor(NUnit.Framework.AssertionException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AssertionException.AssertionException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionException.ConstructorString">
            <summary>Sets the shim of AssertionException.AssertionException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionException.ConstructorStringException">
            <summary>Sets the shim of AssertionException.AssertionException(String message, Exception inner)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssertionException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssertionHelper">
            <summary>Shim type of NUnit.Framework.AssertionHelper</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionHelper.#ctor(NUnit.Framework.AssertionHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionHelper.ExpectOf1ActualValueDelegateOfM0IResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of AssertionHelper.Expect(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionHelper.ExpectOf1ActualValueDelegateOfM0IResolveConstraintString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String})">
            <summary>Sets the shim of AssertionHelper.Expect(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionHelper.ExpectOf1ActualValueDelegateOfM0IResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of AssertionHelper.Expect(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.Constructor">
            <summary>Sets the shim of AssertionHelper.AssertionHelper()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.ExpectBoolean">
            <summary>Sets the shim of AssertionHelper.Expect(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.ExpectBooleanString">
            <summary>Sets the shim of AssertionHelper.Expect(Boolean condition, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.ExpectBooleanStringObjectArray">
            <summary>Sets the shim of AssertionHelper.Expect(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.ExpectObjectIResolveConstraint">
            <summary>Sets the shim of AssertionHelper.Expect(Object actual, IResolveConstraint expression)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.ExpectObjectIResolveConstraintString">
            <summary>Sets the shim of AssertionHelper.Expect(Object actual, IResolveConstraint expression, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.ExpectObjectIResolveConstraintStringObjectArray">
            <summary>Sets the shim of AssertionHelper.Expect(Object actual, IResolveConstraint expression, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.ExpectTestDelegateIResolveConstraint">
            <summary>Sets the shim of AssertionHelper.Expect(TestDelegate code, IResolveConstraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.MapICollection">
            <summary>Sets the shim of AssertionHelper.Map(ICollection original)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssertionHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionHelper.AllInstances.ExpectOf1ActualValueDelegateOfM0IResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.AssertionHelper,NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of AssertionHelper.Expect(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionHelper.AllInstances.ExpectOf1ActualValueDelegateOfM0IResolveConstraintString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.AssertionHelper,NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String})">
            <summary>Sets the shim of AssertionHelper.Expect(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionHelper.AllInstances.ExpectOf1ActualValueDelegateOfM0IResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.AssertionHelper,NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of AssertionHelper.Expect(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.AllInstances.ExpectBoolean">
            <summary>Sets the shim of AssertionHelper.Expect(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.AllInstances.ExpectBooleanString">
            <summary>Sets the shim of AssertionHelper.Expect(Boolean condition, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.AllInstances.ExpectBooleanStringObjectArray">
            <summary>Sets the shim of AssertionHelper.Expect(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.AllInstances.ExpectObjectIResolveConstraint">
            <summary>Sets the shim of AssertionHelper.Expect(Object actual, IResolveConstraint expression)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.AllInstances.ExpectObjectIResolveConstraintString">
            <summary>Sets the shim of AssertionHelper.Expect(Object actual, IResolveConstraint expression, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.AllInstances.ExpectObjectIResolveConstraintStringObjectArray">
            <summary>Sets the shim of AssertionHelper.Expect(Object actual, IResolveConstraint expression, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.AllInstances.ExpectTestDelegateIResolveConstraint">
            <summary>Sets the shim of AssertionHelper.Expect(TestDelegate code, IResolveConstraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionHelper.AllInstances.MapICollection">
            <summary>Sets the shim of AssertionHelper.Map(ICollection original)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssume">
            <summary>Shim type of NUnit.Framework.Assume</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.#ctor(NUnit.Framework.Assume)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.ThatOf1ActualValueDelegateOfM0IResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of Assume.That(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.ThatOf1ActualValueDelegateOfM0IResolveConstraintString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String})">
            <summary>Sets the shim of Assume.That(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.ThatOf1ActualValueDelegateOfM0IResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of Assume.That(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.ThatOf1M0RefIResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.Delegates.NunitframeworkDelegates.Ref0Action2{``0,NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of Assume.That(!!0&amp; actual, IResolveConstraint expression)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.ThatOf1M0RefIResolveConstraintString``1(Microsoft.QualityTools.Testing.Fakes.Delegates.NunitframeworkDelegates.Ref0Action3{``0,NUnit.Framework.Constraints.IResolveConstraint,System.String})">
            <summary>Sets the shim of Assume.That(!!0&amp; actual, IResolveConstraint expression, String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.ThatOf1M0RefIResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.Delegates.NunitframeworkDelegates.Ref0Action4{``0,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of Assume.That(!!0&amp; actual, IResolveConstraint expression, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.Constructor">
            <summary>Sets the shim of Assume.Assume()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.EqualsObjectObject">
            <summary>Sets the shim of Assume.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ReferenceEqualsObjectObject">
            <summary>Sets the shim of Assume.ReferenceEquals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatBoolean">
            <summary>Sets the shim of Assume.That(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatBooleanString">
            <summary>Sets the shim of Assume.That(Boolean condition, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatBooleanStringObjectArray">
            <summary>Sets the shim of Assume.That(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatObjectIResolveConstraint">
            <summary>Sets the shim of Assume.That(Object actual, IResolveConstraint expression)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatObjectIResolveConstraintString">
            <summary>Sets the shim of Assume.That(Object actual, IResolveConstraint expression, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatObjectIResolveConstraintStringObjectArray">
            <summary>Sets the shim of Assume.That(Object actual, IResolveConstraint expression, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatTestDelegateIResolveConstraint">
            <summary>Sets the shim of Assume.That(TestDelegate code, IResolveConstraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssume.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCategoryAttribute">
            <summary>Shim type of NUnit.Framework.CategoryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCategoryAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCategoryAttribute.#ctor(NUnit.Framework.CategoryAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCategoryAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCategoryAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCategoryAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCategoryAttribute.Constructor">
            <summary>Sets the shim of CategoryAttribute.CategoryAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCategoryAttribute.ConstructorString">
            <summary>Sets the shim of CategoryAttribute.CategoryAttribute(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCategoryAttribute.NameGet">
            <summary>Sets the shim of CategoryAttribute.get_Name()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCategoryAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCategoryAttribute.AllInstances.NameGet">
            <summary>Sets the shim of CategoryAttribute.get_Name()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCollectionAssert">
            <summary>Shim type of NUnit.Framework.CollectionAssert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCollectionAssert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCollectionAssert.#ctor(NUnit.Framework.CollectionAssert)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCollectionAssert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCollectionAssert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreInstancesOfTypeIEnumerableType">
            <summary>Sets the shim of CollectionAssert.AllItemsAreInstancesOfType(IEnumerable collection, Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreInstancesOfTypeIEnumerableTypeString">
            <summary>Sets the shim of CollectionAssert.AllItemsAreInstancesOfType(IEnumerable collection, Type expectedType, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreInstancesOfTypeIEnumerableTypeStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AllItemsAreInstancesOfType(IEnumerable collection, Type expectedType, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreNotNullIEnumerable">
            <summary>Sets the shim of CollectionAssert.AllItemsAreNotNull(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreNotNullIEnumerableString">
            <summary>Sets the shim of CollectionAssert.AllItemsAreNotNull(IEnumerable collection, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreNotNullIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AllItemsAreNotNull(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreUniqueIEnumerable">
            <summary>Sets the shim of CollectionAssert.AllItemsAreUnique(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreUniqueIEnumerableString">
            <summary>Sets the shim of CollectionAssert.AllItemsAreUnique(IEnumerable collection, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreUniqueIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AllItemsAreUnique(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEqualIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.AreEqual(IEnumerable expected, IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEqualIEnumerableIEnumerableIComparer">
            <summary>Sets the shim of CollectionAssert.AreEqual(IEnumerable expected, IEnumerable actual, IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEqualIEnumerableIEnumerableIComparerString">
            <summary>Sets the shim of CollectionAssert.AreEqual(IEnumerable expected, IEnumerable actual, IComparer comparer, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEqualIEnumerableIEnumerableIComparerStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AreEqual(IEnumerable expected, IEnumerable actual, IComparer comparer, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEqualIEnumerableIEnumerableString">
            <summary>Sets the shim of CollectionAssert.AreEqual(IEnumerable expected, IEnumerable actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEqualIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AreEqual(IEnumerable expected, IEnumerable actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEquivalentIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.AreEquivalent(IEnumerable expected, IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEquivalentIEnumerableIEnumerableString">
            <summary>Sets the shim of CollectionAssert.AreEquivalent(IEnumerable expected, IEnumerable actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEquivalentIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AreEquivalent(IEnumerable expected, IEnumerable actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEqualIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.AreNotEqual(IEnumerable expected, IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEqualIEnumerableIEnumerableIComparer">
            <summary>Sets the shim of CollectionAssert.AreNotEqual(IEnumerable expected, IEnumerable actual, IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEqualIEnumerableIEnumerableIComparerString">
            <summary>Sets the shim of CollectionAssert.AreNotEqual(IEnumerable expected, IEnumerable actual, IComparer comparer, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEqualIEnumerableIEnumerableIComparerStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AreNotEqual(IEnumerable expected, IEnumerable actual, IComparer comparer, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEqualIEnumerableIEnumerableString">
            <summary>Sets the shim of CollectionAssert.AreNotEqual(IEnumerable expected, IEnumerable actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEqualIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AreNotEqual(IEnumerable expected, IEnumerable actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEquivalentIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.AreNotEquivalent(IEnumerable expected, IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEquivalentIEnumerableIEnumerableString">
            <summary>Sets the shim of CollectionAssert.AreNotEquivalent(IEnumerable expected, IEnumerable actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEquivalentIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AreNotEquivalent(IEnumerable expected, IEnumerable actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.Constructor">
            <summary>Sets the shim of CollectionAssert.CollectionAssert()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.ContainsIEnumerableObject">
            <summary>Sets the shim of CollectionAssert.Contains(IEnumerable collection, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.ContainsIEnumerableObjectString">
            <summary>Sets the shim of CollectionAssert.Contains(IEnumerable collection, Object actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.ContainsIEnumerableObjectStringObjectArray">
            <summary>Sets the shim of CollectionAssert.Contains(IEnumerable collection, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.DoesNotContainIEnumerableObject">
            <summary>Sets the shim of CollectionAssert.DoesNotContain(IEnumerable collection, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.DoesNotContainIEnumerableObjectString">
            <summary>Sets the shim of CollectionAssert.DoesNotContain(IEnumerable collection, Object actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.DoesNotContainIEnumerableObjectStringObjectArray">
            <summary>Sets the shim of CollectionAssert.DoesNotContain(IEnumerable collection, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.EqualsObjectObject">
            <summary>Sets the shim of CollectionAssert.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsEmptyIEnumerable">
            <summary>Sets the shim of CollectionAssert.IsEmpty(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsEmptyIEnumerableString">
            <summary>Sets the shim of CollectionAssert.IsEmpty(IEnumerable collection, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsEmptyIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsEmpty(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsNotEmptyIEnumerable">
            <summary>Sets the shim of CollectionAssert.IsNotEmpty(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsNotEmptyIEnumerableString">
            <summary>Sets the shim of CollectionAssert.IsNotEmpty(IEnumerable collection, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsNotEmptyIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsNotEmpty(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsNotSubsetOfIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.IsNotSubsetOf(IEnumerable subset, IEnumerable superset)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsNotSubsetOfIEnumerableIEnumerableString">
            <summary>Sets the shim of CollectionAssert.IsNotSubsetOf(IEnumerable subset, IEnumerable superset, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsNotSubsetOfIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsNotSubsetOf(IEnumerable subset, IEnumerable superset, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsOrderedIEnumerable">
            <summary>Sets the shim of CollectionAssert.IsOrdered(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsOrderedIEnumerableIComparer">
            <summary>Sets the shim of CollectionAssert.IsOrdered(IEnumerable collection, IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsOrderedIEnumerableIComparerString">
            <summary>Sets the shim of CollectionAssert.IsOrdered(IEnumerable collection, IComparer comparer, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsOrderedIEnumerableIComparerStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsOrdered(IEnumerable collection, IComparer comparer, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsOrderedIEnumerableString">
            <summary>Sets the shim of CollectionAssert.IsOrdered(IEnumerable collection, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsOrderedIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsOrdered(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsSubsetOfIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.IsSubsetOf(IEnumerable subset, IEnumerable superset)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsSubsetOfIEnumerableIEnumerableString">
            <summary>Sets the shim of CollectionAssert.IsSubsetOf(IEnumerable subset, IEnumerable superset, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsSubsetOfIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsSubsetOf(IEnumerable subset, IEnumerable superset, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.ReferenceEqualsObjectObject">
            <summary>Sets the shim of CollectionAssert.ReferenceEquals(Object a, Object b)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCollectionAssert.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCombinatorialAttribute">
            <summary>Shim type of NUnit.Framework.CombinatorialAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombinatorialAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombinatorialAttribute.#ctor(NUnit.Framework.CombinatorialAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombinatorialAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombinatorialAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCombinatorialAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCombinatorialAttribute.Constructor">
            <summary>Sets the shim of CombinatorialAttribute.CombinatorialAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCombinatorialAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimContains">
            <summary>Shim type of NUnit.Framework.Contains</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimContains.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimContains.#ctor(NUnit.Framework.Contains)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimContains.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimContains.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimContains.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimContains.Constructor">
            <summary>Sets the shim of Contains.Contains()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimContains.ItemObject">
            <summary>Sets the shim of Contains.Item(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimContains.SubstringString">
            <summary>Sets the shim of Contains.Substring(String expected)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimContains.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCultureAttribute">
            <summary>Shim type of NUnit.Framework.CultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCultureAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCultureAttribute.#ctor(NUnit.Framework.CultureAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCultureAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCultureAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.Constructor">
            <summary>Sets the shim of CultureAttribute.CultureAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.ConstructorString">
            <summary>Sets the shim of CultureAttribute.CultureAttribute(String cultures)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCultureAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDatapointAttribute">
            <summary>Shim type of NUnit.Framework.DatapointAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointAttribute.#ctor(NUnit.Framework.DatapointAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDatapointAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDatapointAttribute.Constructor">
            <summary>Sets the shim of DatapointAttribute.DatapointAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDatapointAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDatapointsAttribute">
            <summary>Shim type of NUnit.Framework.DatapointsAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointsAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointsAttribute.#ctor(NUnit.Framework.DatapointsAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointsAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointsAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDatapointsAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDatapointsAttribute.Constructor">
            <summary>Sets the shim of DatapointsAttribute.DatapointsAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDatapointsAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDescriptionAttribute">
            <summary>Shim type of NUnit.Framework.DescriptionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDescriptionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDescriptionAttribute.#ctor(NUnit.Framework.DescriptionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDescriptionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDescriptionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDescriptionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDescriptionAttribute.ConstructorString">
            <summary>Sets the shim of DescriptionAttribute.DescriptionAttribute(String description)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDescriptionAttribute.DescriptionGet">
            <summary>Sets the shim of DescriptionAttribute.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDescriptionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDescriptionAttribute.AllInstances.DescriptionGet">
            <summary>Sets the shim of DescriptionAttribute.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute">
            <summary>Shim type of NUnit.Framework.ExpectedExceptionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.#ctor(NUnit.Framework.ExpectedExceptionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.Constructor">
            <summary>Sets the shim of ExpectedExceptionAttribute.ExpectedExceptionAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.ConstructorString">
            <summary>Sets the shim of ExpectedExceptionAttribute.ExpectedExceptionAttribute(String exceptionName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.ConstructorType">
            <summary>Sets the shim of ExpectedExceptionAttribute.ExpectedExceptionAttribute(Type exceptionType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.ExpectedExceptionGet">
            <summary>Sets the shim of ExpectedExceptionAttribute.get_ExpectedException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.ExpectedExceptionNameGet">
            <summary>Sets the shim of ExpectedExceptionAttribute.get_ExpectedExceptionName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.ExpectedExceptionNameSetString">
            <summary>Sets the shim of ExpectedExceptionAttribute.set_ExpectedExceptionName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.ExpectedExceptionSetType">
            <summary>Sets the shim of ExpectedExceptionAttribute.set_ExpectedException(Type value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.ExpectedMessageGet">
            <summary>Sets the shim of ExpectedExceptionAttribute.get_ExpectedMessage()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.ExpectedMessageSetString">
            <summary>Sets the shim of ExpectedExceptionAttribute.set_ExpectedMessage(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.HandlerGet">
            <summary>Sets the shim of ExpectedExceptionAttribute.get_Handler()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.HandlerSetString">
            <summary>Sets the shim of ExpectedExceptionAttribute.set_Handler(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.MatchTypeGet">
            <summary>Sets the shim of ExpectedExceptionAttribute.get_MatchType()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.MatchTypeSetMessageMatch">
            <summary>Sets the shim of ExpectedExceptionAttribute.set_MatchType(MessageMatch value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.UserMessageGet">
            <summary>Sets the shim of ExpectedExceptionAttribute.get_UserMessage()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.UserMessageSetString">
            <summary>Sets the shim of ExpectedExceptionAttribute.set_UserMessage(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances.ExpectedExceptionGet">
            <summary>Sets the shim of ExpectedExceptionAttribute.get_ExpectedException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances.ExpectedExceptionNameGet">
            <summary>Sets the shim of ExpectedExceptionAttribute.get_ExpectedExceptionName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances.ExpectedExceptionNameSetString">
            <summary>Sets the shim of ExpectedExceptionAttribute.set_ExpectedExceptionName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances.ExpectedExceptionSetType">
            <summary>Sets the shim of ExpectedExceptionAttribute.set_ExpectedException(Type value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances.ExpectedMessageGet">
            <summary>Sets the shim of ExpectedExceptionAttribute.get_ExpectedMessage()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances.ExpectedMessageSetString">
            <summary>Sets the shim of ExpectedExceptionAttribute.set_ExpectedMessage(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances.HandlerGet">
            <summary>Sets the shim of ExpectedExceptionAttribute.get_Handler()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances.HandlerSetString">
            <summary>Sets the shim of ExpectedExceptionAttribute.set_Handler(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances.MatchTypeGet">
            <summary>Sets the shim of ExpectedExceptionAttribute.get_MatchType()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances.MatchTypeSetMessageMatch">
            <summary>Sets the shim of ExpectedExceptionAttribute.set_MatchType(MessageMatch value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances.UserMessageGet">
            <summary>Sets the shim of ExpectedExceptionAttribute.get_UserMessage()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExpectedExceptionAttribute.AllInstances.UserMessageSetString">
            <summary>Sets the shim of ExpectedExceptionAttribute.set_UserMessage(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimExplicitAttribute">
            <summary>Shim type of NUnit.Framework.ExplicitAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExplicitAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExplicitAttribute.#ctor(NUnit.Framework.ExplicitAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExplicitAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExplicitAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExplicitAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExplicitAttribute.Constructor">
            <summary>Sets the shim of ExplicitAttribute.ExplicitAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExplicitAttribute.ConstructorString">
            <summary>Sets the shim of ExplicitAttribute.ExplicitAttribute(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExplicitAttribute.ReasonGet">
            <summary>Sets the shim of ExplicitAttribute.get_Reason()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimExplicitAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExplicitAttribute.AllInstances.ReasonGet">
            <summary>Sets the shim of ExplicitAttribute.get_Reason()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimFileAssert">
            <summary>Shim type of NUnit.Framework.FileAssert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimFileAssert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimFileAssert.#ctor(NUnit.Framework.FileAssert)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimFileAssert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimFileAssert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualFileInfoFileInfo">
            <summary>Sets the shim of FileAssert.AreEqual(FileInfo expected, FileInfo actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualFileInfoFileInfoString">
            <summary>Sets the shim of FileAssert.AreEqual(FileInfo expected, FileInfo actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualFileInfoFileInfoStringObjectArray">
            <summary>Sets the shim of FileAssert.AreEqual(FileInfo expected, FileInfo actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualStreamStream">
            <summary>Sets the shim of FileAssert.AreEqual(Stream expected, Stream actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualStreamStreamString">
            <summary>Sets the shim of FileAssert.AreEqual(Stream expected, Stream actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualStreamStreamStringObjectArray">
            <summary>Sets the shim of FileAssert.AreEqual(Stream expected, Stream actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualStringString">
            <summary>Sets the shim of FileAssert.AreEqual(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualStringStringString">
            <summary>Sets the shim of FileAssert.AreEqual(String expected, String actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualStringStringStringObjectArray">
            <summary>Sets the shim of FileAssert.AreEqual(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualFileInfoFileInfo">
            <summary>Sets the shim of FileAssert.AreNotEqual(FileInfo expected, FileInfo actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualFileInfoFileInfoString">
            <summary>Sets the shim of FileAssert.AreNotEqual(FileInfo expected, FileInfo actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualFileInfoFileInfoStringObjectArray">
            <summary>Sets the shim of FileAssert.AreNotEqual(FileInfo expected, FileInfo actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualStreamStream">
            <summary>Sets the shim of FileAssert.AreNotEqual(Stream expected, Stream actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualStreamStreamString">
            <summary>Sets the shim of FileAssert.AreNotEqual(Stream expected, Stream actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualStreamStreamStringObjectArray">
            <summary>Sets the shim of FileAssert.AreNotEqual(Stream expected, Stream actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualStringString">
            <summary>Sets the shim of FileAssert.AreNotEqual(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualStringStringString">
            <summary>Sets the shim of FileAssert.AreNotEqual(String expected, String actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualStringStringStringObjectArray">
            <summary>Sets the shim of FileAssert.AreNotEqual(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.Constructor">
            <summary>Sets the shim of FileAssert.FileAssert()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.EqualsObjectObject">
            <summary>Sets the shim of FileAssert.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.ReferenceEqualsObjectObject">
            <summary>Sets the shim of FileAssert.ReferenceEquals(Object a, Object b)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimFileAssert.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimGlobalSettings">
            <summary>Shim type of NUnit.Framework.GlobalSettings</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimGlobalSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimGlobalSettings.#ctor(NUnit.Framework.GlobalSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimGlobalSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimGlobalSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimGlobalSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimGlobalSettings.Constructor">
            <summary>Sets the shim of GlobalSettings.GlobalSettings()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimGlobalSettings.StaticConstructor">
            <summary>Sets the shim of GlobalSettings.GlobalSettings()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimGlobalSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimGuard">
            <summary>Shim type of NUnit.Framework.Guard</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimGuard.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimGuard.#ctor(NUnit.Framework.Guard)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimGuard.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimGuard.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimGuard.ArgumentNotNullObjectString">
            <summary>Sets the shim of Guard.ArgumentNotNull(Object value, String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimGuard.ArgumentNotNullOrEmptyStringString">
            <summary>Sets the shim of Guard.ArgumentNotNullOrEmpty(String value, String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimGuard.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimGuard.Constructor">
            <summary>Sets the shim of Guard.Guard()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimGuard.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimHas">
            <summary>Shim type of NUnit.Framework.Has</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimHas.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimHas.#ctor(NUnit.Framework.Has)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimHas.AttributeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ResolvableConstraintExpression})">
            <summary>Sets the shim of Has.Attribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimHas.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimHas.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.AllGet">
            <summary>Sets the shim of Has.get_All()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.AttributeType">
            <summary>Sets the shim of Has.Attribute(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.Constructor">
            <summary>Sets the shim of Has.Has()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.CountGet">
            <summary>Sets the shim of Has.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.ExactlyInt32">
            <summary>Sets the shim of Has.Exactly(Int32 expectedCount)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.InnerExceptionGet">
            <summary>Sets the shim of Has.get_InnerException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.LengthGet">
            <summary>Sets the shim of Has.get_Length()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.MemberObject">
            <summary>Sets the shim of Has.Member(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.MessageGet">
            <summary>Sets the shim of Has.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.NoGet">
            <summary>Sets the shim of Has.get_No()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.NoneGet">
            <summary>Sets the shim of Has.get_None()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.PropertyString">
            <summary>Sets the shim of Has.Property(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.SomeGet">
            <summary>Sets the shim of Has.get_Some()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimHas.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIgnoreAttribute">
            <summary>Shim type of NUnit.Framework.IgnoreAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreAttribute.#ctor(NUnit.Framework.IgnoreAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.Constructor">
            <summary>Sets the shim of IgnoreAttribute.IgnoreAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.ConstructorString">
            <summary>Sets the shim of IgnoreAttribute.IgnoreAttribute(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.ReasonGet">
            <summary>Sets the shim of IgnoreAttribute.get_Reason()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIgnoreAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.AllInstances.ReasonGet">
            <summary>Sets the shim of IgnoreAttribute.get_Reason()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIgnoreException">
            <summary>Shim type of NUnit.Framework.IgnoreException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreException.#ctor(NUnit.Framework.IgnoreException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of IgnoreException.IgnoreException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreException.ConstructorString">
            <summary>Sets the shim of IgnoreException.IgnoreException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreException.ConstructorStringException">
            <summary>Sets the shim of IgnoreException.IgnoreException(String message, Exception inner)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIgnoreException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute">
            <summary>Shim type of NUnit.Framework.IncludeExcludeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.#ctor(NUnit.Framework.IncludeExcludeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.Constructor">
            <summary>Sets the shim of IncludeExcludeAttribute.IncludeExcludeAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.ConstructorString">
            <summary>Sets the shim of IncludeExcludeAttribute.IncludeExcludeAttribute(String include)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.ExcludeGet">
            <summary>Sets the shim of IncludeExcludeAttribute.get_Exclude()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.ExcludeSetString">
            <summary>Sets the shim of IncludeExcludeAttribute.set_Exclude(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.IncludeGet">
            <summary>Sets the shim of IncludeExcludeAttribute.get_Include()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.IncludeSetString">
            <summary>Sets the shim of IncludeExcludeAttribute.set_Include(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.ReasonGet">
            <summary>Sets the shim of IncludeExcludeAttribute.get_Reason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.ReasonSetString">
            <summary>Sets the shim of IncludeExcludeAttribute.set_Reason(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances.ExcludeGet">
            <summary>Sets the shim of IncludeExcludeAttribute.get_Exclude()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances.ExcludeSetString">
            <summary>Sets the shim of IncludeExcludeAttribute.set_Exclude(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances.IncludeGet">
            <summary>Sets the shim of IncludeExcludeAttribute.get_Include()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances.IncludeSetString">
            <summary>Sets the shim of IncludeExcludeAttribute.set_Include(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances.ReasonGet">
            <summary>Sets the shim of IncludeExcludeAttribute.get_Reason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances.ReasonSetString">
            <summary>Sets the shim of IncludeExcludeAttribute.set_Reason(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimInconclusiveException">
            <summary>Shim type of NUnit.Framework.InconclusiveException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimInconclusiveException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimInconclusiveException.#ctor(NUnit.Framework.InconclusiveException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimInconclusiveException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimInconclusiveException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimInconclusiveException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimInconclusiveException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimInconclusiveException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of InconclusiveException.InconclusiveException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimInconclusiveException.ConstructorString">
            <summary>Sets the shim of InconclusiveException.InconclusiveException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimInconclusiveException.ConstructorStringException">
            <summary>Sets the shim of InconclusiveException.InconclusiveException(String message, Exception inner)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimInconclusiveException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIs">
            <summary>Shim type of NUnit.Framework.Is</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.#ctor(NUnit.Framework.Is)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.AssignableFromOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AssignableFromConstraint})">
            <summary>Sets the shim of Is.AssignableFrom()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.AssignableToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AssignableToConstraint})">
            <summary>Sets the shim of Is.AssignableTo()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.InRangeOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0,NUnit.Framework.Constraints.RangeConstraint{``0}})">
            <summary>Sets the shim of Is.InRange(!!0 from, !!0 to)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.InstanceOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of Is.InstanceOf()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.InstanceOfTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of Is.InstanceOfType()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.TypeOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ExactTypeConstraint})">
            <summary>Sets the shim of Is.TypeOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.AllGet">
            <summary>Sets the shim of Is.get_All()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.AssignableFromType">
            <summary>Sets the shim of Is.AssignableFrom(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.AssignableToType">
            <summary>Sets the shim of Is.AssignableTo(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.AtLeastObject">
            <summary>Sets the shim of Is.AtLeast(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.AtMostObject">
            <summary>Sets the shim of Is.AtMost(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.BinarySerializableGet">
            <summary>Sets the shim of Is.get_BinarySerializable()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.Constructor">
            <summary>Sets the shim of Is.Is()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.EmptyGet">
            <summary>Sets the shim of Is.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.EqualToObject">
            <summary>Sets the shim of Is.EqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.EquivalentToIEnumerable">
            <summary>Sets the shim of Is.EquivalentTo(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.FalseGet">
            <summary>Sets the shim of Is.get_False()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.GreaterThanObject">
            <summary>Sets the shim of Is.GreaterThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.GreaterThanOrEqualToObject">
            <summary>Sets the shim of Is.GreaterThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.InstanceOfType">
            <summary>Sets the shim of Is.InstanceOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.InstanceOfTypeType">
            <summary>Sets the shim of Is.InstanceOfType(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.LessThanObject">
            <summary>Sets the shim of Is.LessThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.LessThanOrEqualToObject">
            <summary>Sets the shim of Is.LessThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.NaNGet">
            <summary>Sets the shim of Is.get_NaN()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.NegativeGet">
            <summary>Sets the shim of Is.get_Negative()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.NotGet">
            <summary>Sets the shim of Is.get_Not()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.NullGet">
            <summary>Sets the shim of Is.get_Null()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.OrderedGet">
            <summary>Sets the shim of Is.get_Ordered()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.PositiveGet">
            <summary>Sets the shim of Is.get_Positive()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.SameAsObject">
            <summary>Sets the shim of Is.SameAs(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.SamePathOrUnderString">
            <summary>Sets the shim of Is.SamePathOrUnder(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.SamePathString">
            <summary>Sets the shim of Is.SamePath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.StringContainingString">
            <summary>Sets the shim of Is.StringContaining(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.StringEndingString">
            <summary>Sets the shim of Is.StringEnding(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.StringMatchingString">
            <summary>Sets the shim of Is.StringMatching(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.StringStartingString">
            <summary>Sets the shim of Is.StringStarting(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.SubPathString">
            <summary>Sets the shim of Is.SubPath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.SubsetOfIEnumerable">
            <summary>Sets the shim of Is.SubsetOf(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.TrueGet">
            <summary>Sets the shim of Is.get_True()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.TypeOfType">
            <summary>Sets the shim of Is.TypeOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.UniqueGet">
            <summary>Sets the shim of Is.get_Unique()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.XmlSerializableGet">
            <summary>Sets the shim of Is.get_XmlSerializable()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIz">
            <summary>Shim type of NUnit.Framework.Iz</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIz.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIz.#ctor(NUnit.Framework.Iz)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIz.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIz.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIz.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIz.Constructor">
            <summary>Sets the shim of Iz.Iz()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIz.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimList">
            <summary>Shim type of NUnit.Framework.List</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimList.#ctor(NUnit.Framework.List)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimList.Constructor">
            <summary>Sets the shim of List.List()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimList.MapICollection">
            <summary>Sets the shim of List.Map(ICollection actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimListMapper">
            <summary>Shim type of NUnit.Framework.ListMapper</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimListMapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimListMapper.#ctor(NUnit.Framework.ListMapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimListMapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimListMapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimListMapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimListMapper.ConstructorICollection">
            <summary>Sets the shim of ListMapper.ListMapper(ICollection original)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimListMapper.PropertyString">
            <summary>Sets the shim of ListMapper.Property(String name)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimListMapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimListMapper.AllInstances.PropertyString">
            <summary>Sets the shim of ListMapper.Property(String name)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimMaxTimeAttribute">
            <summary>Shim type of NUnit.Framework.MaxTimeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMaxTimeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMaxTimeAttribute.#ctor(NUnit.Framework.MaxTimeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMaxTimeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMaxTimeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimMaxTimeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimMaxTimeAttribute.ConstructorInt32">
            <summary>Sets the shim of MaxTimeAttribute.MaxTimeAttribute(Int32 milliseconds)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimMaxTimeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimPairwiseAttribute">
            <summary>Shim type of NUnit.Framework.PairwiseAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPairwiseAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPairwiseAttribute.#ctor(NUnit.Framework.PairwiseAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPairwiseAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPairwiseAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPairwiseAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPairwiseAttribute.Constructor">
            <summary>Sets the shim of PairwiseAttribute.PairwiseAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimPairwiseAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimParameterDataAttribute">
            <summary>Shim type of NUnit.Framework.ParameterDataAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimParameterDataAttribute.#ctor(NUnit.Framework.ParameterDataAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimParameterDataAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimParameterDataAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimParameterDataAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimParameterDataAttribute.Constructor">
            <summary>Sets the shim of ParameterDataAttribute.ParameterDataAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimParameterDataAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimPlatformAttribute">
            <summary>Shim type of NUnit.Framework.PlatformAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPlatformAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPlatformAttribute.#ctor(NUnit.Framework.PlatformAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPlatformAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPlatformAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPlatformAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPlatformAttribute.Constructor">
            <summary>Sets the shim of PlatformAttribute.PlatformAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPlatformAttribute.ConstructorString">
            <summary>Sets the shim of PlatformAttribute.PlatformAttribute(String platforms)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimPlatformAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimPropertyAttribute">
            <summary>Shim type of NUnit.Framework.PropertyAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPropertyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPropertyAttribute.#ctor(NUnit.Framework.PropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.Constructor">
            <summary>Sets the shim of PropertyAttribute.PropertyAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.ConstructorObject">
            <summary>Sets the shim of PropertyAttribute.PropertyAttribute(Object propertyValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.ConstructorStringDouble">
            <summary>Sets the shim of PropertyAttribute.PropertyAttribute(String propertyName, Double propertyValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.ConstructorStringInt32">
            <summary>Sets the shim of PropertyAttribute.PropertyAttribute(String propertyName, Int32 propertyValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.ConstructorStringString">
            <summary>Sets the shim of PropertyAttribute.PropertyAttribute(String propertyName, String propertyValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.PropertiesGet">
            <summary>Sets the shim of PropertyAttribute.get_Properties()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.AllInstances.PropertiesGet">
            <summary>Sets the shim of PropertyAttribute.get_Properties()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRandomAttribute">
            <summary>Shim type of NUnit.Framework.RandomAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomAttribute.#ctor(NUnit.Framework.RandomAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorDoubleDoubleInt32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(Double min, Double max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorInt32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorInt32Int32Int32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(Int32 min, Int32 max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.GetDataParameterInfo">
            <summary>Sets the shim of RandomAttribute.GetData(ParameterInfo parameter)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRandomAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.AllInstances.GetDataParameterInfo">
            <summary>Sets the shim of RandomAttribute.GetData(ParameterInfo parameter)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRandomizer">
            <summary>Shim type of NUnit.Framework.Randomizer</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomizer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomizer.#ctor(NUnit.Framework.Randomizer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomizer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomizer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.Constructor">
            <summary>Sets the shim of Randomizer.Randomizer()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.ConstructorInt32">
            <summary>Sets the shim of Randomizer.Randomizer(Int32 seed)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.GetDoublesDoubleDoubleInt32">
            <summary>Sets the shim of Randomizer.GetDoubles(Double min, Double max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.GetDoublesInt32">
            <summary>Sets the shim of Randomizer.GetDoubles(Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.GetIntsInt32Int32Int32">
            <summary>Sets the shim of Randomizer.GetInts(Int32 min, Int32 max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.GetRandomizerMemberInfo">
            <summary>Sets the shim of Randomizer.GetRandomizer(MemberInfo member)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.GetRandomizerParameterInfo">
            <summary>Sets the shim of Randomizer.GetRandomizer(ParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.RandomSeedGet">
            <summary>Sets the shim of Randomizer.get_RandomSeed()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.StaticConstructor">
            <summary>Sets the shim of Randomizer.Randomizer()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRandomizer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.AllInstances.GetDoublesDoubleDoubleInt32">
            <summary>Sets the shim of Randomizer.GetDoubles(Double min, Double max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.AllInstances.GetDoublesInt32">
            <summary>Sets the shim of Randomizer.GetDoubles(Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomizer.AllInstances.GetIntsInt32Int32Int32">
            <summary>Sets the shim of Randomizer.GetInts(Int32 min, Int32 max, Int32 count)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRangeAttribute">
            <summary>Shim type of NUnit.Framework.RangeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRangeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRangeAttribute.#ctor(NUnit.Framework.RangeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRangeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRangeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorDoubleDoubleDouble">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(Double from, Double to, Double step)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorInt32Int32">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(Int32 from, Int32 to)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorInt32Int32Int32">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(Int32 from, Int32 to, Int32 step)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorInt64Int64Int64">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(Int64 from, Int64 to, Int64 step)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorSingleSingleSingle">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(Single from, Single to, Single step)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRangeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRepeatAttribute">
            <summary>Shim type of NUnit.Framework.RepeatAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.#ctor(NUnit.Framework.RepeatAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRepeatAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRepeatAttribute.ConstructorInt32">
            <summary>Sets the shim of RepeatAttribute.RepeatAttribute(Int32 count)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRepeatAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRequiredAddinAttribute">
            <summary>Shim type of NUnit.Framework.RequiredAddinAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiredAddinAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiredAddinAttribute.#ctor(NUnit.Framework.RequiredAddinAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiredAddinAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiredAddinAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiredAddinAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiredAddinAttribute.ConstructorString">
            <summary>Sets the shim of RequiredAddinAttribute.RequiredAddinAttribute(String requiredAddin)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiredAddinAttribute.RequiredAddinGet">
            <summary>Sets the shim of RequiredAddinAttribute.get_RequiredAddin()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRequiredAddinAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiredAddinAttribute.AllInstances.RequiredAddinGet">
            <summary>Sets the shim of RequiredAddinAttribute.get_RequiredAddin()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRequiresMTAAttribute">
            <summary>Shim type of NUnit.Framework.RequiresMTAAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresMTAAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresMTAAttribute.#ctor(NUnit.Framework.RequiresMTAAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresMTAAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresMTAAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiresMTAAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiresMTAAttribute.Constructor">
            <summary>Sets the shim of RequiresMTAAttribute.RequiresMTAAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRequiresMTAAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRequiresSTAAttribute">
            <summary>Shim type of NUnit.Framework.RequiresSTAAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresSTAAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresSTAAttribute.#ctor(NUnit.Framework.RequiresSTAAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresSTAAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresSTAAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiresSTAAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiresSTAAttribute.Constructor">
            <summary>Sets the shim of RequiresSTAAttribute.RequiresSTAAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRequiresSTAAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRequiresThreadAttribute">
            <summary>Shim type of NUnit.Framework.RequiresThreadAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.#ctor(NUnit.Framework.RequiresThreadAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.Constructor">
            <summary>Sets the shim of RequiresThreadAttribute.RequiresThreadAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.ConstructorApartmentState">
            <summary>Sets the shim of RequiresThreadAttribute.RequiresThreadAttribute(ApartmentState apartment)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSequentialAttribute">
            <summary>Shim type of NUnit.Framework.SequentialAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSequentialAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSequentialAttribute.#ctor(NUnit.Framework.SequentialAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSequentialAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSequentialAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSequentialAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSequentialAttribute.Constructor">
            <summary>Sets the shim of SequentialAttribute.SequentialAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSequentialAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetCultureAttribute">
            <summary>Shim type of NUnit.Framework.SetCultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetCultureAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetCultureAttribute.#ctor(NUnit.Framework.SetCultureAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetCultureAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetCultureAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetCultureAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetCultureAttribute.ConstructorString">
            <summary>Sets the shim of SetCultureAttribute.SetCultureAttribute(String culture)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetCultureAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetUICultureAttribute">
            <summary>Shim type of NUnit.Framework.SetUICultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUICultureAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUICultureAttribute.#ctor(NUnit.Framework.SetUICultureAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUICultureAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUICultureAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUICultureAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUICultureAttribute.ConstructorString">
            <summary>Sets the shim of SetUICultureAttribute.SetUICultureAttribute(String culture)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetUICultureAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetUpAttribute">
            <summary>Shim type of NUnit.Framework.SetUpAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpAttribute.#ctor(NUnit.Framework.SetUpAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUpAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUpAttribute.Constructor">
            <summary>Sets the shim of SetUpAttribute.SetUpAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetUpAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute">
            <summary>Shim type of NUnit.Framework.SetUpFixtureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.#ctor(NUnit.Framework.SetUpFixtureAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.Constructor">
            <summary>Sets the shim of SetUpFixtureAttribute.SetUpFixtureAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimStringAssert">
            <summary>Shim type of NUnit.Framework.StringAssert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimStringAssert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimStringAssert.#ctor(NUnit.Framework.StringAssert)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimStringAssert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimStringAssert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.AreEqualIgnoringCaseStringString">
            <summary>Sets the shim of StringAssert.AreEqualIgnoringCase(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.AreEqualIgnoringCaseStringStringString">
            <summary>Sets the shim of StringAssert.AreEqualIgnoringCase(String expected, String actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.AreEqualIgnoringCaseStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.AreEqualIgnoringCase(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.AreNotEqualIgnoringCaseStringString">
            <summary>Sets the shim of StringAssert.AreNotEqualIgnoringCase(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.AreNotEqualIgnoringCaseStringStringString">
            <summary>Sets the shim of StringAssert.AreNotEqualIgnoringCase(String expected, String actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.AreNotEqualIgnoringCaseStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.AreNotEqualIgnoringCase(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.Constructor">
            <summary>Sets the shim of StringAssert.StringAssert()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.ContainsStringString">
            <summary>Sets the shim of StringAssert.Contains(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.ContainsStringStringString">
            <summary>Sets the shim of StringAssert.Contains(String expected, String actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.ContainsStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.Contains(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotContainStringString">
            <summary>Sets the shim of StringAssert.DoesNotContain(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotContainStringStringString">
            <summary>Sets the shim of StringAssert.DoesNotContain(String expected, String actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotContainStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.DoesNotContain(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotEndWithStringString">
            <summary>Sets the shim of StringAssert.DoesNotEndWith(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotEndWithStringStringString">
            <summary>Sets the shim of StringAssert.DoesNotEndWith(String expected, String actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotEndWithStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.DoesNotEndWith(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotMatchStringString">
            <summary>Sets the shim of StringAssert.DoesNotMatch(String pattern, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotMatchStringStringString">
            <summary>Sets the shim of StringAssert.DoesNotMatch(String pattern, String actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotMatchStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.DoesNotMatch(String pattern, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotStartWithStringString">
            <summary>Sets the shim of StringAssert.DoesNotStartWith(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotStartWithStringStringString">
            <summary>Sets the shim of StringAssert.DoesNotStartWith(String expected, String actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotStartWithStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.DoesNotStartWith(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.EndsWithStringString">
            <summary>Sets the shim of StringAssert.EndsWith(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.EndsWithStringStringString">
            <summary>Sets the shim of StringAssert.EndsWith(String expected, String actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.EndsWithStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.EndsWith(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.EqualsObjectObject">
            <summary>Sets the shim of StringAssert.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.IsMatchStringString">
            <summary>Sets the shim of StringAssert.IsMatch(String pattern, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.IsMatchStringStringString">
            <summary>Sets the shim of StringAssert.IsMatch(String pattern, String actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.IsMatchStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.IsMatch(String pattern, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.ReferenceEqualsObjectObject">
            <summary>Sets the shim of StringAssert.ReferenceEquals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.StartsWithStringString">
            <summary>Sets the shim of StringAssert.StartsWith(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.StartsWithStringStringString">
            <summary>Sets the shim of StringAssert.StartsWith(String expected, String actual, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.StartsWithStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.StartsWith(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimStringAssert.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSuccessException">
            <summary>Shim type of NUnit.Framework.SuccessException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuccessException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuccessException.#ctor(NUnit.Framework.SuccessException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuccessException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuccessException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuccessException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSuccessException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSuccessException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SuccessException.SuccessException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSuccessException.ConstructorString">
            <summary>Sets the shim of SuccessException.SuccessException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSuccessException.ConstructorStringException">
            <summary>Sets the shim of SuccessException.SuccessException(String message, Exception inner)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSuccessException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSuiteAttribute">
            <summary>Shim type of NUnit.Framework.SuiteAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuiteAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuiteAttribute.#ctor(NUnit.Framework.SuiteAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuiteAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuiteAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSuiteAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSuiteAttribute.Constructor">
            <summary>Sets the shim of SuiteAttribute.SuiteAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSuiteAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTearDownAttribute">
            <summary>Shim type of NUnit.Framework.TearDownAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTearDownAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTearDownAttribute.#ctor(NUnit.Framework.TearDownAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTearDownAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTearDownAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTearDownAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTearDownAttribute.Constructor">
            <summary>Sets the shim of TearDownAttribute.TearDownAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTearDownAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestActionAttribute">
            <summary>Shim type of NUnit.Framework.TestActionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestActionAttribute.#ctor(NUnit.Framework.TestActionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestActionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestActionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestActionAttribute.Bind(NUnit.Framework.ITestAction)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.AfterTestTestDetails">
            <summary>Sets the shim of TestActionAttribute.AfterTest(TestDetails testDetails)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.BeforeTestTestDetails">
            <summary>Sets the shim of TestActionAttribute.BeforeTest(TestDetails testDetails)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.Constructor">
            <summary>Sets the shim of TestActionAttribute.TestActionAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.TargetsGet">
            <summary>Sets the shim of TestActionAttribute.get_Targets()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestActionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.AllInstances.AfterTestTestDetails">
            <summary>Sets the shim of TestActionAttribute.AfterTest(TestDetails testDetails)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.AllInstances.BeforeTestTestDetails">
            <summary>Sets the shim of TestActionAttribute.BeforeTest(TestDetails testDetails)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.AllInstances.TargetsGet">
            <summary>Sets the shim of TestActionAttribute.get_Targets()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestAttribute">
            <summary>Shim type of NUnit.Framework.TestAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAttribute.#ctor(NUnit.Framework.TestAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.Constructor">
            <summary>Sets the shim of TestAttribute.TestAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.DescriptionGet">
            <summary>Sets the shim of TestAttribute.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.DescriptionSetString">
            <summary>Sets the shim of TestAttribute.set_Description(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.DescriptionGet">
            <summary>Sets the shim of TestAttribute.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.DescriptionSetString">
            <summary>Sets the shim of TestAttribute.set_Description(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestCaseAttribute">
            <summary>Shim type of NUnit.Framework.TestCaseAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.#ctor(NUnit.Framework.TestCaseAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.Bind(NUnit.Framework.ITestCaseData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ArgumentsGet">
            <summary>Sets the shim of TestCaseAttribute.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.CategoriesGet">
            <summary>Sets the shim of TestCaseAttribute.get_Categories()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.CategoryGet">
            <summary>Sets the shim of TestCaseAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.CategorySetString">
            <summary>Sets the shim of TestCaseAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ConstructorObject">
            <summary>Sets the shim of TestCaseAttribute.TestCaseAttribute(Object arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ConstructorObjectArray">
            <summary>Sets the shim of TestCaseAttribute.TestCaseAttribute(Object[] arguments)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ConstructorObjectObject">
            <summary>Sets the shim of TestCaseAttribute.TestCaseAttribute(Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ConstructorObjectObjectObject">
            <summary>Sets the shim of TestCaseAttribute.TestCaseAttribute(Object arg1, Object arg2, Object arg3)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.DescriptionGet">
            <summary>Sets the shim of TestCaseAttribute.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.DescriptionSetString">
            <summary>Sets the shim of TestCaseAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExpectedExceptionGet">
            <summary>Sets the shim of TestCaseAttribute.get_ExpectedException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExpectedExceptionNameGet">
            <summary>Sets the shim of TestCaseAttribute.get_ExpectedExceptionName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExpectedExceptionNameSetString">
            <summary>Sets the shim of TestCaseAttribute.set_ExpectedExceptionName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExpectedExceptionSetType">
            <summary>Sets the shim of TestCaseAttribute.set_ExpectedException(Type value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExpectedMessageGet">
            <summary>Sets the shim of TestCaseAttribute.get_ExpectedMessage()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExpectedMessageSetString">
            <summary>Sets the shim of TestCaseAttribute.set_ExpectedMessage(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExpectedResultGet">
            <summary>Sets the shim of TestCaseAttribute.get_ExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExpectedResultSetObject">
            <summary>Sets the shim of TestCaseAttribute.set_ExpectedResult(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExplicitGet">
            <summary>Sets the shim of TestCaseAttribute.get_Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExplicitSetBoolean">
            <summary>Sets the shim of TestCaseAttribute.set_Explicit(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.HasExpectedResultGet">
            <summary>Sets the shim of TestCaseAttribute.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.IgnoreGet">
            <summary>Sets the shim of TestCaseAttribute.get_Ignore()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.IgnoreReasonGet">
            <summary>Sets the shim of TestCaseAttribute.get_IgnoreReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.IgnoreReasonSetString">
            <summary>Sets the shim of TestCaseAttribute.set_IgnoreReason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.IgnoreSetBoolean">
            <summary>Sets the shim of TestCaseAttribute.set_Ignore(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.IgnoredGet">
            <summary>Sets the shim of TestCaseAttribute.get_Ignored()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.IgnoredSetBoolean">
            <summary>Sets the shim of TestCaseAttribute.set_Ignored(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.MatchTypeGet">
            <summary>Sets the shim of TestCaseAttribute.get_MatchType()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.MatchTypeSetMessageMatch">
            <summary>Sets the shim of TestCaseAttribute.set_MatchType(MessageMatch value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ReasonGet">
            <summary>Sets the shim of TestCaseAttribute.get_Reason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ReasonSetString">
            <summary>Sets the shim of TestCaseAttribute.set_Reason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ResultGet">
            <summary>Sets the shim of TestCaseAttribute.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ResultSetObject">
            <summary>Sets the shim of TestCaseAttribute.set_Result(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.TestNameGet">
            <summary>Sets the shim of TestCaseAttribute.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.TestNameSetString">
            <summary>Sets the shim of TestCaseAttribute.set_TestName(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ArgumentsGet">
            <summary>Sets the shim of TestCaseAttribute.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.CategoriesGet">
            <summary>Sets the shim of TestCaseAttribute.get_Categories()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.CategoryGet">
            <summary>Sets the shim of TestCaseAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.CategorySetString">
            <summary>Sets the shim of TestCaseAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.DescriptionGet">
            <summary>Sets the shim of TestCaseAttribute.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.DescriptionSetString">
            <summary>Sets the shim of TestCaseAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExpectedExceptionGet">
            <summary>Sets the shim of TestCaseAttribute.get_ExpectedException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExpectedExceptionNameGet">
            <summary>Sets the shim of TestCaseAttribute.get_ExpectedExceptionName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExpectedExceptionNameSetString">
            <summary>Sets the shim of TestCaseAttribute.set_ExpectedExceptionName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExpectedExceptionSetType">
            <summary>Sets the shim of TestCaseAttribute.set_ExpectedException(Type value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExpectedMessageGet">
            <summary>Sets the shim of TestCaseAttribute.get_ExpectedMessage()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExpectedMessageSetString">
            <summary>Sets the shim of TestCaseAttribute.set_ExpectedMessage(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExpectedResultGet">
            <summary>Sets the shim of TestCaseAttribute.get_ExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExpectedResultSetObject">
            <summary>Sets the shim of TestCaseAttribute.set_ExpectedResult(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExplicitGet">
            <summary>Sets the shim of TestCaseAttribute.get_Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExplicitSetBoolean">
            <summary>Sets the shim of TestCaseAttribute.set_Explicit(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.HasExpectedResultGet">
            <summary>Sets the shim of TestCaseAttribute.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.IgnoreGet">
            <summary>Sets the shim of TestCaseAttribute.get_Ignore()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.IgnoreReasonGet">
            <summary>Sets the shim of TestCaseAttribute.get_IgnoreReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.IgnoreReasonSetString">
            <summary>Sets the shim of TestCaseAttribute.set_IgnoreReason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.IgnoreSetBoolean">
            <summary>Sets the shim of TestCaseAttribute.set_Ignore(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.IgnoredGet">
            <summary>Sets the shim of TestCaseAttribute.get_Ignored()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.IgnoredSetBoolean">
            <summary>Sets the shim of TestCaseAttribute.set_Ignored(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.MatchTypeGet">
            <summary>Sets the shim of TestCaseAttribute.get_MatchType()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.MatchTypeSetMessageMatch">
            <summary>Sets the shim of TestCaseAttribute.set_MatchType(MessageMatch value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ReasonGet">
            <summary>Sets the shim of TestCaseAttribute.get_Reason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ReasonSetString">
            <summary>Sets the shim of TestCaseAttribute.set_Reason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ResultGet">
            <summary>Sets the shim of TestCaseAttribute.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ResultSetObject">
            <summary>Sets the shim of TestCaseAttribute.set_Result(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.TestNameGet">
            <summary>Sets the shim of TestCaseAttribute.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.TestNameSetString">
            <summary>Sets the shim of TestCaseAttribute.set_TestName(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestCaseData">
            <summary>Shim type of NUnit.Framework.TestCaseData</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseData.#ctor(NUnit.Framework.TestCaseData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseData.Bind(NUnit.Framework.ITestCaseData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ArgumentsGet">
            <summary>Sets the shim of TestCaseData.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.CategoriesGet">
            <summary>Sets the shim of TestCaseData.get_Categories()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ConstructorObject">
            <summary>Sets the shim of TestCaseData.TestCaseData(Object arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ConstructorObjectArray">
            <summary>Sets the shim of TestCaseData.TestCaseData(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ConstructorObjectObject">
            <summary>Sets the shim of TestCaseData.TestCaseData(Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ConstructorObjectObjectObject">
            <summary>Sets the shim of TestCaseData.TestCaseData(Object arg1, Object arg2, Object arg3)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.DescriptionGet">
            <summary>Sets the shim of TestCaseData.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ExpectedExceptionGet">
            <summary>Sets the shim of TestCaseData.get_ExpectedException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ExpectedExceptionNameGet">
            <summary>Sets the shim of TestCaseData.get_ExpectedExceptionName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ExplicitGet">
            <summary>Sets the shim of TestCaseData.get_Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.HasExpectedResultGet">
            <summary>Sets the shim of TestCaseData.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.Ignore">
            <summary>Sets the shim of TestCaseData.Ignore()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.IgnoreReasonGet">
            <summary>Sets the shim of TestCaseData.get_IgnoreReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.IgnoreString">
            <summary>Sets the shim of TestCaseData.Ignore(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.IgnoredGet">
            <summary>Sets the shim of TestCaseData.get_Ignored()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.MakeExplicit">
            <summary>Sets the shim of TestCaseData.MakeExplicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.MakeExplicitString">
            <summary>Sets the shim of TestCaseData.MakeExplicit(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.PropertiesGet">
            <summary>Sets the shim of TestCaseData.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ResultGet">
            <summary>Sets the shim of TestCaseData.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ReturnsObject">
            <summary>Sets the shim of TestCaseData.Returns(Object result)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.SetCategoryString">
            <summary>Sets the shim of TestCaseData.SetCategory(String category)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.SetDescriptionString">
            <summary>Sets the shim of TestCaseData.SetDescription(String description)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.SetNameString">
            <summary>Sets the shim of TestCaseData.SetName(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.SetPropertyStringDouble">
            <summary>Sets the shim of TestCaseData.SetProperty(String propName, Double propValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.SetPropertyStringInt32">
            <summary>Sets the shim of TestCaseData.SetProperty(String propName, Int32 propValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.SetPropertyStringString">
            <summary>Sets the shim of TestCaseData.SetProperty(String propName, String propValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.StaticConstructor">
            <summary>Sets the shim of TestCaseData.TestCaseData()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.TestNameGet">
            <summary>Sets the shim of TestCaseData.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ThrowsString">
            <summary>Sets the shim of TestCaseData.Throws(String exceptionName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ThrowsType">
            <summary>Sets the shim of TestCaseData.Throws(Type exceptionType)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.ArgumentsGet">
            <summary>Sets the shim of TestCaseData.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.CategoriesGet">
            <summary>Sets the shim of TestCaseData.get_Categories()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.DescriptionGet">
            <summary>Sets the shim of TestCaseData.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.ExpectedExceptionGet">
            <summary>Sets the shim of TestCaseData.get_ExpectedException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.ExpectedExceptionNameGet">
            <summary>Sets the shim of TestCaseData.get_ExpectedExceptionName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.ExplicitGet">
            <summary>Sets the shim of TestCaseData.get_Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.HasExpectedResultGet">
            <summary>Sets the shim of TestCaseData.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.Ignore">
            <summary>Sets the shim of TestCaseData.Ignore()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.IgnoreReasonGet">
            <summary>Sets the shim of TestCaseData.get_IgnoreReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.IgnoreString">
            <summary>Sets the shim of TestCaseData.Ignore(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.IgnoredGet">
            <summary>Sets the shim of TestCaseData.get_Ignored()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.MakeExplicit">
            <summary>Sets the shim of TestCaseData.MakeExplicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.MakeExplicitString">
            <summary>Sets the shim of TestCaseData.MakeExplicit(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.PropertiesGet">
            <summary>Sets the shim of TestCaseData.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.ResultGet">
            <summary>Sets the shim of TestCaseData.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.ReturnsObject">
            <summary>Sets the shim of TestCaseData.Returns(Object result)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.SetCategoryString">
            <summary>Sets the shim of TestCaseData.SetCategory(String category)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.SetDescriptionString">
            <summary>Sets the shim of TestCaseData.SetDescription(String description)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.SetNameString">
            <summary>Sets the shim of TestCaseData.SetName(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.SetPropertyStringDouble">
            <summary>Sets the shim of TestCaseData.SetProperty(String propName, Double propValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.SetPropertyStringInt32">
            <summary>Sets the shim of TestCaseData.SetProperty(String propName, Int32 propValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.SetPropertyStringString">
            <summary>Sets the shim of TestCaseData.SetProperty(String propName, String propValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.TestNameGet">
            <summary>Sets the shim of TestCaseData.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.ThrowsString">
            <summary>Sets the shim of TestCaseData.Throws(String exceptionName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.ThrowsType">
            <summary>Sets the shim of TestCaseData.Throws(Type exceptionType)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute">
            <summary>Shim type of NUnit.Framework.TestCaseSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.#ctor(NUnit.Framework.TestCaseSourceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.CategoryGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.CategorySetString">
            <summary>Sets the shim of TestCaseSourceAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.ConstructorString">
            <summary>Sets the shim of TestCaseSourceAttribute.TestCaseSourceAttribute(String sourceName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.ConstructorType">
            <summary>Sets the shim of TestCaseSourceAttribute.TestCaseSourceAttribute(Type sourceType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.ConstructorTypeString">
            <summary>Sets the shim of TestCaseSourceAttribute.TestCaseSourceAttribute(Type sourceType, String sourceName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.SourceNameGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_SourceName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.SourceTypeGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_SourceType()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.CategoryGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.CategorySetString">
            <summary>Sets the shim of TestCaseSourceAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.SourceNameGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_SourceName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.SourceTypeGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_SourceType()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestContext">
            <summary>Shim type of NUnit.Framework.TestContext</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.#ctor(NUnit.Framework.TestContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ConstructorIDictionary">
            <summary>Sets the shim of TestContext.TestContext(IDictionary context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.CurrentContextGet">
            <summary>Sets the shim of TestContext.get_CurrentContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ResultGet">
            <summary>Sets the shim of TestContext.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.TestDirectoryGet">
            <summary>Sets the shim of TestContext.get_TestDirectory()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.TestGet">
            <summary>Sets the shim of TestContext.get_Test()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WorkDirectoryGet">
            <summary>Sets the shim of TestContext.get_WorkDirectory()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.AllInstances.ResultGet">
            <summary>Sets the shim of TestContext.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.AllInstances.TestDirectoryGet">
            <summary>Sets the shim of TestContext.get_TestDirectory()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.AllInstances.TestGet">
            <summary>Sets the shim of TestContext.get_Test()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.AllInstances.WorkDirectoryGet">
            <summary>Sets the shim of TestContext.get_WorkDirectory()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter">
            <summary>Shim type of NUnit.Framework.TestContext+ResultAdapter</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.#ctor(NUnit.Framework.TestContext.ResultAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.ConstructorIDictionary">
            <summary>Sets the shim of ResultAdapter.ResultAdapter(IDictionary context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.StateGet">
            <summary>Sets the shim of ResultAdapter.get_State()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.StatusGet">
            <summary>Sets the shim of ResultAdapter.get_Status()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.AllInstances.StateGet">
            <summary>Sets the shim of ResultAdapter.get_State()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.AllInstances.StatusGet">
            <summary>Sets the shim of ResultAdapter.get_Status()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter">
            <summary>Shim type of NUnit.Framework.TestContext+TestAdapter</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.#ctor(NUnit.Framework.TestContext.TestAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.ConstructorIDictionary">
            <summary>Sets the shim of TestAdapter.TestAdapter(IDictionary context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.FullNameGet">
            <summary>Sets the shim of TestAdapter.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.NameGet">
            <summary>Sets the shim of TestAdapter.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.PropertiesGet">
            <summary>Sets the shim of TestAdapter.get_Properties()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.AllInstances.FullNameGet">
            <summary>Sets the shim of TestAdapter.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.AllInstances.NameGet">
            <summary>Sets the shim of TestAdapter.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.AllInstances.PropertiesGet">
            <summary>Sets the shim of TestAdapter.get_Properties()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestDetails">
            <summary>Shim type of NUnit.Framework.TestDetails</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestDetails.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestDetails.#ctor(NUnit.Framework.TestDetails)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestDetails.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestDetails.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.ConstructorObjectMethodInfoStringStringBoolean">
            <summary>Sets the shim of TestDetails.TestDetails(Object fixture, MethodInfo method, String fullName, String type, Boolean isSuite)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.FixtureGet">
            <summary>Sets the shim of TestDetails.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.FixtureSetObject">
            <summary>Sets the shim of TestDetails.set_Fixture(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.FullNameGet">
            <summary>Sets the shim of TestDetails.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.FullNameSetString">
            <summary>Sets the shim of TestDetails.set_FullName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.IsSuiteGet">
            <summary>Sets the shim of TestDetails.get_IsSuite()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.IsSuiteSetBoolean">
            <summary>Sets the shim of TestDetails.set_IsSuite(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.MethodGet">
            <summary>Sets the shim of TestDetails.get_Method()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.MethodSetMethodInfo">
            <summary>Sets the shim of TestDetails.set_Method(MethodInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.TypeGet">
            <summary>Sets the shim of TestDetails.get_Type()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.TypeSetString">
            <summary>Sets the shim of TestDetails.set_Type(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestDetails.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.AllInstances.FixtureGet">
            <summary>Sets the shim of TestDetails.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.AllInstances.FixtureSetObject">
            <summary>Sets the shim of TestDetails.set_Fixture(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.AllInstances.FullNameGet">
            <summary>Sets the shim of TestDetails.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.AllInstances.FullNameSetString">
            <summary>Sets the shim of TestDetails.set_FullName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.AllInstances.IsSuiteGet">
            <summary>Sets the shim of TestDetails.get_IsSuite()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.AllInstances.IsSuiteSetBoolean">
            <summary>Sets the shim of TestDetails.set_IsSuite(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.AllInstances.MethodGet">
            <summary>Sets the shim of TestDetails.get_Method()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.AllInstances.MethodSetMethodInfo">
            <summary>Sets the shim of TestDetails.set_Method(MethodInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.AllInstances.TypeGet">
            <summary>Sets the shim of TestDetails.get_Type()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestDetails.AllInstances.TypeSetString">
            <summary>Sets the shim of TestDetails.set_Type(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestFixtureAttribute">
            <summary>Shim type of NUnit.Framework.TestFixtureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureAttribute.#ctor(NUnit.Framework.TestFixtureAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.ArgumentsGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.CategoriesGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Categories()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.CategoryGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.CategorySetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.Constructor">
            <summary>Sets the shim of TestFixtureAttribute.TestFixtureAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.ConstructorObjectArray">
            <summary>Sets the shim of TestFixtureAttribute.TestFixtureAttribute(Object[] arguments)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.DescriptionGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.DescriptionSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.IgnoreGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Ignore()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.IgnoreReasonGet">
            <summary>Sets the shim of TestFixtureAttribute.get_IgnoreReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.IgnoreReasonSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_IgnoreReason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.IgnoreSetBoolean">
            <summary>Sets the shim of TestFixtureAttribute.set_Ignore(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.TypeArgsGet">
            <summary>Sets the shim of TestFixtureAttribute.get_TypeArgs()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.TypeArgsSetTypeArray">
            <summary>Sets the shim of TestFixtureAttribute.set_TypeArgs(Type[] value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.ArgumentsGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.CategoriesGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Categories()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.CategoryGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.CategorySetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.DescriptionGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.DescriptionSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.IgnoreGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Ignore()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.IgnoreReasonGet">
            <summary>Sets the shim of TestFixtureAttribute.get_IgnoreReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.IgnoreReasonSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_IgnoreReason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.IgnoreSetBoolean">
            <summary>Sets the shim of TestFixtureAttribute.set_Ignore(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.TypeArgsGet">
            <summary>Sets the shim of TestFixtureAttribute.get_TypeArgs()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.TypeArgsSetTypeArray">
            <summary>Sets the shim of TestFixtureAttribute.set_TypeArgs(Type[] value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestFixtureSetUpAttribute">
            <summary>Shim type of NUnit.Framework.TestFixtureSetUpAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureSetUpAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureSetUpAttribute.#ctor(NUnit.Framework.TestFixtureSetUpAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureSetUpAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureSetUpAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSetUpAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSetUpAttribute.Constructor">
            <summary>Sets the shim of TestFixtureSetUpAttribute.TestFixtureSetUpAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestFixtureSetUpAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestFixtureTearDownAttribute">
            <summary>Shim type of NUnit.Framework.TestFixtureTearDownAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureTearDownAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureTearDownAttribute.#ctor(NUnit.Framework.TestFixtureTearDownAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureTearDownAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureTearDownAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureTearDownAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureTearDownAttribute.Constructor">
            <summary>Sets the shim of TestFixtureTearDownAttribute.TestFixtureTearDownAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestFixtureTearDownAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTextMessageWriter">
            <summary>Shim type of NUnit.Framework.TextMessageWriter</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTextMessageWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTextMessageWriter.#ctor(NUnit.Framework.TextMessageWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTextMessageWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTextMessageWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTextMessageWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.Constructor">
            <summary>Sets the shim of TextMessageWriter.TextMessageWriter()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.ConstructorStringObjectArray">
            <summary>Sets the shim of TextMessageWriter.TextMessageWriter(String userMessage, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.DisplayDifferencesConstraint">
            <summary>Sets the shim of TextMessageWriter.DisplayDifferences(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.DisplayDifferencesObjectObject">
            <summary>Sets the shim of TextMessageWriter.DisplayDifferences(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.DisplayDifferencesObjectObjectTolerance">
            <summary>Sets the shim of TextMessageWriter.DisplayDifferences(Object expected, Object actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.DisplayStringDifferencesStringStringInt32BooleanBoolean">
            <summary>Sets the shim of TextMessageWriter.DisplayStringDifferences(String expected, String actual, Int32 mismatch, Boolean ignoreCase, Boolean clipping)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.MaxLineLengthGet">
            <summary>Sets the shim of TextMessageWriter.get_MaxLineLength()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.MaxLineLengthSetInt32">
            <summary>Sets the shim of TextMessageWriter.set_MaxLineLength(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.StaticConstructor">
            <summary>Sets the shim of TextMessageWriter.TextMessageWriter()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteActualLineConstraint">
            <summary>Sets the shim of TextMessageWriter.WriteActualLine(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteActualLineObject">
            <summary>Sets the shim of TextMessageWriter.WriteActualLine(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteActualValueObject">
            <summary>Sets the shim of TextMessageWriter.WriteActualValue(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteArrayArray">
            <summary>Sets the shim of TextMessageWriter.WriteArray(Array array)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteCaretLineInt32">
            <summary>Sets the shim of TextMessageWriter.WriteCaretLine(Int32 mismatch)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteCharChar">
            <summary>Sets the shim of TextMessageWriter.WriteChar(Char c)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteCollectionElementsIEnumerableInt32Int32">
            <summary>Sets the shim of TextMessageWriter.WriteCollectionElements(IEnumerable collection, Int32 start, Int32 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteConnectorString">
            <summary>Sets the shim of TextMessageWriter.WriteConnector(String connector)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteDateTimeDateTime">
            <summary>Sets the shim of TextMessageWriter.WriteDateTime(DateTime dt)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteDecimalDecimal">
            <summary>Sets the shim of TextMessageWriter.WriteDecimal(Decimal d)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteDoubleDouble">
            <summary>Sets the shim of TextMessageWriter.WriteDouble(Double d)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteExpectedLineConstraint">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedLine(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteExpectedLineObject">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedLine(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteExpectedLineObjectTolerance">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedLine(Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteExpectedValueObject">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedValue(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteFloatSingle">
            <summary>Sets the shim of TextMessageWriter.WriteFloat(Single f)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteMessageLineInt32StringObjectArray">
            <summary>Sets the shim of TextMessageWriter.WriteMessageLine(Int32 level, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteModifierString">
            <summary>Sets the shim of TextMessageWriter.WriteModifier(String modifier)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WritePredicateString">
            <summary>Sets the shim of TextMessageWriter.WritePredicate(String predicate)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteStringString">
            <summary>Sets the shim of TextMessageWriter.WriteString(String s)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.WriteValueObject">
            <summary>Sets the shim of TextMessageWriter.WriteValue(Object val)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.DisplayDifferencesConstraint">
            <summary>Sets the shim of TextMessageWriter.DisplayDifferences(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.DisplayDifferencesObjectObject">
            <summary>Sets the shim of TextMessageWriter.DisplayDifferences(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.DisplayDifferencesObjectObjectTolerance">
            <summary>Sets the shim of TextMessageWriter.DisplayDifferences(Object expected, Object actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.DisplayStringDifferencesStringStringInt32BooleanBoolean">
            <summary>Sets the shim of TextMessageWriter.DisplayStringDifferences(String expected, String actual, Int32 mismatch, Boolean ignoreCase, Boolean clipping)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.MaxLineLengthGet">
            <summary>Sets the shim of TextMessageWriter.get_MaxLineLength()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.MaxLineLengthSetInt32">
            <summary>Sets the shim of TextMessageWriter.set_MaxLineLength(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteActualLineConstraint">
            <summary>Sets the shim of TextMessageWriter.WriteActualLine(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteActualLineObject">
            <summary>Sets the shim of TextMessageWriter.WriteActualLine(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteActualValueObject">
            <summary>Sets the shim of TextMessageWriter.WriteActualValue(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteArrayArray">
            <summary>Sets the shim of TextMessageWriter.WriteArray(Array array)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteCaretLineInt32">
            <summary>Sets the shim of TextMessageWriter.WriteCaretLine(Int32 mismatch)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteCharChar">
            <summary>Sets the shim of TextMessageWriter.WriteChar(Char c)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteCollectionElementsIEnumerableInt32Int32">
            <summary>Sets the shim of TextMessageWriter.WriteCollectionElements(IEnumerable collection, Int32 start, Int32 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteConnectorString">
            <summary>Sets the shim of TextMessageWriter.WriteConnector(String connector)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteDateTimeDateTime">
            <summary>Sets the shim of TextMessageWriter.WriteDateTime(DateTime dt)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteDecimalDecimal">
            <summary>Sets the shim of TextMessageWriter.WriteDecimal(Decimal d)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteDoubleDouble">
            <summary>Sets the shim of TextMessageWriter.WriteDouble(Double d)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteExpectedLineConstraint">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedLine(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteExpectedLineObject">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedLine(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteExpectedLineObjectTolerance">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedLine(Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteExpectedValueObject">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedValue(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteFloatSingle">
            <summary>Sets the shim of TextMessageWriter.WriteFloat(Single f)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteMessageLineInt32StringObjectArray">
            <summary>Sets the shim of TextMessageWriter.WriteMessageLine(Int32 level, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteModifierString">
            <summary>Sets the shim of TextMessageWriter.WriteModifier(String modifier)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WritePredicateString">
            <summary>Sets the shim of TextMessageWriter.WritePredicate(String predicate)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteStringString">
            <summary>Sets the shim of TextMessageWriter.WriteString(String s)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTextMessageWriter.AllInstances.WriteValueObject">
            <summary>Sets the shim of TextMessageWriter.WriteValue(Object val)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTheoryAttribute">
            <summary>Shim type of NUnit.Framework.TheoryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTheoryAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTheoryAttribute.#ctor(NUnit.Framework.TheoryAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTheoryAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTheoryAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTheoryAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTheoryAttribute.Constructor">
            <summary>Sets the shim of TheoryAttribute.TheoryAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTheoryAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimThrows">
            <summary>Shim type of NUnit.Framework.Throws</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimThrows.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimThrows.#ctor(NUnit.Framework.Throws)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimThrows.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimThrows.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimThrows.InstanceOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of Throws.InstanceOf()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimThrows.TypeOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ExactTypeConstraint})">
            <summary>Sets the shim of Throws.TypeOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.ArgumentExceptionGet">
            <summary>Sets the shim of Throws.get_ArgumentException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.Constructor">
            <summary>Sets the shim of Throws.Throws()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.ExceptionGet">
            <summary>Sets the shim of Throws.get_Exception()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.InnerExceptionGet">
            <summary>Sets the shim of Throws.get_InnerException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.InstanceOfType">
            <summary>Sets the shim of Throws.InstanceOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.InvalidOperationExceptionGet">
            <summary>Sets the shim of Throws.get_InvalidOperationException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.NothingGet">
            <summary>Sets the shim of Throws.get_Nothing()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.TargetInvocationExceptionGet">
            <summary>Sets the shim of Throws.get_TargetInvocationException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.TypeOfType">
            <summary>Sets the shim of Throws.TypeOf(Type expectedType)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimThrows.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTimeoutAttribute">
            <summary>Shim type of NUnit.Framework.TimeoutAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTimeoutAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTimeoutAttribute.#ctor(NUnit.Framework.TimeoutAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTimeoutAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTimeoutAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTimeoutAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTimeoutAttribute.ConstructorInt32">
            <summary>Sets the shim of TimeoutAttribute.TimeoutAttribute(Int32 timeout)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTimeoutAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimValueSourceAttribute">
            <summary>Shim type of NUnit.Framework.ValueSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValueSourceAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValueSourceAttribute.#ctor(NUnit.Framework.ValueSourceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValueSourceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValueSourceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.ConstructorString">
            <summary>Sets the shim of ValueSourceAttribute.ValueSourceAttribute(String sourceName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.ConstructorTypeString">
            <summary>Sets the shim of ValueSourceAttribute.ValueSourceAttribute(Type sourceType, String sourceName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.SourceNameGet">
            <summary>Sets the shim of ValueSourceAttribute.get_SourceName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.SourceTypeGet">
            <summary>Sets the shim of ValueSourceAttribute.get_SourceType()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimValueSourceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.AllInstances.SourceNameGet">
            <summary>Sets the shim of ValueSourceAttribute.get_SourceName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.AllInstances.SourceTypeGet">
            <summary>Sets the shim of ValueSourceAttribute.get_SourceType()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimValuesAttribute">
            <summary>Shim type of NUnit.Framework.ValuesAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValuesAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValuesAttribute.#ctor(NUnit.Framework.ValuesAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValuesAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValuesAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.ConstructorObject">
            <summary>Sets the shim of ValuesAttribute.ValuesAttribute(Object arg1)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.ConstructorObjectArray">
            <summary>Sets the shim of ValuesAttribute.ValuesAttribute(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.ConstructorObjectObject">
            <summary>Sets the shim of ValuesAttribute.ValuesAttribute(Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.ConstructorObjectObjectObject">
            <summary>Sets the shim of ValuesAttribute.ValuesAttribute(Object arg1, Object arg2, Object arg3)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.GetDataParameterInfo">
            <summary>Sets the shim of ValuesAttribute.GetData(ParameterInfo parameter)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimValuesAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.AllInstances.GetDataParameterInfo">
            <summary>Sets the shim of ValuesAttribute.GetData(ParameterInfo parameter)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubAssert">
            <summary>Stub type of NUnit.Framework.Assert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssert.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssert.InitializeStub">
            <summary>Initializes a new instance of type StubAssert</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssert.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssert.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssert.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubAssertionException">
            <summary>Stub type of NUnit.Framework.AssertionException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubAssertionException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubAssertionException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.InitializeStub">
            <summary>Initializes a new instance of type StubAssertionException</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubAssertionHelper">
            <summary>Stub type of NUnit.Framework.AssertionHelper</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionHelper.InitializeStub">
            <summary>Initializes a new instance of type StubAssertionHelper</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubAssume">
            <summary>Stub type of NUnit.Framework.Assume</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssume.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssume.InitializeStub">
            <summary>Initializes a new instance of type StubAssume</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssume.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssume.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssume.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubCategoryAttribute">
            <summary>Stub type of NUnit.Framework.CategoryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCategoryAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCategoryAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubCategoryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCategoryAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCategoryAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCategoryAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCategoryAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCategoryAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCategoryAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCategoryAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubCollectionAssert">
            <summary>Stub type of NUnit.Framework.CollectionAssert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCollectionAssert.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCollectionAssert.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionAssert</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCollectionAssert.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCollectionAssert.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCollectionAssert.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubCombinatorialAttribute">
            <summary>Stub type of NUnit.Framework.CombinatorialAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombinatorialAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombinatorialAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombinatorialAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombinatorialAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombinatorialAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombinatorialAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubCombinatorialAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombinatorialAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombinatorialAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombinatorialAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombinatorialAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombinatorialAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCombinatorialAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCombinatorialAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCombinatorialAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCombinatorialAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubContains">
            <summary>Stub type of NUnit.Framework.Contains</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubContains.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubContains.InitializeStub">
            <summary>Initializes a new instance of type StubContains</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubContains.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubContains.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubContains.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubCultureAttribute">
            <summary>Stub type of NUnit.Framework.CultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCultureAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCultureAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubCultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCultureAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCultureAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCultureAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCultureAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCultureAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCultureAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCultureAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubDatapointAttribute">
            <summary>Stub type of NUnit.Framework.DatapointAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDatapointAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubDatapointsAttribute">
            <summary>Stub type of NUnit.Framework.DatapointsAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointsAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointsAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointsAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointsAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointsAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointsAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDatapointsAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointsAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointsAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointsAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointsAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointsAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointsAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointsAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointsAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointsAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubDescriptionAttribute">
            <summary>Stub type of NUnit.Framework.DescriptionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDescriptionAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDescriptionAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDescriptionAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDescriptionAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDescriptionAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDescriptionAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDescriptionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDescriptionAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDescriptionAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDescriptionAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDescriptionAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDescriptionAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDescriptionAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDescriptionAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDescriptionAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDescriptionAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubExpectedExceptionAttribute">
            <summary>Stub type of NUnit.Framework.ExpectedExceptionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubExpectedExceptionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubExpectedExceptionAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubExplicitAttribute">
            <summary>Stub type of NUnit.Framework.ExplicitAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExplicitAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExplicitAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubExplicitAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExplicitAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExplicitAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExplicitAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubExplicitAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubExplicitAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubExplicitAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubExplicitAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubFileAssert">
            <summary>Stub type of NUnit.Framework.FileAssert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubFileAssert.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubFileAssert.InitializeStub">
            <summary>Initializes a new instance of type StubFileAssert</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubFileAssert.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubFileAssert.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubFileAssert.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubGlobalSettings">
            <summary>Stub type of NUnit.Framework.GlobalSettings</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubGlobalSettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubGlobalSettings.InitializeStub">
            <summary>Initializes a new instance of type StubGlobalSettings</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubGlobalSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubGlobalSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubGlobalSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubGuard">
            <summary>Stub type of NUnit.Framework.Guard</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubGuard.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubGuard.InitializeStub">
            <summary>Initializes a new instance of type StubGuard</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubGuard.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubGuard.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubGuard.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubHas">
            <summary>Stub type of NUnit.Framework.Has</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubHas.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubHas.InitializeStub">
            <summary>Initializes a new instance of type StubHas</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubHas.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubHas.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubHas.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubIExpectException">
            <summary>Stub type of NUnit.Framework.IExpectException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIExpectException.#ctor">
            <summary>Initializes a new instance of type StubIExpectException</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIExpectException.HandleExceptionException">
            <summary>Sets the stub of IExpectException.HandleException(Exception ex)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIExpectException.n::NUnit#Framework#IExpectException#HandleException(System.Exception)">
            <summary>Sets the stub of IExpectException.HandleException(Exception ex)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubINUnitEqualityComparer">
            <summary>Stub type of NUnit.Framework.INUnitEqualityComparer</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubINUnitEqualityComparer.#ctor">
            <summary>Initializes a new instance of type StubINUnitEqualityComparer</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubINUnitEqualityComparer.AreEqualObjectObjectToleranceRef">
            <summary>Sets the stub of INUnitEqualityComparer.AreEqual(Object x, Object y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubINUnitEqualityComparer.n::NUnit#Framework#INUnitEqualityComparer#AreEqual(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance@)">
            <summary>Sets the stub of INUnitEqualityComparer.AreEqual(Object x, Object y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubINUnitEqualityComparer`1">
            <summary>Stub type of NUnit.Framework.INUnitEqualityComparer`1</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubINUnitEqualityComparer`1.#ctor">
            <summary>Initializes a new instance of type StubINUnitEqualityComparer</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubINUnitEqualityComparer`1.AreEqualT0T0ToleranceRef">
            <summary>Sets the stub of INUnitEqualityComparer`1.AreEqual(!0 x, !0 y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubINUnitEqualityComparer`1.n::NUnit#Framework#INUnitEqualityComparer{T}#AreEqual(`0,`0,NUnit.Framework.Constraints.Tolerance@)">
            <summary>Sets the stub of INUnitEqualityComparer`1.AreEqual(!0 x, !0 y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubITestAction">
            <summary>Stub type of NUnit.Framework.ITestAction</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubITestAction.#ctor">
            <summary>Initializes a new instance of type StubITestAction</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestAction.AfterTestTestDetails">
            <summary>Sets the stub of ITestAction.AfterTest(TestDetails testDetails)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestAction.BeforeTestTestDetails">
            <summary>Sets the stub of ITestAction.BeforeTest(TestDetails testDetails)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubITestAction.n::NUnit#Framework#ITestAction#AfterTest(NUnit.Framework.TestDetails)">
            <summary>Sets the stub of ITestAction.AfterTest(TestDetails testDetails)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubITestAction.n::NUnit#Framework#ITestAction#BeforeTest(NUnit.Framework.TestDetails)">
            <summary>Sets the stub of ITestAction.BeforeTest(TestDetails testDetails)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestAction.TargetsGet">
            <summary>Sets the stub of ITestAction.get_Targets()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubITestAction.n::NUnit#Framework#ITestAction#Targets">
            <summary>Sets the stub of ITestAction.get_Targets()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubITestCaseData">
            <summary>Stub type of NUnit.Framework.ITestCaseData</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubITestCaseData.#ctor">
            <summary>Initializes a new instance of type StubITestCaseData</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestCaseData.ArgumentsGet">
            <summary>Sets the stub of ITestCaseData.get_Arguments()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestCaseData.DescriptionGet">
            <summary>Sets the stub of ITestCaseData.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestCaseData.ExpectedExceptionGet">
            <summary>Sets the stub of ITestCaseData.get_ExpectedException()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestCaseData.ExpectedExceptionNameGet">
            <summary>Sets the stub of ITestCaseData.get_ExpectedExceptionName()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestCaseData.ExplicitGet">
            <summary>Sets the stub of ITestCaseData.get_Explicit()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestCaseData.HasExpectedResultGet">
            <summary>Sets the stub of ITestCaseData.get_HasExpectedResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestCaseData.IgnoreReasonGet">
            <summary>Sets the stub of ITestCaseData.get_IgnoreReason()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestCaseData.IgnoredGet">
            <summary>Sets the stub of ITestCaseData.get_Ignored()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestCaseData.ResultGet">
            <summary>Sets the stub of ITestCaseData.get_Result()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestCaseData.TestNameGet">
            <summary>Sets the stub of ITestCaseData.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubITestCaseData.n::NUnit#Framework#ITestCaseData#Arguments">
            <summary>Sets the stub of ITestCaseData.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubITestCaseData.n::NUnit#Framework#ITestCaseData#Description">
            <summary>Sets the stub of ITestCaseData.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubITestCaseData.n::NUnit#Framework#ITestCaseData#ExpectedException">
            <summary>Sets the stub of ITestCaseData.get_ExpectedException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubITestCaseData.n::NUnit#Framework#ITestCaseData#ExpectedExceptionName">
            <summary>Sets the stub of ITestCaseData.get_ExpectedExceptionName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubITestCaseData.n::NUnit#Framework#ITestCaseData#Explicit">
            <summary>Sets the stub of ITestCaseData.get_Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubITestCaseData.n::NUnit#Framework#ITestCaseData#HasExpectedResult">
            <summary>Sets the stub of ITestCaseData.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubITestCaseData.n::NUnit#Framework#ITestCaseData#IgnoreReason">
            <summary>Sets the stub of ITestCaseData.get_IgnoreReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubITestCaseData.n::NUnit#Framework#ITestCaseData#Ignored">
            <summary>Sets the stub of ITestCaseData.get_Ignored()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubITestCaseData.n::NUnit#Framework#ITestCaseData#Result">
            <summary>Sets the stub of ITestCaseData.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubITestCaseData.n::NUnit#Framework#ITestCaseData#TestName">
            <summary>Sets the stub of ITestCaseData.get_TestName()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubIgnoreAttribute">
            <summary>Stub type of NUnit.Framework.IgnoreAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubIgnoreAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubIgnoreException">
            <summary>Stub type of NUnit.Framework.IgnoreException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubIgnoreException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubIgnoreException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.InitializeStub">
            <summary>Initializes a new instance of type StubIgnoreException</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubIncludeExcludeAttribute">
            <summary>Stub type of NUnit.Framework.IncludeExcludeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubIncludeExcludeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubInconclusiveException">
            <summary>Stub type of NUnit.Framework.InconclusiveException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInconclusiveException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInconclusiveException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.InitializeStub">
            <summary>Initializes a new instance of type StubInconclusiveException</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubIs">
            <summary>Stub type of NUnit.Framework.Is</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIs.InitializeStub">
            <summary>Initializes a new instance of type StubIs</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubIz">
            <summary>Stub type of NUnit.Framework.Iz</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIz.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIz.InitializeStub">
            <summary>Initializes a new instance of type StubIz</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIz.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIz.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIz.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubList">
            <summary>Stub type of NUnit.Framework.List</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubList.InitializeStub">
            <summary>Initializes a new instance of type StubList</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubListMapper">
            <summary>Stub type of NUnit.Framework.ListMapper</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubListMapper.#ctor(System.Collections.ICollection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubListMapper.InitializeStub">
            <summary>Initializes a new instance of type StubListMapper</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubListMapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubListMapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubListMapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubPairwiseAttribute">
            <summary>Stub type of NUnit.Framework.PairwiseAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPairwiseAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPairwiseAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPairwiseAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPairwiseAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPairwiseAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPairwiseAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubPairwiseAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPairwiseAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPairwiseAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPairwiseAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPairwiseAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPairwiseAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPairwiseAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPairwiseAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPairwiseAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPairwiseAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubParameterDataAttribute">
            <summary>Stub type of NUnit.Framework.ParameterDataAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParameterDataAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParameterDataAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubParameterDataAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParameterDataAttribute.GetData(System.Reflection.ParameterInfo)">
            <summary>Sets the stub of ParameterDataAttribute.GetData(ParameterInfo parameter)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubParameterDataAttribute.GetDataParameterInfo">
            <summary>Sets the stub of ParameterDataAttribute.GetData(ParameterInfo parameter)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParameterDataAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubParameterDataAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParameterDataAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubParameterDataAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParameterDataAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubParameterDataAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParameterDataAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubParameterDataAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubParameterDataAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubParameterDataAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubParameterDataAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubParameterDataAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubParameterDataAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubPlatformAttribute">
            <summary>Stub type of NUnit.Framework.PlatformAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPlatformAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPlatformAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubPlatformAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPlatformAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPlatformAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPlatformAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPlatformAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPlatformAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPlatformAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPlatformAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubPropertyAttribute">
            <summary>Stub type of NUnit.Framework.PropertyAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.#ctor(System.String,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPropertyAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPropertyAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPropertyAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPropertyAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPropertyAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPropertyAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPropertyAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPropertyAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPropertyAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRandomAttribute">
            <summary>Stub type of NUnit.Framework.RandomAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.Double,System.Double,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.GetData(System.Reflection.ParameterInfo)">
            <summary>Sets the stub of RandomAttribute.GetData(ParameterInfo parameter)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomAttribute.GetDataParameterInfo">
            <summary>Sets the stub of RandomAttribute.GetData(ParameterInfo parameter)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRandomAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRandomAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRandomAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRandomAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRandomAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRandomizer">
            <summary>Stub type of NUnit.Framework.Randomizer</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomizer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomizer.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomizer.InitializeStub">
            <summary>Initializes a new instance of type StubRandomizer</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomizer.Next">
            <summary>Sets the stub of Random.Next()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomizer.Next(System.Int32)">
            <summary>Sets the stub of Random.Next(Int32 maxValue)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomizer.Next(System.Int32,System.Int32)">
            <summary>Sets the stub of Random.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomizer.Next01">
            <summary>Sets the stub of Random.Next()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomizer.NextBytes(System.Byte[])">
            <summary>Sets the stub of Random.NextBytes(Byte[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomizer.NextBytesByteArray">
            <summary>Sets the stub of Random.NextBytes(Byte[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomizer.NextDouble">
            <summary>Sets the stub of Random.NextDouble()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomizer.NextDouble01">
            <summary>Sets the stub of Random.NextDouble()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomizer.NextInt32">
            <summary>Sets the stub of Random.Next(Int32 maxValue)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomizer.NextInt32Int32">
            <summary>Sets the stub of Random.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomizer.Sample">
            <summary>Sets the stub of Random.Sample()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomizer.Sample01">
            <summary>Sets the stub of Random.Sample()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRandomizer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRandomizer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRandomizer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRangeAttribute">
            <summary>Stub type of NUnit.Framework.RangeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.Single,System.Single,System.Single)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRangeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.GetData(System.Reflection.ParameterInfo)">
            <summary>Sets the stub of ValuesAttribute.GetData(ParameterInfo parameter)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRangeAttribute.GetDataParameterInfo">
            <summary>Sets the stub of ValuesAttribute.GetData(ParameterInfo parameter)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRangeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRangeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRangeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRangeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRangeAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRangeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRangeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRangeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRangeAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRepeatAttribute">
            <summary>Stub type of NUnit.Framework.RepeatAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRepeatAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRepeatAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRepeatAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRepeatAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRepeatAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRepeatAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRepeatAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRepeatAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRepeatAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRepeatAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRequiredAddinAttribute">
            <summary>Stub type of NUnit.Framework.RequiredAddinAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiredAddinAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiredAddinAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiredAddinAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiredAddinAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiredAddinAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiredAddinAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRequiredAddinAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiredAddinAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiredAddinAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiredAddinAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiredAddinAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiredAddinAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiredAddinAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiredAddinAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiredAddinAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiredAddinAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRequiresMTAAttribute">
            <summary>Stub type of NUnit.Framework.RequiresMTAAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresMTAAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresMTAAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresMTAAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresMTAAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresMTAAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresMTAAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRequiresMTAAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresMTAAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresMTAAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresMTAAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresMTAAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresMTAAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresMTAAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresMTAAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresMTAAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresMTAAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRequiresSTAAttribute">
            <summary>Stub type of NUnit.Framework.RequiresSTAAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresSTAAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresSTAAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresSTAAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresSTAAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresSTAAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresSTAAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRequiresSTAAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresSTAAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresSTAAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresSTAAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresSTAAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresSTAAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresSTAAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresSTAAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresSTAAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresSTAAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRequiresThreadAttribute">
            <summary>Stub type of NUnit.Framework.RequiresThreadAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.#ctor(System.Threading.ApartmentState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresThreadAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresThreadAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRequiresThreadAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresThreadAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresThreadAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresThreadAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresThreadAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresThreadAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresThreadAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresThreadAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSequentialAttribute">
            <summary>Stub type of NUnit.Framework.SequentialAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSequentialAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSequentialAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSequentialAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSequentialAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSequentialAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSequentialAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSequentialAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSequentialAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSequentialAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSequentialAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSequentialAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSequentialAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSequentialAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSequentialAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSequentialAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSequentialAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSetCultureAttribute">
            <summary>Stub type of NUnit.Framework.SetCultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetCultureAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetCultureAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSetCultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetCultureAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetCultureAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetCultureAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetCultureAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetCultureAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetCultureAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetCultureAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSetUICultureAttribute">
            <summary>Stub type of NUnit.Framework.SetUICultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUICultureAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUICultureAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSetUICultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUICultureAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUICultureAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUICultureAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUICultureAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUICultureAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUICultureAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUICultureAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSetUpAttribute">
            <summary>Stub type of NUnit.Framework.SetUpAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSetUpAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSetUpFixtureAttribute">
            <summary>Stub type of NUnit.Framework.SetUpFixtureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSetUpFixtureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubStringAssert">
            <summary>Stub type of NUnit.Framework.StringAssert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubStringAssert.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubStringAssert.InitializeStub">
            <summary>Initializes a new instance of type StubStringAssert</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubStringAssert.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubStringAssert.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubStringAssert.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSuccessException">
            <summary>Stub type of NUnit.Framework.SuccessException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSuccessException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSuccessException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.InitializeStub">
            <summary>Initializes a new instance of type StubSuccessException</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSuiteAttribute">
            <summary>Stub type of NUnit.Framework.SuiteAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuiteAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuiteAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuiteAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuiteAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuiteAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuiteAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSuiteAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuiteAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuiteAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuiteAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuiteAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuiteAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuiteAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuiteAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuiteAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuiteAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTearDownAttribute">
            <summary>Stub type of NUnit.Framework.TearDownAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTearDownAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTearDownAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTearDownAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTearDownAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTearDownAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTearDownAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTearDownAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTearDownAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTearDownAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTearDownAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTearDownAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTearDownAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTearDownAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTearDownAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTearDownAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTearDownAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestActionAttribute">
            <summary>Stub type of NUnit.Framework.TestActionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.AfterTest(NUnit.Framework.TestDetails)">
            <summary>Sets the stub of TestActionAttribute.AfterTest(TestDetails testDetails)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.AfterTestTestDetails">
            <summary>Sets the stub of TestActionAttribute.AfterTest(TestDetails testDetails)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.BeforeTest(NUnit.Framework.TestDetails)">
            <summary>Sets the stub of TestActionAttribute.BeforeTest(TestDetails testDetails)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.BeforeTestTestDetails">
            <summary>Sets the stub of TestActionAttribute.BeforeTest(TestDetails testDetails)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestActionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.TargetsGet">
            <summary>Sets the stub of TestActionAttribute.get_Targets()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestActionAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestActionAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestActionAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestActionAttribute.Targets">
            <summary>Sets the stub of TestActionAttribute.get_Targets()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestActionAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestAttribute">
            <summary>Stub type of NUnit.Framework.TestAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestCaseAttribute">
            <summary>Stub type of NUnit.Framework.TestCaseAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.#ctor(System.Object,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestCaseAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestCaseData">
            <summary>Stub type of NUnit.Framework.TestCaseData</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseData.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseData.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseData.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseData.#ctor(System.Object,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseData.InitializeStub">
            <summary>Initializes a new instance of type StubTestCaseData</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestCaseSourceAttribute">
            <summary>Stub type of NUnit.Framework.TestCaseSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestCaseSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestContext">
            <summary>Stub type of NUnit.Framework.TestContext</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestContext.#ctor(System.Collections.IDictionary)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestContext.InitializeStub">
            <summary>Initializes a new instance of type StubTestContext</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestDetails">
            <summary>Stub type of NUnit.Framework.TestDetails</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestDetails.#ctor(System.Object,System.Reflection.MethodInfo,System.String,System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestDetails.InitializeStub">
            <summary>Initializes a new instance of type StubTestDetails</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestDetails.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestDetails.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestDetails.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestFixtureAttribute">
            <summary>Stub type of NUnit.Framework.TestFixtureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestFixtureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute">
            <summary>Stub type of NUnit.Framework.TestFixtureSetUpAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestFixtureSetUpAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureSetUpAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute">
            <summary>Stub type of NUnit.Framework.TestFixtureTearDownAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestFixtureTearDownAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureTearDownAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTextMessageWriter">
            <summary>Stub type of NUnit.Framework.TextMessageWriter</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.#ctor(System.String,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.AttachBackingFieldToMaxLineLength">
            <summary>Attaches delegates to emulate StubTextMessageWriter.MaxLineLength as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.AttachBackingFieldToNewLine">
            <summary>Attaches delegates to emulate StubTextMessageWriter.NewLine as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Close">
            <summary>Sets the stub of StringWriter.Close()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.Close01">
            <summary>Sets the stub of StringWriter.Close()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.DisplayDifferences(NUnit.Framework.Constraints.Constraint)">
            <summary>Sets the stub of TextMessageWriter.DisplayDifferences(Constraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.DisplayDifferences(System.Object,System.Object)">
            <summary>Sets the stub of TextMessageWriter.DisplayDifferences(Object expected, Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.DisplayDifferences(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)">
            <summary>Sets the stub of TextMessageWriter.DisplayDifferences(Object expected, Object actual, Tolerance tolerance)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.DisplayDifferencesConstraint">
            <summary>Sets the stub of TextMessageWriter.DisplayDifferences(Constraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.DisplayDifferencesObjectObject">
            <summary>Sets the stub of TextMessageWriter.DisplayDifferences(Object expected, Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.DisplayDifferencesObjectObjectTolerance">
            <summary>Sets the stub of TextMessageWriter.DisplayDifferences(Object expected, Object actual, Tolerance tolerance)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.DisplayStringDifferences(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>Sets the stub of TextMessageWriter.DisplayStringDifferences(String expected, String actual, Int32 mismatch, Boolean ignoreCase, Boolean clipping)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.DisplayStringDifferencesStringStringInt32BooleanBoolean">
            <summary>Sets the stub of TextMessageWriter.DisplayStringDifferences(String expected, String actual, Int32 mismatch, Boolean ignoreCase, Boolean clipping)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Dispose(System.Boolean)">
            <summary>Sets the stub of StringWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.DisposeBoolean">
            <summary>Sets the stub of StringWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.EncodingGet">
            <summary>Sets the stub of StringWriter.get_Encoding()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Flush">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.Flush01">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.FlushAsync">
            <summary>Sets the stub of StringWriter.FlushAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.FlushAsync01">
            <summary>Sets the stub of StringWriter.FlushAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.FormatProviderGet">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.GetStringBuilder">
            <summary>Sets the stub of StringWriter.GetStringBuilder()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.GetStringBuilder01">
            <summary>Sets the stub of StringWriter.GetStringBuilder()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.InitializeStub">
            <summary>Initializes a new instance of type StubTextMessageWriter</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.MaxLineLengthGet">
            <summary>Sets the stub of TextMessageWriter.get_MaxLineLength()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.MaxLineLengthSetInt32">
            <summary>Sets the stub of TextMessageWriter.set_MaxLineLength(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.NewLineGet">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.NewLineSetString">
            <summary>Sets the stub of TextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.ToString">
            <summary>Sets the stub of StringWriter.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.ToString01">
            <summary>Sets the stub of StringWriter.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.Boolean)">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.Char)">
            <summary>Sets the stub of StringWriter.Write(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.Decimal)">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.Double)">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.Int32)">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.Char[])">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.Int64)">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.Single)">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.UInt32)">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.Object)">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.String)">
            <summary>Sets the stub of StringWriter.Write(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.UInt64)">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of StringWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteActualValue(System.Object)">
            <summary>Sets the stub of TextMessageWriter.WriteActualValue(Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteActualValueObject">
            <summary>Sets the stub of TextMessageWriter.WriteActualValue(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteAsync(System.Char)">
            <summary>Sets the stub of StringWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteAsync(System.String)">
            <summary>Sets the stub of StringWriter.WriteAsync(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of StringWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteAsyncChar">
            <summary>Sets the stub of StringWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteAsyncCharArrayInt32Int32">
            <summary>Sets the stub of StringWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteAsyncString">
            <summary>Sets the stub of StringWriter.WriteAsync(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteBoolean">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteChar01">
            <summary>Sets the stub of StringWriter.Write(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteCharArray">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteCharArrayInt32Int32">
            <summary>Sets the stub of StringWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteCollectionElements(System.Collections.IEnumerable,System.Int32,System.Int32)">
            <summary>Sets the stub of TextMessageWriter.WriteCollectionElements(IEnumerable collection, Int32 start, Int32 max)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteCollectionElementsIEnumerableInt32Int32">
            <summary>Sets the stub of TextMessageWriter.WriteCollectionElements(IEnumerable collection, Int32 start, Int32 max)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteConnector(System.String)">
            <summary>Sets the stub of TextMessageWriter.WriteConnector(String connector)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteConnectorString">
            <summary>Sets the stub of TextMessageWriter.WriteConnector(String connector)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteDecimal01">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteDouble01">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteExpectedValue(System.Object)">
            <summary>Sets the stub of TextMessageWriter.WriteExpectedValue(Object expected)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteExpectedValueObject">
            <summary>Sets the stub of TextMessageWriter.WriteExpectedValue(Object expected)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteInt32">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteInt64">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.Boolean)">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.Char)">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.UInt32)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.Double)">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.String)">
            <summary>Sets the stub of TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.Decimal)">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.Int64)">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.Single)">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.Char[])">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.UInt64)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLine01">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineAsync">
            <summary>Sets the stub of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineAsync(System.Char)">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineAsync(System.String)">
            <summary>Sets the stub of StringWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineAsync01">
            <summary>Sets the stub of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineAsyncChar">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineAsyncCharArrayInt32Int32">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineAsyncString">
            <summary>Sets the stub of StringWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineBoolean">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineChar">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineCharArray">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineDecimal">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineDouble">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineInt32">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineInt64">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineObject">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineSingle">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineString">
            <summary>Sets the stub of TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineStringObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineStringObjectArray">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineStringObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineUInt32">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteLineUInt64">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteMessageLine(System.Int32,System.String,System.Object[])">
            <summary>Sets the stub of TextMessageWriter.WriteMessageLine(Int32 level, String message, Object[] args)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteMessageLineInt32StringObjectArray">
            <summary>Sets the stub of TextMessageWriter.WriteMessageLine(Int32 level, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteModifier(System.String)">
            <summary>Sets the stub of TextMessageWriter.WriteModifier(String modifier)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteModifierString">
            <summary>Sets the stub of TextMessageWriter.WriteModifier(String modifier)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteObject">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WritePredicate(System.String)">
            <summary>Sets the stub of TextMessageWriter.WritePredicate(String predicate)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WritePredicateString">
            <summary>Sets the stub of TextMessageWriter.WritePredicate(String predicate)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteSingle">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteString01">
            <summary>Sets the stub of StringWriter.Write(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteStringObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteStringObjectArray">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteStringObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteUInt32">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteUInt64">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTextMessageWriter.WriteValue(System.Object)">
            <summary>Sets the stub of TextMessageWriter.WriteValue(Object val)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTextMessageWriter.WriteValueObject">
            <summary>Sets the stub of TextMessageWriter.WriteValue(Object val)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTextMessageWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTextMessageWriter.Encoding">
            <summary>Sets the stub of StringWriter.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTextMessageWriter.FormatProvider">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTextMessageWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTextMessageWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTextMessageWriter.MaxLineLength">
            <summary>Sets the stub of TextMessageWriter.get_MaxLineLength()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTextMessageWriter.NewLine">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTheoryAttribute">
            <summary>Stub type of NUnit.Framework.TheoryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTheoryAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTheoryAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTheoryAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTheoryAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTheoryAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTheoryAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTheoryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTheoryAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTheoryAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTheoryAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTheoryAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTheoryAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTheoryAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTheoryAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTheoryAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTheoryAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubThrows">
            <summary>Stub type of NUnit.Framework.Throws</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubThrows.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubThrows.InitializeStub">
            <summary>Initializes a new instance of type StubThrows</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubThrows.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubThrows.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubThrows.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTimeoutAttribute">
            <summary>Stub type of NUnit.Framework.TimeoutAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTimeoutAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTimeoutAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTimeoutAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTimeoutAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTimeoutAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTimeoutAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTimeoutAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTimeoutAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTimeoutAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTimeoutAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubValueSourceAttribute">
            <summary>Stub type of NUnit.Framework.ValueSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValueSourceAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValueSourceAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubValueSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValueSourceAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValueSourceAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValueSourceAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValueSourceAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValueSourceAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValueSourceAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValueSourceAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubValuesAttribute">
            <summary>Stub type of NUnit.Framework.ValuesAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.#ctor(System.Object,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValuesAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.GetData(System.Reflection.ParameterInfo)">
            <summary>Sets the stub of ValuesAttribute.GetData(ParameterInfo parameter)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValuesAttribute.GetDataParameterInfo">
            <summary>Sets the stub of ValuesAttribute.GetData(ParameterInfo parameter)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValuesAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubValuesAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValuesAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValuesAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValuesAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValuesAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValuesAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValuesAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValuesAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
    </members>
</doc>
